[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 0 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 0 (default value).
  option -eva-widening-delay set to 1.
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 0 (default value).
  option -eva-ilevel set to 8 (default value).
  option -eva-plevel set to 10.
  option -eva-subdivide-non-linear set to 0 (default value).
  option -eva-remove-redundant-alarms set to false.
  option -eva-domains set to 'cvalue' (default value).
  option -eva-split-return set to '' (default value).
  option -eva-equality-through-calls set to 'none'.
  option -eva-octagon-through-calls set to false (default value).
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva] solitaire.c:128: starting to merge loop iterations
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds write. assert \valid(tmp_17);
                       (tmp_17 from d++)
[eva] using specification for function putchar
[eva:alarm] solitaire.c:191: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status invalid.
[eva:alarm] solitaire.c:191: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:185: Trace partitioning superposing up to 100 states
[eva] using specification for function printf_va_1
[eva] solitaire.c:213: starting to merge loop iterations
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:107: starting to merge loop iterations
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds write. assert \valid(tmp_6);
                       (tmp_6 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds write. assert \valid(tmp_10);
                       (tmp_10 from d++)
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:alarm] solitaire.c:146: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva] solitaire.c:149: starting to merge loop iterations
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds write. assert \valid(tmp_23);
                       (tmp_23 from d++)
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: starting to merge loop iterations
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:231: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:68: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.a);
[eva:alarm] solitaire.c:69: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.b);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..1952],0%32).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b - 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {224; 256}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {192; 224; 256}).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:74: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:75: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:78: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:80: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - hi;
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert 54 - hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - lo;
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert 54 - lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:alarm] solitaire.c:87: Warning: 
  out of bounds read. assert \valid_read(source + (int)(lo - 1));
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:93: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds write. assert \valid(tmp);
                       (tmp from d++)
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:97: starting to merge loop iterations
[eva:garbled-mix:write] solitaire.c:98: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_1.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds write. assert \valid(tmp_1);
                       (tmp_1 from d++)
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to *tmp_1
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:107: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds read. assert \valid_read(tmp_4);
                      (tmp_4 from s++)
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds read. assert \valid_read(tmp_5);
                      (tmp_5 from s++)
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:109: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:110: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_6.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds read. assert \valid_read(tmp_7);
                      (tmp_7 from s++)
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to *tmp_6
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:112: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert -2147483648 ≤ nccut + hi;
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert nccut + hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:113: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_8.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds read. assert \valid_read(tmp_9);
                      (tmp_9 from s++)
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to *tmp_8
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:115: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_10.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to *tmp_10
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nlo - nccut) - lo;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert (int)(nlo - nccut) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert state.a + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:118: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nlo - nccut) - lo;
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow. assert (int)(nlo - nccut) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert state.b + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:119: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:124: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds read. assert \valid_read(tmp_13);
                      (tmp_13 from s++)
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds read. assert \valid_read(tmp_14);
                      (tmp_14 from s++)
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:126: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nlo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert nccut - nlo ≤ 2147483647;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nccut - nlo) + lo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert (int)(nccut - nlo) + lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:127: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_15.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds read. assert \valid_read(tmp_16);
                      (tmp_16 from s++)
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to *tmp_15
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:129: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:130: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_17.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds read. assert \valid_read(tmp_18);
                      (tmp_18 from s++)
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to *tmp_17
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:132: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_19.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to *tmp_19
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:136: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:136: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:136: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:136: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:136: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:137: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:139: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:139: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:139: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:139: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:139: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:140: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nhi;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert (int)(53 - nccut) + nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nhi;
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert nccut - nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds read. assert \valid_read(tmp_22);
                      (tmp_22 from s++)
[eva:garbled-mix:write] solitaire.c:147: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:148: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_23.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds read. assert \valid_read(tmp_24);
                      (tmp_24 from s++)
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to *tmp_23
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds read. assert \valid_read(tmp_25);
                      (tmp_25 from s++)
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:151: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:152: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_26.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds read. assert \valid_read(tmp_27);
                      (tmp_27 from s++)
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to *tmp_26
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:154: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_28.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to *tmp_28
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(53 - nccut) + nlo) - lo;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert (int)((int)(53 - nccut) + nlo) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert state.a + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:157: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(53 - nccut) + nlo) - lo;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow. assert (int)((int)(53 - nccut) + nlo) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert state.b + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:158: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:160: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:161: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:162: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + 0);
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + *(state.deck + 0));
[eva:garbled-mix:write] solitaire.c:163: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert -2147483648 ≤ output - 26;
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert output - 26 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:170: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:174: 
  Assigning imprecise value to lastout.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds write. assert \valid(state.spare + i);
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds read.
  assert \valid_read(state.deck + (int)((int)(i + kval) % 53));
[eva:garbled-mix:write] solitaire.c:220: 
  Assigning imprecise value to *(state.spare + i)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds read. assert \valid_read(state.deck + 53);
[eva:garbled-mix:write] solitaire.c:221: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert state.a + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.a + 53) - kval;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert (int)(state.a + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.a + 53) - kval) % 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert (int)((int)(state.a + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:223: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert state.b + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.b + 53) - kval;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert (int)(state.b + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.b + 53) - kval) % 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert (int)((int)(state.b + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:225: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:226: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:227: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:228: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:186: Warning: 
  out of bounds read. assert \valid_read(state.deck + i);
[eva:alarm] solitaire.c:187: Warning: 
  signed overflow. assert -2147483648 ≤ (int)' ' + *(state.deck + i);
[eva:alarm] solitaire.c:187: Warning: 
  signed overflow. assert (int)' ' + *(state.deck + i) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:70: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.a + 1));
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:88: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:96: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp_0.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds read. assert \valid_read(tmp_0);
                      (tmp_0 from s++)
[eva:garbled-mix:write] solitaire.c:99: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_2.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds read. assert \valid_read(tmp_2);
                      (tmp_2 from s++)
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_4.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to tmp_5.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_7.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_9.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:116: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_11.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds read. assert \valid_read(tmp_11);
                      (tmp_11 from s++)
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_13.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to tmp_14.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_16.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_18.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:133: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_20.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds read. assert \valid_read(tmp_20);
                      (tmp_20 from s++)
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_22.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_24.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to tmp_25.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_27.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:155: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_29.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds read. assert \valid_read(tmp_29);
                      (tmp_29 from s++)
[eva:alarm] solitaire.c:173: Warning: 
  signed overflow.
  assert cocount + (int)(lastout ≡ output? 1: 0) ≤ 2147483647;
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state{.a; .b} ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
       .deck ∈ {{ &state + [0..476] }}
       {.spare; .deck1[0..56]; .deck2[0..56]} ∈
       {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  cocount ∈ [0..2147483647]
  rounds ∈ {-1; 0}
  source ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  s ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  sb ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  d ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  hi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nlo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nhi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nccut ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  output ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
[eva:final-states] Values at end of function print_deck:
  i ∈ {54}
  S___fc_stdout[0] ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function key_deck:
  state ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [-192..63] or UNINITIALIZED
  tmp ∈ {{ garbled mix of &{state} (origin: Misaligned) }} or UNINITIALIZED
  S___fc_stdout[0] ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
               [1] ∈ [--..--]
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  4 functions analyzed (out of 6): 66% coverage.
  In these functions, 336 statements reached (out of 377): 89% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  216 alarms generated by the analysis:
     134 integer overflows
      68 invalid memory accesses
      14 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     5 valid     9 unknown     0 invalid     14 total
  35% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 1 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 16.
  option -eva-widening-delay set to 1.
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 10.
  option -eva-ilevel set to 12.
  option -eva-plevel set to 20.
  option -eva-subdivide-non-linear set to 20.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,symbolic-locations'.
  option -eva-split-return set to '' (default value).
  option -eva-equality-through-calls set to 'none'.
  option -eva-octagon-through-calls set to false (default value).
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds write. assert \valid(tmp_17);
                       (tmp_17 from d++)
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:107: starting to merge loop iterations
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds write. assert \valid(tmp_6);
                       (tmp_6 from d++)
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds write. assert \valid(tmp_10);
                       (tmp_10 from d++)
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva] solitaire.c:149: starting to merge loop iterations
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds write. assert \valid(tmp_23);
                       (tmp_23 from d++)
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: starting to merge loop iterations
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:68: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.a);
[eva:alarm] solitaire.c:69: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.b);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..1952],0%32).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b - 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..1984],0%32).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets {288}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {224}).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:74: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:75: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:78: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:80: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - hi;
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert 54 - hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - lo;
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert 54 - lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:alarm] solitaire.c:87: Warning: 
  out of bounds read. assert \valid_read(source + (int)(lo - 1));
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:93: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds write. assert \valid(tmp);
                       (tmp from d++)
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:97: starting to merge loop iterations
[eva:garbled-mix:write] solitaire.c:98: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_1.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds write. assert \valid(tmp_1);
                       (tmp_1 from d++)
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to *tmp_1
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:107: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds read. assert \valid_read(tmp_4);
                      (tmp_4 from s++)
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds read. assert \valid_read(tmp_5);
                      (tmp_5 from s++)
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:109: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:110: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_6.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds read. assert \valid_read(tmp_7);
                      (tmp_7 from s++)
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to *tmp_6
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:112: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert -2147483648 ≤ nccut + hi;
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert nccut + hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:113: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_8.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds read. assert \valid_read(tmp_9);
                      (tmp_9 from s++)
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to *tmp_8
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:115: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_10.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to *tmp_10
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nlo - nccut) - lo;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert (int)(nlo - nccut) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert state.a + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:118: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert state.b + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:119: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:124: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds read. assert \valid_read(tmp_13);
                      (tmp_13 from s++)
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds read. assert \valid_read(tmp_14);
                      (tmp_14 from s++)
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:126: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nlo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert nccut - nlo ≤ 2147483647;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nccut - nlo) + lo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert (int)(nccut - nlo) + lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:127: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_15.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds read. assert \valid_read(tmp_16);
                      (tmp_16 from s++)
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to *tmp_15
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:129: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:130: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_17.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds read. assert \valid_read(tmp_18);
                      (tmp_18 from s++)
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to *tmp_17
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:132: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_19.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to *tmp_19
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:136: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:137: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:139: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:140: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nhi;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert (int)(53 - nccut) + nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nhi;
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert nccut - nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds read. assert \valid_read(tmp_22);
                      (tmp_22 from s++)
[eva:garbled-mix:write] solitaire.c:147: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:148: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_23.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds read. assert \valid_read(tmp_24);
                      (tmp_24 from s++)
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to *tmp_23
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds read. assert \valid_read(tmp_25);
                      (tmp_25 from s++)
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:151: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:152: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_26.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds read. assert \valid_read(tmp_27);
                      (tmp_27 from s++)
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to *tmp_26
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:154: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_28.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to *tmp_28
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(53 - nccut) + nlo) - lo;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert (int)((int)(53 - nccut) + nlo) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert state.a + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:157: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert state.b + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:158: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:160: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:161: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:162: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + 0);
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + *(state.deck + 0));
[eva:garbled-mix:write] solitaire.c:163: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert -2147483648 ≤ output - 26;
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert output - 26 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:170: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:174: 
  Assigning imprecise value to lastout.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds write. assert \valid(state.spare + i);
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds read.
  assert \valid_read(state.deck + (int)((int)(i + kval) % 53));
[eva:garbled-mix:write] solitaire.c:220: 
  Assigning imprecise value to *(state.spare + i)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds read. assert \valid_read(state.deck + 53);
[eva:garbled-mix:write] solitaire.c:221: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert state.a + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.a + 53) - kval;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert (int)(state.a + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.a + 53) - kval) % 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert (int)((int)(state.a + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:223: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert state.b + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.b + 53) - kval;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert (int)(state.b + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.b + 53) - kval) % 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert (int)((int)(state.b + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:225: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:226: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:227: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:228: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:70: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.a + 1));
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:88: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:96: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp_0.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds read. assert \valid_read(tmp_0);
                      (tmp_0 from s++)
[eva:garbled-mix:write] solitaire.c:99: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_2.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds read. assert \valid_read(tmp_2);
                      (tmp_2 from s++)
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_4.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to tmp_5.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_7.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_9.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:116: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_11.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds read. assert \valid_read(tmp_11);
                      (tmp_11 from s++)
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_13.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to tmp_14.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_16.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_18.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:133: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_20.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds read. assert \valid_read(tmp_20);
                      (tmp_20 from s++)
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_22.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_24.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to tmp_25.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_27.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:155: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_29.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds read. assert \valid_read(tmp_29);
                      (tmp_29 from s++)
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva] solitaire.c:219: Trace partitioning superposing up to 300 states
[eva] solitaire.c:219: Trace partitioning superposing up to 400 states
[eva] solitaire.c:213: starting to merge loop iterations
[eva:alarm] solitaire.c:173: Warning: 
  signed overflow.
  assert cocount + (int)(lastout ≡ output? 1: 0) ≤ 2147483647;
[eva] solitaire.c:219: Trace partitioning superposing up to 500 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 17 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state{.a; .b} ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
       .deck ∈ {{ &state + [0..476] }}
       {.spare; .deck1[0..56]; .deck2[0..56]} ∈
       {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  cocount ∈ [0..2147483647]
  rounds ∈ {-1; 0}
  source ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  s ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  sb ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  d ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  hi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nlo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nhi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nccut ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  output ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
[eva:final-states] Values at end of function key_deck:
  state ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ garbled mix of &{state} (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 321 statements reached (out of 364): 88% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  184 alarms generated by the analysis:
     104 integer overflows
      66 invalid memory accesses
      14 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     8 unknown     0 invalid     12 total
  33% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 2 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 32.
  option -eva-widening-delay set to 2.
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 20.
  option -eva-ilevel set to 16.
  option -eva-plevel set to 40.
  option -eva-subdivide-non-linear set to 40.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,symbolic-locations'.
  option -eva-split-return set to '' (default value).
  option -eva-equality-through-calls set to 'none'.
  option -eva-octagon-through-calls set to false (default value).
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds write. assert \valid(tmp_17);
                       (tmp_17 from d++)
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:107: starting to merge loop iterations
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds write. assert \valid(tmp_6);
                       (tmp_6 from d++)
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds write. assert \valid(tmp_10);
                       (tmp_10 from d++)
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva] solitaire.c:149: starting to merge loop iterations
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds write. assert \valid(tmp_23);
                       (tmp_23 from d++)
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: starting to merge loop iterations
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:68: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.a);
[eva:alarm] solitaire.c:69: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.b);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..1952],0%32).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b - 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets {288}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:74: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:75: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:78: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:80: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - hi;
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert 54 - hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - lo;
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert 54 - lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:alarm] solitaire.c:87: Warning: 
  out of bounds read. assert \valid_read(source + (int)(lo - 1));
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:93: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status invalid.
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds write. assert \valid(tmp);
                       (tmp from d++)
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:98: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_1.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds write. assert \valid(tmp_1);
                       (tmp_1 from d++)
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to *tmp_1
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:100: starting to merge loop iterations
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:107: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds read. assert \valid_read(tmp_4);
                      (tmp_4 from s++)
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds read. assert \valid_read(tmp_5);
                      (tmp_5 from s++)
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:109: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:110: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_6.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds read. assert \valid_read(tmp_7);
                      (tmp_7 from s++)
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to *tmp_6
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:112: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert -2147483648 ≤ nccut + hi;
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert nccut + hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:113: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_8.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds read. assert \valid_read(tmp_9);
                      (tmp_9 from s++)
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to *tmp_8
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:115: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_10.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to *tmp_10
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nlo - nccut) - lo;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert (int)(nlo - nccut) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert state.a + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:118: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert state.b + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:119: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:124: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds read. assert \valid_read(tmp_13);
                      (tmp_13 from s++)
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds read. assert \valid_read(tmp_14);
                      (tmp_14 from s++)
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:126: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nlo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert nccut - nlo ≤ 2147483647;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nccut - nlo) + lo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert (int)(nccut - nlo) + lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:127: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_15.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds read. assert \valid_read(tmp_16);
                      (tmp_16 from s++)
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to *tmp_15
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:129: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:130: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_17.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds read. assert \valid_read(tmp_18);
                      (tmp_18 from s++)
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to *tmp_17
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:132: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_19.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to *tmp_19
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:136: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:137: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:139: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:140: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nhi;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert (int)(53 - nccut) + nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nhi;
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert nccut - nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds read. assert \valid_read(tmp_22);
                      (tmp_22 from s++)
[eva:garbled-mix:write] solitaire.c:147: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:148: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_23.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds read. assert \valid_read(tmp_24);
                      (tmp_24 from s++)
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to *tmp_23
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds read. assert \valid_read(tmp_25);
                      (tmp_25 from s++)
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:151: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:152: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_26.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds read. assert \valid_read(tmp_27);
                      (tmp_27 from s++)
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to *tmp_26
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:154: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_28.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to *tmp_28
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(53 - nccut) + nlo) - lo;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert (int)((int)(53 - nccut) + nlo) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert state.a + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:157: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert state.b + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:158: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:160: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:161: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:162: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + 0);
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + *(state.deck + 0));
[eva:garbled-mix:write] solitaire.c:163: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert -2147483648 ≤ output - 26;
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert output - 26 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:170: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:174: 
  Assigning imprecise value to lastout.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..1920],0%32).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {224}).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status invalid.
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds write. assert \valid(state.spare + i);
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds read.
  assert \valid_read(state.deck + (int)((int)(i + kval) % 53));
[eva:garbled-mix:write] solitaire.c:220: 
  Assigning imprecise value to *(state.spare + i)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds read. assert \valid_read(state.deck + 53);
[eva:garbled-mix:write] solitaire.c:221: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert state.a + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.a + 53) - kval;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert (int)(state.a + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.a + 53) - kval) % 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert (int)((int)(state.a + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:223: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert state.b + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.b + 53) - kval;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert (int)(state.b + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.b + 53) - kval) % 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert (int)((int)(state.b + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:225: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:226: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:227: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:228: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:70: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.a + 1));
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:88: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:96: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp_0.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds read. assert \valid_read(tmp_0);
                      (tmp_0 from s++)
[eva:garbled-mix:write] solitaire.c:99: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_2.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds read. assert \valid_read(tmp_2);
                      (tmp_2 from s++)
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_4.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to tmp_5.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_7.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_9.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_11.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds read. assert \valid_read(tmp_11);
                      (tmp_11 from s++)
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_13.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to tmp_14.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_16.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_18.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_20.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds read. assert \valid_read(tmp_20);
                      (tmp_20 from s++)
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_22.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_24.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to tmp_25.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_27.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_29.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds read. assert \valid_read(tmp_29);
                      (tmp_29 from s++)
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva] solitaire.c:219: Trace partitioning superposing up to 300 states
[eva] solitaire.c:219: Trace partitioning superposing up to 400 states
[eva] solitaire.c:219: Trace partitioning superposing up to 500 states
[eva] solitaire.c:213: starting to merge loop iterations
[eva:alarm] solitaire.c:173: Warning: 
  signed overflow.
  assert cocount + (int)(lastout ≡ output? 1: 0) ≤ 2147483647;
[eva] solitaire.c:219: Trace partitioning superposing up to 600 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 17 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state{.a; .b} ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
       .deck ∈ {{ &state + [0..476] }}
       {.spare; .deck1[0..56]; .deck2[0..56]} ∈
       {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  cocount ∈ [0..2147483647]
  rounds ∈ {-1; 0}
  source ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  s ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  sb ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  d ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  hi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nlo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nhi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nccut ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  output ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
[eva:final-states] Values at end of function key_deck:
  state ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ garbled mix of &{state} (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 321 statements reached (out of 364): 88% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  184 alarms generated by the analysis:
     104 integer overflows
      66 invalid memory accesses
      14 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     8 unknown     0 invalid     12 total
  33% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 3 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 64.
  option -eva-widening-delay set to 2.
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 35.
  option -eva-ilevel set to 24.
  option -eva-plevel set to 70.
  option -eva-subdivide-non-linear set to 60.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,symbolic-locations'.
  option -eva-split-return set to '' (default value).
  option -eva-equality-through-calls set to 'none'.
  option -eva-octagon-through-calls set to false (default value).
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:107: starting to merge loop iterations
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds write. assert \valid(tmp_6);
                       (tmp_6 from d++)
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[kernel] solitaire.c:128: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva] solitaire.c:149: starting to merge loop iterations
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: starting to merge loop iterations
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:68: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.a);
[eva:alarm] solitaire.c:69: Warning: 
  out of bounds read. assert \valid_read(state.deck + state.b);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..1952],0%32).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b - 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:72: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.b + 1));
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets {288}).
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {256}).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert -2147483648 ≤ state.a - 1;
[eva:alarm] solitaire.c:73: Warning: 
  signed overflow. assert state.a - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:74: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:75: Warning: 
  out of bounds write. assert \valid(source + state.b);
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:78: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:78: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:80: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:81: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - hi;
[eva:alarm] solitaire.c:83: Warning: 
  signed overflow. assert 54 - hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert -2147483648 ≤ 54 - lo;
[eva:alarm] solitaire.c:84: Warning: 
  signed overflow. assert 54 - lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:87: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:alarm] solitaire.c:87: Warning: 
  out of bounds read. assert \valid_read(source + (int)(lo - 1));
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:93: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:94: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status invalid.
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds write. assert \valid(tmp);
                       (tmp from d++)
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:98: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_1.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds write. assert \valid(tmp_1);
                       (tmp_1 from d++)
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to *tmp_1
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:100: starting to merge loop iterations
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:105: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:106: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:107: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds read. assert \valid_read(tmp_4);
                      (tmp_4 from s++)
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:108: Warning: 
  out of bounds read. assert \valid_read(tmp_5);
                      (tmp_5 from s++)
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert -2147483648 ≤ nlo - nccut;
[eva:alarm] solitaire.c:109: Warning: 
  signed overflow. assert nlo - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:109: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:110: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_6.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:111: Warning: 
  out of bounds read. assert \valid_read(tmp_7);
                      (tmp_7 from s++)
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to *tmp_6
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:112: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:112: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert -2147483648 ≤ nccut + hi;
[eva:alarm] solitaire.c:113: Warning: 
  signed overflow. assert nccut + hi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:113: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_8.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds read. assert \valid_read(tmp_9);
                      (tmp_9 from s++)
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to *tmp_8
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:115: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_10.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds write. assert \valid(tmp_10);
                       (tmp_10 from d++)
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to *tmp_10
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nlo - nccut) - lo;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow. assert (int)(nlo - nccut) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:118: Warning: 
  signed overflow.
  assert state.a + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:118: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)(nlo - nccut) - lo);
[eva:alarm] solitaire.c:119: Warning: 
  signed overflow.
  assert state.b + (int)((int)(nlo - nccut) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:119: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert -2147483648 ≤ nhi - nccut;
[eva:alarm] solitaire.c:122: Warning: 
  signed overflow. assert nhi - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:123: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:124: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds read. assert \valid_read(tmp_13);
                      (tmp_13 from s++)
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:125: Warning: 
  out of bounds read. assert \valid_read(tmp_14);
                      (tmp_14 from s++)
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:126: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:126: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nlo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert nccut - nlo ≤ 2147483647;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nccut - nlo) + lo;
[eva:alarm] solitaire.c:127: Warning: 
  signed overflow. assert (int)(nccut - nlo) + lo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:127: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_15.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds read. assert \valid_read(tmp_16);
                      (tmp_16 from s++)
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to *tmp_15
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:128: starting to merge loop iterations
[eva:garbled-mix:write] solitaire.c:129: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:130: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_17.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds write. assert \valid(tmp_17);
                       (tmp_17 from d++)
[eva:alarm] solitaire.c:131: Warning: 
  out of bounds read. assert \valid_read(tmp_18);
                      (tmp_18 from s++)
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to *tmp_17
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:132: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:132: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_19.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to *tmp_19
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:136: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:137: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:137: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:139: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(nhi - nccut) - 1;
[eva:alarm] solitaire.c:140: Warning: 
  signed overflow. assert (int)(nhi - nccut) - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:140: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nhi;
[eva:alarm] solitaire.c:144: Warning: 
  signed overflow. assert (int)(53 - nccut) + nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert -2147483648 ≤ nccut - nhi;
[eva:alarm] solitaire.c:145: Warning: 
  signed overflow. assert nccut - nhi ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:71}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds read. assert \valid_read(tmp_22);
                      (tmp_22 from s++)
[eva:garbled-mix:write] solitaire.c:147: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert -2147483648 ≤ lo - 1;
[eva:alarm] solitaire.c:148: Warning: 
  signed overflow. assert lo - 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:148: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_23.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds write. assert \valid(tmp_23);
                       (tmp_23 from d++)
[eva:alarm] solitaire.c:149: Warning: 
  out of bounds read. assert \valid_read(tmp_24);
                      (tmp_24 from s++)
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to *tmp_23
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:150: Warning: 
  out of bounds read. assert \valid_read(tmp_25);
                      (tmp_25 from s++)
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(53 - nccut) + nlo;
[eva:alarm] solitaire.c:151: Warning: 
  signed overflow. assert (int)(53 - nccut) + nlo ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:151: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:152: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_26.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds read. assert \valid_read(tmp_27);
                      (tmp_27 from s++)
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to *tmp_26
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert -2147483648 ≤ 53 - nccut;
[eva:alarm] solitaire.c:154: Warning: 
  signed overflow. assert 53 - nccut ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:154: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_28.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to *tmp_28
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert -2147483648 ≤ (int)((int)(53 - nccut) + nlo) - lo;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow. assert (int)((int)(53 - nccut) + nlo) - lo ≤ 2147483647;
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.a + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:157: Warning: 
  signed overflow.
  assert state.a + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:157: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert -2147483648 ≤ state.b + (int)((int)((int)(53 - nccut) + nlo) - lo);
[eva:alarm] solitaire.c:158: Warning: 
  signed overflow.
  assert state.b + (int)((int)((int)(53 - nccut) + nlo) - lo) ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:158: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:160: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:161: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:162: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + 0);
[eva:alarm] solitaire.c:163: Warning: 
  out of bounds read. assert \valid_read(state.deck + *(state.deck + 0));
[eva:garbled-mix:write] solitaire.c:163: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert -2147483648 ≤ output - 26;
[eva:alarm] solitaire.c:170: Warning: 
  signed overflow. assert output - 26 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:170: 
  Assigning imprecise value to output.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:174: 
  Assigning imprecise value to lastout.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..1920],0%32).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets {224}).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:77: 
  Assigning imprecise value to lo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:81: 
  Assigning imprecise value to hi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:83: 
  Assigning imprecise value to nlo.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:84: 
  Assigning imprecise value to nhi.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:87: 
  Assigning imprecise value to nccut.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:95: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to *tmp
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:105: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:106: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_3.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to *tmp_3
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:122: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:123: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_12.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to *tmp_12
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:144: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:145: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_21.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to d.
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to *tmp_21
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned {solitaire.c:72}
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status invalid.
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds write. assert \valid(state.spare + i);
[eva:alarm] solitaire.c:220: Warning: 
  out of bounds read.
  assert \valid_read(state.deck + (int)((int)(i + kval) % 53));
[eva:garbled-mix:write] solitaire.c:220: 
  Assigning imprecise value to *(state.spare + i)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds write. assert \valid(state.spare + 53);
[eva:alarm] solitaire.c:221: Warning: 
  out of bounds read. assert \valid_read(state.deck + 53);
[eva:garbled-mix:write] solitaire.c:221: 
  Assigning imprecise value to *(state.spare + 53)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert state.a + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.a + 53) - kval;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow. assert (int)(state.a + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.a + 53) - kval) % 53;
[eva:alarm] solitaire.c:223: Warning: 
  signed overflow.
  assert (int)((int)(state.a + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:223: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert state.b + 53 ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert -2147483648 ≤ (int)(state.b + 53) - kval;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow. assert (int)(state.b + 53) - kval ≤ 2147483647;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert -2147483648 ≤ (int)((int)(state.b + 53) - kval) % 53;
[eva:alarm] solitaire.c:225: Warning: 
  signed overflow.
  assert (int)((int)(state.b + 53) - kval) % 53 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:225: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:226: 
  Assigning imprecise value to tmp.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:227: 
  Assigning imprecise value to state.deck.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:228: 
  Assigning imprecise value to state.spare.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:70: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + state.a);
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.a + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.a + 1 ≤ 2147483647;
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + (int)(state.a + 1));
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + state.a)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert -2147483648 ≤ state.b + 1;
[eva:alarm] solitaire.c:71: Warning: 
  signed overflow. assert state.b + 1 ≤ 2147483647;
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:71: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:71: 
  Assigning imprecise value to state.b.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + state.b)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to state.a.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:72: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:72: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to source.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds write. assert \valid(source + 0);
[eva:alarm] solitaire.c:73: Warning: 
  out of bounds read. assert \valid_read(source + 1);
[eva:garbled-mix:write] solitaire.c:73: 
  Assigning imprecise value to *(source + 0)
  (pointing to state with offsets [0..3808],0%8).
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:88: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:96: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to tmp_0.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:97: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:97: Warning: 
  out of bounds read. assert \valid_read(tmp_0);
                      (tmp_0 from s++)
[eva] solitaire.c:97: starting to merge loop iterations
[eva:garbled-mix:write] solitaire.c:99: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to tmp_2.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:100: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:100: Warning: 
  out of bounds read. assert \valid_read(tmp_2);
                      (tmp_2 from s++)
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to tmp_4.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:107: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to tmp_5.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:108: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to tmp_7.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:111: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to tmp_9.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:114: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:116: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to tmp_11.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:117: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:117: Warning: 
  out of bounds read. assert \valid_read(tmp_11);
                      (tmp_11 from s++)
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to tmp_13.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:124: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to tmp_14.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:125: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to tmp_16.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:128: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to tmp_18.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:131: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:133: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to tmp_20.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:134: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds read. assert \valid_read(tmp_20);
                      (tmp_20 from s++)
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to tmp_22.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:146: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to tmp_24.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:149: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to tmp_25.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:150: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to tmp_27.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:153: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:155: 
  Assigning imprecise value to sb.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to tmp_29.
  The imprecision originates from Misaligned
[eva:garbled-mix:write] solitaire.c:156: 
  Assigning imprecise value to s.
  The imprecision originates from Misaligned
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds read. assert \valid_read(tmp_29);
                      (tmp_29 from s++)
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva] solitaire.c:219: Trace partitioning superposing up to 300 states
[eva] solitaire.c:219: Trace partitioning superposing up to 400 states
[eva] solitaire.c:213: starting to merge loop iterations
[eva] solitaire.c:219: Trace partitioning superposing up to 500 states
[eva:alarm] solitaire.c:173: Warning: 
  signed overflow.
  assert cocount + (int)(lastout ≡ output? 1: 0) ≤ 2147483647;
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 17 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state{.a; .b} ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
       .deck ∈ {{ &state + [0..476] }}
       {.spare; .deck1[0..56]; .deck2[0..56]} ∈
       {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  cocount ∈ [0..2147483647]
  rounds ∈ {-1; 0}
  source ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  s ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  sb ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  d ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  hi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nlo ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nhi ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  nccut ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  output ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
[eva:final-states] Values at end of function key_deck:
  state ∈ {{ garbled mix of &{state} (origin: Misaligned) }}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ garbled mix of &{state} (origin: Misaligned) }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 321 statements reached (out of 364): 88% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  184 alarms generated by the analysis:
     104 integer overflows
      66 invalid memory accesses
      14 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     8 unknown     0 invalid     12 total
  33% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 4 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 96.
  option -eva-widening-delay set to 3 (default value).
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 60.
  option -eva-ilevel set to 32.
  option -eva-plevel set to 100.
  option -eva-subdivide-non-linear set to 80.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'none'.
  option -eva-octagon-through-calls set to false (default value).
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva] solitaire.c:107: starting to merge loop iterations
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[kernel] solitaire.c:128: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:alarm] solitaire.c:146: Warning: 
  pointer comparison. assert \pointer_comparable((void *)s, (void *)sb);
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: Trace partitioning superposing up to 100 states
[eva] solitaire.c:153: starting to merge loop iterations
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [-50..102]
       .b ∈ [-49..104]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28..29] ∈ [2..53]
       .deck1[30..56] ∈ [1..53]
       .deck2[0..2] ∈ [0..53]
       .deck2[3..27] ∈ [1..53]
       .deck2[28..56] ∈ [0..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state + [248..480],0%4 }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  19 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
       1 other
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 5 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 128.
  option -eva-widening-delay set to 3 (default value).
  option -eva-partition-history set to 0 (default value).
  option -eva-slevel set to 100.
  option -eva-ilevel set to 48.
  option -eva-plevel set to 150.
  option -eva-subdivide-non-linear set to 100.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to false (default value).
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:107: starting to merge loop iterations
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva] solitaire.c:124: starting to merge loop iterations
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:146: starting to merge loop iterations
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva] solitaire.c:160: Trace partitioning superposing up to 200 states
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28..29] ∈ [2..53]
       .deck1[30..55] ∈ [1..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..55] ∈ [1..53]
       .deck2[56] ∈ [0..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state + [248..480],0%4 }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 6 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 192.
  option -eva-widening-delay set to 4.
  option -eva-partition-history set to 1.
  option -eva-slevel set to 160.
  option -eva-ilevel set to 64.
  option -eva-plevel set to 200 (default value).
  option -eva-subdivide-non-linear set to 120.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to false (default value).
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:149: Trace partitioning superposing up to 300 states
[eva] solitaire.c:149: starting to merge loop iterations
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 7 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 0 (default value).
  option -eva-auto-loop-unroll set to 256.
  option -eva-widening-delay set to 4.
  option -eva-partition-history set to 1.
  option -eva-slevel set to 250.
  option -eva-ilevel set to 128.
  option -eva-plevel set to 300.
  option -eva-subdivide-non-linear set to 140.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to true.
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva] solitaire.c:111: starting to merge loop iterations
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: starting to merge loop iterations
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva] solitaire.c:131: Trace partitioning superposing up to 300 states
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva] solitaire.c:149: starting to merge loop iterations
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 8 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 1.
  option -eva-auto-loop-unroll set to 384.
  option -eva-widening-delay set to 5.
  option -eva-partition-history set to 1.
  option -eva-slevel set to 500.
  option -eva-ilevel set to 192.
  option -eva-plevel set to 500.
  option -eva-subdivide-non-linear set to 160.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to true.
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:loop-unroll:partial] solitaire.c:131: loop not completely unrolled
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:loop-unroll:partial] solitaire.c:107: loop not completely unrolled
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva:loop-unroll:partial] solitaire.c:111: loop not completely unrolled
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva] solitaire.c:111: Trace partitioning superposing up to 300 states
[eva] solitaire.c:111: Trace partitioning superposing up to 400 states
[eva] solitaire.c:111: Trace partitioning superposing up to 500 states
[eva] solitaire.c:111: starting to merge loop iterations
[eva] solitaire.c:114: Trace partitioning superposing up to 600 states
[eva:loop-unroll:partial] solitaire.c:114: loop not completely unrolled
[eva] solitaire.c:114: starting to merge loop iterations
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: Trace partitioning superposing up to 700 states
[eva:loop-unroll:partial] solitaire.c:117: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:124: loop not completely unrolled
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:loop-unroll:partial] solitaire.c:128: loop not completely unrolled
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva] solitaire.c:128: starting to merge loop iterations
[eva] solitaire.c:131: starting to merge loop iterations
[eva] solitaire.c:131: Trace partitioning superposing up to 800 states
[eva:loop-unroll:partial] solitaire.c:134: loop not completely unrolled
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva:loop-unroll:partial] solitaire.c:146: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:149: loop not completely unrolled
[eva] solitaire.c:149: starting to merge loop iterations
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:loop-unroll:partial] solitaire.c:153: loop not completely unrolled
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva] solitaire.c:153: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:156: loop not completely unrolled
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva:loop-unroll:partial] solitaire.c:213: loop not completely unrolled
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 9 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 2.
  option -eva-auto-loop-unroll set to 512.
  option -eva-widening-delay set to 5.
  option -eva-partition-history set to 1.
  option -eva-slevel set to 1000.
  option -eva-ilevel set to 256.
  option -eva-plevel set to 700.
  option -eva-subdivide-non-linear set to 180.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to true.
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:loop-unroll:partial] solitaire.c:131: loop not completely unrolled
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:loop-unroll:partial] solitaire.c:107: loop not completely unrolled
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva:loop-unroll:partial] solitaire.c:111: loop not completely unrolled
[eva] solitaire.c:111: Trace partitioning superposing up to 300 states
[eva] solitaire.c:111: Trace partitioning superposing up to 400 states
[eva] solitaire.c:111: Trace partitioning superposing up to 500 states
[eva] solitaire.c:111: Trace partitioning superposing up to 600 states
[eva] solitaire.c:111: Trace partitioning superposing up to 700 states
[eva] solitaire.c:111: Trace partitioning superposing up to 800 states
[eva] solitaire.c:114: Trace partitioning superposing up to 1300 states
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva:loop-unroll:partial] solitaire.c:114: loop not completely unrolled
[eva] solitaire.c:114: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:117: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:124: loop not completely unrolled
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva:loop-unroll:partial] solitaire.c:128: loop not completely unrolled
[eva] solitaire.c:131: Trace partitioning superposing up to 1400 states
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:loop-unroll:partial] solitaire.c:134: loop not completely unrolled
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva:loop-unroll:partial] solitaire.c:146: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:149: loop not completely unrolled
[eva] solitaire.c:149: starting to merge loop iterations
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva:loop-unroll:partial] solitaire.c:153: loop not completely unrolled
[eva] solitaire.c:153: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:156: loop not completely unrolled
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva] solitaire.c:156: starting to merge loop iterations
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 10 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 3.
  option -eva-auto-loop-unroll set to 768.
  option -eva-widening-delay set to 6.
  option -eva-partition-history set to 1.
  option -eva-slevel set to 2000.
  option -eva-ilevel set to 256.
  option -eva-plevel set to 1000.
  option -eva-subdivide-non-linear set to 200.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to true.
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:loop-unroll:partial] solitaire.c:131: loop not completely unrolled
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:loop-unroll:partial] solitaire.c:107: loop not completely unrolled
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva:loop-unroll:partial] solitaire.c:111: loop not completely unrolled
[eva] solitaire.c:111: Trace partitioning superposing up to 300 states
[eva] solitaire.c:111: Trace partitioning superposing up to 400 states
[eva] solitaire.c:111: Trace partitioning superposing up to 500 states
[eva] solitaire.c:111: Trace partitioning superposing up to 600 states
[eva] solitaire.c:111: Trace partitioning superposing up to 700 states
[eva] solitaire.c:111: Trace partitioning superposing up to 800 states
[eva] solitaire.c:114: Trace partitioning superposing up to 1300 states
[eva] solitaire.c:114: Trace partitioning superposing up to 1900 states
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: Trace partitioning superposing up to 2500 states
[eva:loop-unroll:partial] solitaire.c:114: loop not completely unrolled
[eva] solitaire.c:114: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:117: loop not completely unrolled
[eva] solitaire.c:117: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:124: loop not completely unrolled
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva:loop-unroll:partial] solitaire.c:128: loop not completely unrolled
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:loop-unroll:partial] solitaire.c:134: loop not completely unrolled
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva:loop-unroll:partial] solitaire.c:146: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:149: loop not completely unrolled
[eva] solitaire.c:149: starting to merge loop iterations
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva:loop-unroll:partial] solitaire.c:153: loop not completely unrolled
[eva] solitaire.c:153: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:156: loop not completely unrolled
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[kernel] Parsing solitaire.c (with preprocessing)
[eva] Option -eva-precision 11 detected, automatic configuration of the analysis:
  option -eva-min-loop-unroll set to 4.
  option -eva-auto-loop-unroll set to 1024.
  option -eva-widening-delay set to 6.
  option -eva-partition-history set to 2.
  option -eva-slevel set to 5000.
  option -eva-ilevel set to 256.
  option -eva-plevel set to 2000.
  option -eva-subdivide-non-linear set to 220.
  option -eva-remove-redundant-alarms set to true (default value).
  option -eva-domains set to 'cvalue,equality,gauges,octagon,symbolic-locations'.
  option -eva-split-return set to 'auto'.
  option -eva-equality-through-calls set to 'formals' (default value).
  option -eva-octagon-through-calls set to true.
[eva] Splitting return states on:
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva:initial-state] Values of globals at initialization
  state ∈ {0}
  verbose ∈ {0}
  lastout ∈ {0}
  cocount ∈ {0}
  nondet ∈ [--..--]
[eva:alarm] solitaire.c:267: Warning: 
  signed overflow. assert -2147483648 ≤ argc - 1;
[eva] using specification for function printf_va_3
[eva:alarm] solitaire.c:273: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function strcmp
[eva:alarm] solitaire.c:273: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva:alarm] solitaire.c:275: Warning: 
  out of bounds read. assert \valid_read(av);
[eva:alarm] solitaire.c:275: Warning: 
  function strcmp: precondition 'valid_string_s1' got status unknown.
[eva:alarm] solitaire.c:278: Warning: 
  out of bounds read. assert \valid_read(av);
[eva] using specification for function printf_va_4
[eva:alarm] solitaire.c:278: Warning: 
  function printf_va_4: precondition valid_read_string(param0) got status unknown.
[eva] using specification for function exit
[eva:alarm] solitaire.c:283: Warning: 
  out of bounds read. assert \valid_read(av + 0);
[eva:alarm] solitaire.c:213: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] using specification for function __FC_assert
[eva:loop-unroll:partial] solitaire.c:131: loop not completely unrolled
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:214: Warning: 
  out of bounds read. assert \valid_read(key);
[eva:alarm] solitaire.c:67: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:68: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:alarm] solitaire.c:69: Warning: 
  function __FC_assert: precondition 'nonnull_c' got status unknown.
[eva:loop-unroll:partial] solitaire.c:107: loop not completely unrolled
[eva:alarm] solitaire.c:107: Warning: 
  out of bounds write. assert \valid(tmp_3);
                       (tmp_3 from d++)
[eva] solitaire.c:107: Trace partitioning superposing up to 100 states
[eva] solitaire.c:111: Trace partitioning superposing up to 200 states
[eva] solitaire.c:111: Trace partitioning superposing up to 300 states
[eva:loop-unroll:partial] solitaire.c:111: loop not completely unrolled
[eva] solitaire.c:111: Trace partitioning superposing up to 400 states
[eva] solitaire.c:111: Trace partitioning superposing up to 500 states
[eva] solitaire.c:111: Trace partitioning superposing up to 600 states
[eva] solitaire.c:111: Trace partitioning superposing up to 700 states
[eva] solitaire.c:111: Trace partitioning superposing up to 800 states
[eva] solitaire.c:114: Trace partitioning superposing up to 1300 states
[eva] solitaire.c:114: Trace partitioning superposing up to 1900 states
[eva:alarm] solitaire.c:114: Warning: 
  out of bounds write. assert \valid(tmp_8);
                       (tmp_8 from d++)
[eva] solitaire.c:114: Trace partitioning superposing up to 2500 states
[eva] solitaire.c:114: Trace partitioning superposing up to 3100 states
[eva:loop-unroll:partial] solitaire.c:114: loop not completely unrolled
[eva] solitaire.c:114: Trace partitioning superposing up to 3600 states
[eva] solitaire.c:114: Trace partitioning superposing up to 4100 states
[eva] solitaire.c:114: Trace partitioning superposing up to 4500 states
[eva] solitaire.c:114: Trace partitioning superposing up to 4900 states
[eva] solitaire.c:114: Trace partitioning superposing up to 5200 states
[eva] solitaire.c:114: starting to merge loop iterations
[eva] solitaire.c:117: Trace partitioning superposing up to 7900 states
[eva:loop-unroll:partial] solitaire.c:117: loop not completely unrolled
[eva] solitaire.c:117: starting to merge loop iterations
[eva:loop-unroll:partial] solitaire.c:124: loop not completely unrolled
[eva:alarm] solitaire.c:124: Warning: 
  out of bounds write. assert \valid(tmp_12);
                       (tmp_12 from d++)
[eva:alarm] solitaire.c:128: Warning: 
  out of bounds write. assert \valid(tmp_15);
                       (tmp_15 from d++)
[eva:loop-unroll:partial] solitaire.c:128: loop not completely unrolled
[eva] solitaire.c:131: starting to merge loop iterations
[eva:alarm] solitaire.c:134: Warning: 
  out of bounds write. assert \valid(tmp_19);
                       (tmp_19 from d++)
[eva:loop-unroll:partial] solitaire.c:134: loop not completely unrolled
[eva] solitaire.c:134: starting to merge loop iterations
[eva:alarm] solitaire.c:146: Warning: 
  out of bounds write. assert \valid(tmp_21);
                       (tmp_21 from d++)
[eva:loop-unroll:partial] solitaire.c:146: loop not completely unrolled
[eva:loop-unroll:partial] solitaire.c:149: loop not completely unrolled
[eva] solitaire.c:151: 
  The evaluation of the expression state.spare + ((53 - nccut) + nlo)
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva:alarm] solitaire.c:153: Warning: 
  out of bounds write. assert \valid(tmp_26);
                       (tmp_26 from d++)
[eva:loop-unroll:partial] solitaire.c:153: loop not completely unrolled
[eva] solitaire.c:153: starting to merge loop iterations
[eva:alarm] solitaire.c:156: Warning: 
  out of bounds write. assert \valid(tmp_28);
                       (tmp_28 from d++)
[eva:loop-unroll:partial] solitaire.c:156: loop not completely unrolled
[eva:alarm] solitaire.c:217: Warning: 
  out of bounds read. assert \valid_read(key);
[eva] solitaire.c:219: Trace partitioning superposing up to 100 states
[eva] solitaire.c:219: Trace partitioning superposing up to 200 states
[eva] solitaire.c:219: Trace partitioning superposing up to 300 states
[eva:alarm] solitaire.c:284: Warning: 
  out of bounds read. assert \valid_read(av + 1);
[eva] solitaire.c:284: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 5 assertion(s)
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function cycle_deck:
  state.a ∈ [0..76]
       .b ∈ [0..78]
       .deck ∈ {{ &state.deck2[3] }}
       .spare ∈ {{ &state.deck1[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {1}
       .deck1[3] ∈ [3..28] ∪ {53}
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ [2..26] ∪ [28..53]
       .deck1[29] ∈ [2..27] ∪ [29..53]
       .deck1[30] ∈ [1..53]
       .deck1[31..55] ∈ [1..27] ∪ [29..53]
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3..56] ∈ [1..53]
  lastout ∈ [0..25]
  cocount ∈ {0; 1}
  rounds ∈ {-1; 0}
  source ∈ {{ &state.deck1[3] }}
  s ∈ {{ &state{.deck1[56], .deck2[0]} }}
  sb ∈ {{ &state{.deck1[56], .deck2[0]} }}
  d ∈ {{ &state + [264..--],0%4 }}
  lo ∈ {1} ∪ [25..51]
  hi ∈ [28..54]
  nlo ∈ [0..26]
  nhi ∈ [3..29] ∪ {53}
  nccut ∈ [1..53]
  output ∈ [0..25] ∪ {53}
[eva:final-states] Values at end of function key_deck:
  state.a ∈ [25..50] ∪ {52}
       .b ∈ [26..51] ∪ {53}
       .deck ∈ {{ &state.deck1[3] }}
       .spare ∈ {{ &state.deck2[3] }}
       .deck1[0..1] ∈ {0}
       .deck1[2] ∈ {0; 1}
       .deck1[3] ∈ {1} ∪ [3..28]
       .deck1[4] ∈ {2} ∪ [4..29]
       .deck1[5] ∈ {3} ∪ [5..30]
       .deck1[6] ∈ {4} ∪ [6..31]
       .deck1[7] ∈ {5} ∪ [7..32]
       .deck1[8] ∈ {6} ∪ [8..33]
       .deck1[9] ∈ {7} ∪ [9..34]
       .deck1[10] ∈ {8} ∪ [10..35]
       .deck1[11] ∈ {9} ∪ [11..36]
       .deck1[12] ∈ {10} ∪ [12..37]
       .deck1[13] ∈ {11} ∪ [13..38]
       .deck1[14] ∈ {12} ∪ [14..39]
       .deck1[15] ∈ {13} ∪ [15..40]
       .deck1[16] ∈ {14} ∪ [16..41]
       .deck1[17] ∈ {15} ∪ [17..42]
       .deck1[18] ∈ {16} ∪ [18..43]
       .deck1[19] ∈ {17} ∪ [19..44]
       .deck1[20] ∈ {18} ∪ [20..45]
       .deck1[21] ∈ {19} ∪ [21..46]
       .deck1[22] ∈ {20} ∪ [22..47]
       .deck1[23] ∈ {21} ∪ [23..48]
       .deck1[24] ∈ {22} ∪ [24..49]
       .deck1[25] ∈ {23} ∪ [25..50]
       .deck1[26] ∈ {24} ∪ [26..51]
       .deck1[27] ∈ {25} ∪ [27..52]
       .deck1[28] ∈ {26} ∪ [28..53]
       .deck1[29] ∈ {27} ∪ [29..53]
       .deck1[30] ∈ {2; 28} ∪ [30..53]
       .deck1[31] ∈ {2; 3; 29} ∪ [31..53]
       .deck1[32] ∈ {2; 3; 4; 30} ∪ [32..53]
       .deck1[33] ∈ [2..5] ∪ {31} ∪ [33..53]
       .deck1[34] ∈ [2..6] ∪ {32} ∪ [34..53]
       .deck1[35] ∈ [2..7] ∪ {33} ∪ [35..53]
       .deck1[36] ∈ [2..8] ∪ {34} ∪ [36..53]
       .deck1[37] ∈ [2..9] ∪ {35} ∪ [37..53]
       .deck1[38] ∈ [2..10] ∪ {36} ∪ [38..53]
       .deck1[39] ∈ [2..11] ∪ {37} ∪ [39..53]
       .deck1[40] ∈ [2..12] ∪ {38} ∪ [40..53]
       .deck1[41] ∈ [2..13] ∪ {39} ∪ [41..53]
       .deck1[42] ∈ [2..14] ∪ {40} ∪ [42..53]
       .deck1[43] ∈ [2..15] ∪ {41} ∪ [43..53]
       .deck1[44] ∈ [2..16] ∪ {42} ∪ [44..53]
       .deck1[45] ∈ [2..17] ∪ {43} ∪ [45..53]
       .deck1[46] ∈ [2..18] ∪ {44} ∪ [46..53]
       .deck1[47] ∈ [2..19] ∪ {45} ∪ [47..53]
       .deck1[48] ∈ [2..20] ∪ {46} ∪ [48..53]
       .deck1[49] ∈ [2..21] ∪ {47} ∪ [49..53]
       .deck1[50] ∈ [2..22] ∪ {48} ∪ [50..53]
       .deck1[51] ∈ [2..23] ∪ {49; 51; 52; 53}
       .deck1[52] ∈ [2..24] ∪ {50; 52; 53}
       .deck1[53] ∈ [2..25] ∪ {51; 53}
       .deck1[54] ∈ [2..26] ∪ {52; 53}
       .deck1[55] ∈ [2..27] ∪ {53}
       .deck1[56] ∈ {1; 53}
       .deck2[0..2] ∈ {0}
       .deck2[3] ∈ {0; 2}
       .deck2[4] ∈ {0; 3}
       .deck2[5] ∈ {0; 4}
       .deck2[6] ∈ {0; 5}
       .deck2[7] ∈ {0; 6}
       .deck2[8] ∈ {0; 7}
       .deck2[9] ∈ {0; 8}
       .deck2[10] ∈ {0; 9}
       .deck2[11] ∈ {0; 10}
       .deck2[12] ∈ {0; 11}
       .deck2[13] ∈ {0; 12}
       .deck2[14] ∈ {0; 13}
       .deck2[15] ∈ {0; 14}
       .deck2[16] ∈ {0; 15}
       .deck2[17] ∈ {0; 16}
       .deck2[18] ∈ {0; 17}
       .deck2[19] ∈ {0; 18}
       .deck2[20] ∈ {0; 19}
       .deck2[21] ∈ {0; 20}
       .deck2[22] ∈ {0; 21}
       .deck2[23] ∈ {0; 22}
       .deck2[24] ∈ {0; 23}
       .deck2[25] ∈ {0; 24}
       .deck2[26] ∈ {0; 25}
       .deck2[27] ∈ {0; 26}
       .deck2[28] ∈ {0; 27}
       .deck2[29] ∈ {0; 28}
       .deck2[30] ∈ {0; 29}
       .deck2[31] ∈ {0; 30}
       .deck2[32] ∈ {0; 31}
       .deck2[33] ∈ {0; 32}
       .deck2[34] ∈ {0; 33}
       .deck2[35] ∈ {0; 34}
       .deck2[36] ∈ {0; 35}
       .deck2[37] ∈ {0; 36}
       .deck2[38] ∈ {0; 37}
       .deck2[39] ∈ {0; 38}
       .deck2[40] ∈ {0; 39}
       .deck2[41] ∈ {0; 40}
       .deck2[42] ∈ {0; 41}
       .deck2[43] ∈ {0; 42}
       .deck2[44] ∈ {0; 43}
       .deck2[45] ∈ {0; 44}
       .deck2[46] ∈ {0; 45}
       .deck2[47] ∈ {0; 46}
       .deck2[48] ∈ {0; 47}
       .deck2[49] ∈ {0; 48}
       .deck2[50] ∈ {0; 49}
       .deck2[51] ∈ {0; 50}
       .deck2[52] ∈ {0; 51}
       .deck2[53] ∈ {0; 52}
       .deck2[54..55] ∈ {0; 53}
       .deck2[56] ∈ {0; 1}
  lastout ∈ {100}
  cocount ∈ {0}
  key ∈ {{ &S_1_S_argv{[0], [1]} }}
  i ∈ {52; 53}
  kval ∈ [1..26] or UNINITIALIZED
  tmp ∈ {{ &state.deck2[3] }} or UNINITIALIZED
[eva:final-states] Values at end of function main:
  NON TERMINATING FUNCTION
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  3 functions analyzed (out of 6): 50% coverage.
  In these functions, 285 statements reached (out of 364): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  18 alarms generated by the analysis:
      17 invalid memory accesses
       1 integer overflow
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions     4 valid     6 unknown     0 invalid     10 total
  40% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------

real	2m38.612s
user	2m36.172s
sys	0m2.274s
