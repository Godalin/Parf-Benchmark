Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing test/tests.c (with preprocessing)
[variadic:typing] test/testutil.h:30: Warning: 
  Incorrect type for argument 3. The argument will be cast from jsmntype_t (unsigned int) to int.
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] using specification for function printf_va_7
[eva] test/testutil.h:14: starting to merge loop iterations
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_1
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_2
[eva] jsmn.c:93: starting to merge loop iterations
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_4
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_5
[eva] jsmn.c:125: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_7
[eva] jsmn.c:42: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_8
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_9
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_10
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_11
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_12
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_13
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_14
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_15
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_16
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_17
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_18
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_19
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_20
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_21
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_22
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_23
[eva] test/tests.c:83: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/tests.c:126: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_24
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_25
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_26
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_27
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_28
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_29
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_30
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_31
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_32
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_33
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1215 statements reached (out of 1219): 99% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  58 alarms generated by the analysis:
      31 accesses to uninitialized left-values
      18 invalid memory accesses
       9 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    35 valid     2 unknown     0 invalid     37 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 24 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] jsmn.c:158: starting to merge loop iterations
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1140 statements reached (out of 1219): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  32 alarms generated by the analysis:
      18 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    35 valid     0 unknown     0 invalid     35 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 14 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 9
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_69
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_70
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_71
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_72
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_73
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_74
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_75
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_76
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_77
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_78
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_79
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_80
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_81
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_82
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_83
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_84
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_85
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_86
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_87
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_88
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_89
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_90
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_91
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_92
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_93
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_94
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_95
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_96
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_97
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_98
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_99
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_100
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_101
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_102
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_103
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 2 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1149 statements reached (out of 1219): 94% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  34 alarms generated by the analysis:
      20 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_104
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_105
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_106
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_107
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_108
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_109
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_110
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_111
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_112
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_113
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_114
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_115
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_116
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_117
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_118
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_119
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_120
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_121
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_122
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_123
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_124
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_125
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_126
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_127
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_128
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_129
[eva] jsmn.c:302: cannot properly split on \result == 7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_130
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_131
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_132
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_133
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_134
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_135
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_136
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_137
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_138
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1141 statements reached (out of 1219): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  33 alarms generated by the analysis:
      18 accesses to uninitialized left-values
       9 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 31 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 10
[parf] @default,cvalue,octagon
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_139
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_140
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_141
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_142
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_143
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_144
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_145
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_146
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_147
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_148
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_149
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_150
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_151
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_152
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_153
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_154
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_155
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_156
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_157
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_158
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_159
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_160
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_161
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_162
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_163
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_164
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_165
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_166
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_167
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_168
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_169
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_170
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_171
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_172
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_173
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  31 alarms generated by the analysis:
      16 accesses to uninitialized left-values
       9 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 21 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_174
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_175
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_176
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_177
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_178
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_179
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_180
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == 7
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_181
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_182
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_183
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_184
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_185
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_186
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_187
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_188
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_189
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_190
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_191
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_192
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_193
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_194
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_195
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_196
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_197
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_198
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] using specification for function printf_va_2
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_199
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_200
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_201
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_202
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_203
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_204
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_205
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_206
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_207
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_208
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1140 statements reached (out of 1219): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  36 alarms generated by the analysis:
      20 accesses to uninitialized left-values
       9 invalid memory accesses
       7 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample00: subset of base? true
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_209
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_210
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_211
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_212
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_213
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_214
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_215
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_216
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_217
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_218
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_219
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_220
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_221
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_222
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_223
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_224
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_225
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_226
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_227
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_228
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_229
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_230
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_231
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_232
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_233
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_234
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_235
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_236
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_237
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_238
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_239
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_240
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_241
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_242
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_243
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 62 -eva-remove-redundant-alarms true -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_244
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_245
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_246
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_247
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_248
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_249
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_250
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_251
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_252
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_253
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_254
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_255
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_256
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_257
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_258
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_259
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_260
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_261
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_262
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_263
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_264
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_265
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_266
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_267
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_268
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:133: Trace partitioning superposing up to 300 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 400 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_269
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_270
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_271
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_272
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_273
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_274
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_275
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_276
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_277
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_278
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 39 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_279
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_280
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_281
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_282
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_283
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_284
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_285
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_286
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_287
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_288
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_289
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_290
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_291
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_292
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_293
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_294
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_295
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_296
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_297
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_298
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_299
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_300
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_301
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_302
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_303
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:133: Trace partitioning superposing up to 300 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:133: Trace partitioning superposing up to 400 states
[eva] jsmn.c:158: Trace partitioning superposing up to 100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_304
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_305
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_306
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_307
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_308
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_309
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_310
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_311
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_312
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_313
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 58 -eva-remove-redundant-alarms true -eva-plevel 61 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 18
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_314
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_315
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_316
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_317
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_318
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_319
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_320
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_321
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_322
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_323
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_324
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_325
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_326
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_327
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_328
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_329
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_330
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_331
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_332
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_333
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_334
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_335
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_336
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_337
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_338
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:215: 
  The evaluation of the expression -1
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 300 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 200 states
[eva] jsmn.c:158: Trace partitioning superposing up to 100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_339
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_340
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_341
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_342
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_343
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_344
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_345
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_346
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_347
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_348
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 55 -eva-remove-redundant-alarms true -eva-plevel 55 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 38 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 25
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_349
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_350
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_351
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_352
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_353
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_354
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_355
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_356
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_357
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_358
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_359
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_360
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_361
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_362
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_363
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_364
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_365
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_366
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_367
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_368
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_369
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_370
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_371
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_372
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_373
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:215: 
  The evaluation of the expression -1
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_374
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_375
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_376
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_377
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_378
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_379
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_380
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_381
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_382
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_383
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1124 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms true -eva-plevel 45 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 21
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_384
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_385
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_386
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_387
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_388
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_389
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_390
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_391
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_392
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_393
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_394
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_395
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_396
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_397
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_398
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_399
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_400
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_401
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_402
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_403
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_404
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_405
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_406
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_407
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_408
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:215: 
  The evaluation of the expression -1
  led to bottom without alarms:
  at this point the product of states has no possible concretization.
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 300 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 200 states
[eva] jsmn.c:158: Trace partitioning superposing up to 100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_409
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_410
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_411
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_412
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_413
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_414
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_415
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_416
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_417
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_418
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? false
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_419
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_420
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_421
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_422
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_423
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_424
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_425
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_426
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_427
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_428
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_429
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_430
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_431
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_432
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_433
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_434
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_435
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_436
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_437
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_438
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_439
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_440
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_441
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_442
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_443
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_444
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_445
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_446
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_447
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_448
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_449
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_450
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_451
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_452
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_453
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 86 -eva-remove-redundant-alarms true -eva-plevel 51 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 6 -eva-ilevel 41 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_454
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_455
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_456
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_457
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_458
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_459
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_460
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_461
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_462
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_463
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_464
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_465
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_466
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_467
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_468
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_469
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_470
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_471
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_472
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_473
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_474
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_475
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_476
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_477
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_478
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 300 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_479
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_480
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_481
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_482
[eva] test/tests.c:300: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_483
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_484
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_485
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_486
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_487
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_488
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1124 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 68 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 38 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 31
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_489
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_490
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_491
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_492
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_493
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_494
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_495
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_496
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_497
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_498
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_499
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_500
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_501
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_502
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_503
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_504
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_505
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_506
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_507
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_508
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_509
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_510
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_511
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_512
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_513
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 200 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_514
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_515
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_516
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_517
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_518
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_519
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_520
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_521
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_522
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_523
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample01: subset of base? false
[parf] sample base02-sample00: subset of base? false
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_524
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_525
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_526
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_527
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_528
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_529
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_530
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_531
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_532
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_533
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_534
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_535
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_536
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_537
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_538
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_539
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_540
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_541
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_542
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_543
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_544
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_545
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_546
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_547
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_548
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_549
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_550
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_551
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_552
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_553
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_554
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_555
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_556
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_557
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_558
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  28 alarms generated by the analysis:
      14 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((t + i)->start)
[parf] alarm (  3): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  4): Uninitialized((t + i)->start)
[parf] alarm (  5): Uninitialized((t + i)->end)
[parf] alarm (  6): Uninitialized((tokens + i)->type)
[parf] alarm (  7): Memory_access((tokens + i)->type, read)
[parf] alarm (  8): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  9): Uninitialized((t + i)->start)
[parf] alarm ( 10): Uninitialized((t + i)->end)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm ( 13): Uninitialized((t + i)->end)
[parf] alarm ( 14): Uninitialized((t + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 18): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 22): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 23): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 24): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + i)->start, read)
[parf] alarm ( 26): Uninitialized((tokens + i)->start)
[parf] alarm ( 27): Uninitialized((tokens + i)->end)
[parf] alarm ( 28): Uninitialized(token->start)
[parf] alarm ( 29): Memory_access(token->start, read)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(token->type)
[parf] alarm ( 32): Memory_access(token->start, read)
[parf] alarm ( 33): Uninitialized(token->start)
[parf] alarm ( 34): Uninitialized(token->end)
[parf] alarm ( 35): Memory_access((t + i)->type, read)
[parf] alarm ( 36): Uninitialized((t + i)->type)
[parf] alarm ( 37): Uninitialized((t + i)->type)
[parf] alarm ( 38): Memory_access(*ap, read)
[parf] alarm ( 39): Memory_access(*((char **)*ap), read)
[parf] alarm ( 40): Memory_access(*ap, read)
[parf] alarm ( 41): Uninitialized((t + i)->start)
[parf] alarm ( 42): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 43): Uninitialized((t + i)->start)
[parf] alarm ( 44): Memory_access(*ap, read)
[parf] alarm ( 45): Memory_access(*ap, read)
[parf] alarm ( 46): Memory_access(*((char **)*ap), read)
[parf] alarm ( 47): Uninitialized((t + i)->end)
[parf] alarm ( 48): Memory_access(*ap, read)
[parf] alarm ( 49): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 50): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 51): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 52): Uninitialized((t + i)->end)
[parf] alarm ( 53): Memory_access(*ap, read)
[parf] alarm ( 54): Memory_access(*ap, read)
[parf] alarm ( 55): Uninitialized((t + i)->size)
[parf] alarm ( 56): Uninitialized((t + i)->size)
[parf] alarm ( 57): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 58): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 24 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Uninitialized((t + i)->start)
[parf] alarm (  2): Uninitialized((t + i)->end)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->start)
[parf] alarm (  6): Uninitialized((tokens + i)->end)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  9): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 13): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 14): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 15): Memory_access((tokens + i)->start, read)
[parf] alarm ( 16): Uninitialized((tokens + i)->start)
[parf] alarm ( 17): Uninitialized((tokens + i)->end)
[parf] alarm ( 18): Uninitialized(token->start)
[parf] alarm ( 19): Memory_access(token->start, read)
[parf] alarm ( 20): Uninitialized(token->end)
[parf] alarm ( 21): Uninitialized(token->type)
[parf] alarm ( 22): Uninitialized(token->start)
[parf] alarm ( 23): Uninitialized(token->end)
[parf] alarm ( 24): Memory_access((t + i)->type, read)
[parf] alarm ( 25): Uninitialized((t + i)->type)
[parf] alarm ( 26): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 27): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 29): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 30): Uninitialized((t + i)->size)
[parf] alarm ( 31): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 32): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 14 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((t + i)->start)
[parf] alarm (  3): Uninitialized((t + i)->end)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Memory_access((tokens + i)->type, read)
[parf] alarm (  6): Uninitialized((tokens + i)->type)
[parf] alarm (  7): Uninitialized((tokens + i)->start)
[parf] alarm (  8): Uninitialized((tokens + i)->end)
[parf] alarm (  9): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 10): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 11): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 15): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 16): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 17): Memory_access((tokens + i)->start, read)
[parf] alarm ( 18): Uninitialized((tokens + i)->start)
[parf] alarm ( 19): Uninitialized((tokens + i)->end)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Memory_access(token->start, read)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Uninitialized(token->type)
[parf] alarm ( 24): Uninitialized(token->start)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Memory_access((t + i)->type, read)
[parf] alarm ( 27): Uninitialized((t + i)->type)
[parf] alarm ( 28): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 30): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 31): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 32): Uninitialized((t + i)->size)
[parf] alarm ( 33): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 34): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Uninitialized((t + i)->start)
[parf] alarm (  2): Uninitialized((t + i)->end)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->start)
[parf] alarm (  6): Uninitialized((tokens + i)->end)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  9): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 15): Memory_access((tokens + i)->start, read)
[parf] alarm ( 16): Uninitialized((tokens + i)->start)
[parf] alarm ( 17): Uninitialized((tokens + i)->end)
[parf] alarm ( 18): Uninitialized(token->start)
[parf] alarm ( 19): Memory_access(token->start, read)
[parf] alarm ( 20): Uninitialized(token->end)
[parf] alarm ( 21): Uninitialized(token->type)
[parf] alarm ( 22): Memory_access(token->start, read)
[parf] alarm ( 23): Uninitialized(token->start)
[parf] alarm ( 24): Uninitialized(token->end)
[parf] alarm ( 25): Memory_access((t + i)->type, read)
[parf] alarm ( 26): Uninitialized((t + i)->type)
[parf] alarm ( 27): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 29): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 30): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 31): Uninitialized((t + i)->size)
[parf] alarm ( 32): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 33): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 31 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((tokens + i)->type)
[parf] alarm (  3): Memory_access((tokens + i)->type, read)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Uninitialized((tokens + i)->start)
[parf] alarm (  6): Uninitialized((tokens + i)->end)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  9): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 13): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 14): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 15): Memory_access((tokens + i)->start, read)
[parf] alarm ( 16): Uninitialized((tokens + i)->start)
[parf] alarm ( 17): Uninitialized((tokens + i)->end)
[parf] alarm ( 18): Uninitialized(token->start)
[parf] alarm ( 19): Memory_access(token->start, read)
[parf] alarm ( 20): Uninitialized(token->end)
[parf] alarm ( 21): Uninitialized(token->type)
[parf] alarm ( 22): Memory_access(token->start, read)
[parf] alarm ( 23): Uninitialized(token->start)
[parf] alarm ( 24): Uninitialized(token->end)
[parf] alarm ( 25): Memory_access((t + i)->type, read)
[parf] alarm ( 26): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 27): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 29): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 30): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 31): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 21 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((t + i)->start)
[parf] alarm (  3): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  4): Uninitialized((t + i)->end)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Memory_access((tokens + i)->type, read)
[parf] alarm (  7): Uninitialized((tokens + i)->type)
[parf] alarm (  8): Uninitialized((tokens + i)->start)
[parf] alarm (  9): Uninitialized((tokens + i)->end)
[parf] alarm ( 10): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 11): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 15): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 16): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 17): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 18): Memory_access((tokens + i)->start, read)
[parf] alarm ( 19): Uninitialized((tokens + i)->start)
[parf] alarm ( 20): Uninitialized((tokens + i)->end)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Memory_access(token->start, read)
[parf] alarm ( 23): Uninitialized(token->end)
[parf] alarm ( 24): Uninitialized(token->type)
[parf] alarm ( 25): Memory_access(token->start, read)
[parf] alarm ( 26): Uninitialized(token->start)
[parf] alarm ( 27): Uninitialized(token->end)
[parf] alarm ( 28): Memory_access((t + i)->type, read)
[parf] alarm ( 29): Uninitialized((t + i)->type)
[parf] alarm ( 30): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 31): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 32): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 33): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 34): Uninitialized((t + i)->size)
[parf] alarm ( 35): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 36): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 62 -eva-remove-redundant-alarms true -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 39 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 58 -eva-remove-redundant-alarms true -eva-plevel 61 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 18
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 55 -eva-remove-redundant-alarms true -eva-plevel 55 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 38 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 25
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms true -eva-plevel 45 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 21
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 86 -eva-remove-redundant-alarms true -eva-plevel 51 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 6 -eva-ilevel 41 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 68 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 38 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 31
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->start)
[parf] alarm (  4): Uninitialized((tokens + i)->end)
[parf] alarm (  5): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  8): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  9): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 10): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 13): Memory_access((tokens + i)->start, read)
[parf] alarm ( 14): Uninitialized((tokens + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->end)
[parf] alarm ( 16): Uninitialized(token->start)
[parf] alarm ( 17): Memory_access(token->start, read)
[parf] alarm ( 18): Uninitialized(token->end)
[parf] alarm ( 19): Uninitialized(token->type)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Memory_access((t + i)->type, read)
[parf] alarm ( 23): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 24): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 25): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 26): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 27): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] 28,"-eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 31 -eva-remove-redundant-alarms true -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10 ",
[parf] 28

real	7m38.040s
user	7m35.985s
sys	0m1.099s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing jsmn.c (with preprocessing)
[kernel] Parsing example/simple.c (with preprocessing)
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      35 accesses to uninitialized left-values
      18 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 14 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva] example/simple.c:43: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      37 accesses to uninitialized left-values
      17 integer overflows
       9 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms true -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 3
[parf] @default,cvalue,equality
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 4 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 284 statements reached (out of 311): 91% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      37 accesses to uninitialized left-values
      17 integer overflows
       9 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    10 valid     6 unknown     0 invalid     16 total
  62% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 28 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: Trace partitioning superposing up to 100 states
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 251 statements reached (out of 311): 80% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      32 accesses to uninitialized left-values
      15 integer overflows
       8 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 13 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      37 accesses to uninitialized left-values
      17 integer overflows
       9 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges -eva-auto-loop-unroll 14
[parf] @default,cvalue,gauges
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 200 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva] example/simple.c:43: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 284 statements reached (out of 311): 91% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  67 alarms generated by the analysis:
      34 accesses to uninitialized left-values
      18 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    10 valid     6 unknown     0 invalid     16 total
  62% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? false
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? false
[parf] sample base00-sample00: subset of base? false
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 28 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: Trace partitioning superposing up to 100 states
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 251 statements reached (out of 311): 80% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      32 accesses to uninitialized left-values
      15 integer overflows
       8 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms true -eva-plevel 41 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 18
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 38 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 18
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 62 -eva-remove-redundant-alarms true -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms false -eva-plevel 42 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 56 -eva-remove-redundant-alarms true -eva-plevel 43 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 82 -eva-remove-redundant-alarms false -eva-plevel 78 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 44 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 23
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 104 -eva-remove-redundant-alarms true -eva-plevel 73 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 49 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 92 -eva-remove-redundant-alarms true -eva-plevel 64 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 47 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 87 -eva-remove-redundant-alarms true -eva-plevel 70 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 49 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 91 -eva-remove-redundant-alarms true -eva-plevel 84 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 53 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample04: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample00: subset of base? true
[parf] base: base03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 108 -eva-remove-redundant-alarms false -eva-plevel 94 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 62 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 116 -eva-remove-redundant-alarms true -eva-plevel 98 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 72 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 38
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms false -eva-plevel 91 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 67 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 29
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 104 -eva-remove-redundant-alarms false -eva-plevel 85 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 65 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 30
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 117 -eva-remove-redundant-alarms true -eva-plevel 86 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 33
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base03-sample04: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] base: base04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 135 -eva-remove-redundant-alarms true -eva-plevel 108 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 71 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 13 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 131 -eva-remove-redundant-alarms false -eva-plevel 91 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 69 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 33
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 14 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 136 -eva-remove-redundant-alarms false -eva-plevel 100 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 68 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 49
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 127 -eva-remove-redundant-alarms true -eva-plevel 82 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 71 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 39
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 133 -eva-remove-redundant-alarms false -eva-plevel 97 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 70 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 39
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base04-sample04: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Index_out_of_bound(i < 128)
[parf] alarm (  8): Uninitialized(t[i].start)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Uninitialized((tokens + i)->start)
[parf] alarm ( 13): Uninitialized((tokens + i)->end)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 17): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 18): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 19): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 20): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 22): Uninitialized((tokens + i)->start)
[parf] alarm ( 23): Memory_access((tokens + i)->start, read)
[parf] alarm ( 24): Uninitialized((tokens + i)->end)
[parf] alarm ( 25): Memory_access(tok->type, read)
[parf] alarm ( 26): Uninitialized(tok->type)
[parf] alarm ( 27): Memory_access(token->start, read)
[parf] alarm ( 28): Uninitialized(token->start)
[parf] alarm ( 29): Uninitialized(token->end)
[parf] alarm ( 30): Uninitialized(tok->start)
[parf] alarm ( 31): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 32): Uninitialized(tok->end)
[parf] alarm ( 33): Uninitialized(token->type)
[parf] alarm ( 34): Uninitialized(tok->start)
[parf] alarm ( 35): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 36): Uninitialized(tok->end)
[parf] alarm ( 37): Uninitialized(token->start)
[parf] alarm ( 38): Memory_access(token->start, read)
[parf] alarm ( 39): Uninitialized(token->end)
[parf] alarm ( 40): Uninitialized(t[0].type)
[parf] alarm ( 41): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 42): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 43): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].end)
[parf] alarm ( 46): Uninitialized(t[i + 1].start)
[parf] alarm ( 47): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 48): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 49): Uninitialized(t[i + 1].end)
[parf] alarm ( 50): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 51): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 52): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 53): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 14 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Uninitialized(t[i].start)
[parf] alarm ( 11): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + i)->type)
[parf] alarm ( 13): Uninitialized((tokens + i)->start)
[parf] alarm ( 14): Uninitialized((tokens + i)->end)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 22): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 23): Uninitialized((tokens + i)->start)
[parf] alarm ( 24): Memory_access((tokens + i)->start, read)
[parf] alarm ( 25): Uninitialized((tokens + i)->end)
[parf] alarm ( 26): Memory_access(tok->type, read)
[parf] alarm ( 27): Uninitialized(tok->type)
[parf] alarm ( 28): Memory_access(token->start, read)
[parf] alarm ( 29): Uninitialized(token->start)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(tok->start)
[parf] alarm ( 32): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 33): Uninitialized(tok->end)
[parf] alarm ( 34): Uninitialized(token->type)
[parf] alarm ( 35): Uninitialized(tok->start)
[parf] alarm ( 36): Uninitialized(token->start)
[parf] alarm ( 37): Uninitialized(token->end)
[parf] alarm ( 38): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].start)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].end)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 47): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 48): Uninitialized(t[i + 1].end)
[parf] alarm ( 49): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 50): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 52): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 53): Uninitialized(t[i + 1].start)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms true -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 3
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Uninitialized(t[i].start)
[parf] alarm ( 11): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + i)->type)
[parf] alarm ( 13): Uninitialized((tokens + i)->start)
[parf] alarm ( 14): Uninitialized((tokens + i)->end)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 22): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 23): Uninitialized((tokens + i)->start)
[parf] alarm ( 24): Memory_access((tokens + i)->start, read)
[parf] alarm ( 25): Uninitialized((tokens + i)->end)
[parf] alarm ( 26): Memory_access(tok->type, read)
[parf] alarm ( 27): Uninitialized(tok->type)
[parf] alarm ( 28): Memory_access(token->start, read)
[parf] alarm ( 29): Uninitialized(token->start)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(tok->start)
[parf] alarm ( 32): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 33): Uninitialized(tok->end)
[parf] alarm ( 34): Uninitialized(token->type)
[parf] alarm ( 35): Uninitialized(tok->start)
[parf] alarm ( 36): Uninitialized(token->start)
[parf] alarm ( 37): Uninitialized(token->end)
[parf] alarm ( 38): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].start)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].end)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 47): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 48): Uninitialized(t[i + 1].end)
[parf] alarm ( 49): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 50): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 52): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 53): Uninitialized(t[i + 1].start)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 28 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Uninitialized((tokens + i)->start)
[parf] alarm ( 13): Uninitialized((tokens + i)->end)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 16): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 17): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 18): Uninitialized((tokens + i)->start)
[parf] alarm ( 19): Memory_access((tokens + i)->start, read)
[parf] alarm ( 20): Uninitialized((tokens + i)->end)
[parf] alarm ( 21): Memory_access(tok->type, read)
[parf] alarm ( 22): Uninitialized(tok->type)
[parf] alarm ( 23): Memory_access(token->start, read)
[parf] alarm ( 24): Uninitialized(token->start)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Uninitialized(tok->start)
[parf] alarm ( 27): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 28): Uninitialized(tok->end)
[parf] alarm ( 29): Uninitialized(token->type)
[parf] alarm ( 30): Uninitialized(tok->start)
[parf] alarm ( 31): Uninitialized(token->start)
[parf] alarm ( 32): Uninitialized(token->end)
[parf] alarm ( 33): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 34): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 35): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 36): Uninitialized(t[i + 1].start)
[parf] alarm ( 37): Uninitialized(t[i + 1].end)
[parf] alarm ( 38): Uninitialized(t[i + 1].start)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].end)
[parf] alarm ( 42): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 43): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 44): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 45): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 46): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 47): Uninitialized(t[i + 1].end)
[parf] alarm ( 48): Uninitialized(t[i + 1].start)
[parf] alarm ( 49): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 50): Uninitialized(t[i + 1].type)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 52): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 53): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 54): Uninitialized(t[i + 1].size)
[parf] alarm ( 55): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 56): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 57): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 58): Uninitialized(g->start)
[parf] alarm ( 59): Memory_access(g->start, read)
[parf] alarm ( 60): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 13 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Uninitialized(t[i].start)
[parf] alarm ( 11): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + i)->type)
[parf] alarm ( 13): Uninitialized((tokens + i)->start)
[parf] alarm ( 14): Uninitialized((tokens + i)->end)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 22): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 23): Uninitialized((tokens + i)->start)
[parf] alarm ( 24): Memory_access((tokens + i)->start, read)
[parf] alarm ( 25): Uninitialized((tokens + i)->end)
[parf] alarm ( 26): Memory_access(tok->type, read)
[parf] alarm ( 27): Uninitialized(tok->type)
[parf] alarm ( 28): Memory_access(token->start, read)
[parf] alarm ( 29): Uninitialized(token->start)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(tok->start)
[parf] alarm ( 32): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 33): Uninitialized(tok->end)
[parf] alarm ( 34): Uninitialized(token->type)
[parf] alarm ( 35): Uninitialized(tok->start)
[parf] alarm ( 36): Uninitialized(token->start)
[parf] alarm ( 37): Uninitialized(token->end)
[parf] alarm ( 38): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].start)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].end)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 47): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 48): Uninitialized(t[i + 1].end)
[parf] alarm ( 49): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 50): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 52): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 53): Uninitialized(t[i + 1].start)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Uninitialized((tokens + i)->start)
[parf] alarm ( 13): Uninitialized((tokens + i)->end)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 17): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 18): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 19): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 20): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 22): Uninitialized((tokens + i)->start)
[parf] alarm ( 23): Memory_access((tokens + i)->start, read)
[parf] alarm ( 24): Uninitialized((tokens + i)->end)
[parf] alarm ( 25): Memory_access(tok->type, read)
[parf] alarm ( 26): Uninitialized(tok->type)
[parf] alarm ( 27): Memory_access(token->start, read)
[parf] alarm ( 28): Uninitialized(token->start)
[parf] alarm ( 29): Uninitialized(token->end)
[parf] alarm ( 30): Uninitialized(tok->start)
[parf] alarm ( 31): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 32): Uninitialized(tok->end)
[parf] alarm ( 33): Uninitialized(token->type)
[parf] alarm ( 34): Uninitialized(tok->start)
[parf] alarm ( 35): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 36): Uninitialized(tok->end)
[parf] alarm ( 37): Uninitialized(token->start)
[parf] alarm ( 38): Memory_access(token->start, read)
[parf] alarm ( 39): Uninitialized(token->end)
[parf] alarm ( 40): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 41): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 42): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 43): Uninitialized(t[i + 1].start)
[parf] alarm ( 44): Uninitialized(t[i + 1].end)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 47): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 48): Uninitialized(t[i + 1].end)
[parf] alarm ( 49): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 50): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 52): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 53): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 54): Uninitialized(t[i + 1].end)
[parf] alarm ( 55): Uninitialized(t[i + 1].start)
[parf] alarm ( 56): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 57): Uninitialized(t[i + 1].type)
[parf] alarm ( 58): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 59): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 60): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 61): Uninitialized(t[i + 1].size)
[parf] alarm ( 62): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 63): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 64): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 65): Uninitialized(g->start)
[parf] alarm ( 66): Memory_access(g->start, read)
[parf] alarm ( 67): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 28 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Uninitialized((tokens + i)->start)
[parf] alarm ( 13): Uninitialized((tokens + i)->end)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 16): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 17): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 18): Uninitialized((tokens + i)->start)
[parf] alarm ( 19): Memory_access((tokens + i)->start, read)
[parf] alarm ( 20): Uninitialized((tokens + i)->end)
[parf] alarm ( 21): Memory_access(tok->type, read)
[parf] alarm ( 22): Uninitialized(tok->type)
[parf] alarm ( 23): Memory_access(token->start, read)
[parf] alarm ( 24): Uninitialized(token->start)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Uninitialized(tok->start)
[parf] alarm ( 27): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 28): Uninitialized(tok->end)
[parf] alarm ( 29): Uninitialized(token->type)
[parf] alarm ( 30): Uninitialized(tok->start)
[parf] alarm ( 31): Uninitialized(token->start)
[parf] alarm ( 32): Uninitialized(token->end)
[parf] alarm ( 33): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 34): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 35): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 36): Uninitialized(t[i + 1].start)
[parf] alarm ( 37): Uninitialized(t[i + 1].end)
[parf] alarm ( 38): Uninitialized(t[i + 1].start)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].end)
[parf] alarm ( 42): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 43): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 44): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 45): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 46): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 47): Uninitialized(t[i + 1].end)
[parf] alarm ( 48): Uninitialized(t[i + 1].start)
[parf] alarm ( 49): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 50): Uninitialized(t[i + 1].type)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 52): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 53): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 54): Uninitialized(t[i + 1].size)
[parf] alarm ( 55): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 56): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 57): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 58): Uninitialized(g->start)
[parf] alarm ( 59): Memory_access(g->start, read)
[parf] alarm ( 60): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms true -eva-plevel 41 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 18
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 38 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 18
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 62 -eva-remove-redundant-alarms true -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms false -eva-plevel 42 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 56 -eva-remove-redundant-alarms true -eva-plevel 43 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 82 -eva-remove-redundant-alarms false -eva-plevel 78 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 44 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 23
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 104 -eva-remove-redundant-alarms true -eva-plevel 73 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 49 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample02" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 92 -eva-remove-redundant-alarms true -eva-plevel 64 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 47 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample03" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 87 -eva-remove-redundant-alarms true -eva-plevel 70 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 49 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample04" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 91 -eva-remove-redundant-alarms true -eva-plevel 84 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 53 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample00" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 108 -eva-remove-redundant-alarms false -eva-plevel 94 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 62 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample01" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 116 -eva-remove-redundant-alarms true -eva-plevel 98 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 72 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 38
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample02" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms false -eva-plevel 91 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 67 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 29
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample03" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 104 -eva-remove-redundant-alarms false -eva-plevel 85 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 65 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 30
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample04" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 117 -eva-remove-redundant-alarms true -eva-plevel 86 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 33
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample00" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 135 -eva-remove-redundant-alarms true -eva-plevel 108 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 71 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample01" ======
[parf] Parameter: -eva-widening-delay 13 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 131 -eva-remove-redundant-alarms false -eva-plevel 91 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 69 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 33
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample02" ======
[parf] Parameter: -eva-widening-delay 14 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 136 -eva-remove-redundant-alarms false -eva-plevel 100 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 68 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 49
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample03" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 127 -eva-remove-redundant-alarms true -eva-plevel 82 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 71 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample04" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 133 -eva-remove-redundant-alarms false -eva-plevel 97 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 70 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] 1,"-eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11 ",
[parf] 1

real	0m12.346s
user	0m12.014s
sys	0m0.283s
