Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing test/tests.c (with preprocessing)
[variadic:typing] test/testutil.h:30: Warning: 
  Incorrect type for argument 3. The argument will be cast from jsmntype_t (unsigned int) to int.
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] using specification for function printf_va_7
[eva] test/testutil.h:14: starting to merge loop iterations
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_1
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_2
[eva] jsmn.c:93: starting to merge loop iterations
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_4
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_5
[eva] jsmn.c:125: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_7
[eva] jsmn.c:42: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_8
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_9
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_10
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_11
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_12
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_13
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_14
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_15
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_16
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_17
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_18
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_19
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_20
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_21
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_22
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_23
[eva] test/tests.c:83: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/tests.c:126: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_24
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_25
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_26
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_27
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_28
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_29
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_30
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_31
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_32
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_33
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1215 statements reached (out of 1219): 99% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  58 alarms generated by the analysis:
      31 accesses to uninitialized left-values
      18 invalid memory accesses
       9 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    35 valid     2 unknown     0 invalid     37 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 179
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 32 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 17
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 21 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 30 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 5
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 14 -eva-remove-redundant-alarms -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,equality -eva-auto-loop-unroll 9
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:91: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] jsmn.c:158: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] using specification for function printf_va_7
[eva] jsmn.c:158: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] jsmn.c:209: starting to merge loop iterations
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] jsmn.c:250: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 3
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_7
[eva] jsmn.c:42: starting to merge loop iterations
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] using specification for function printf_va_2
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] jsmn.c:93: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] using specification for function printf_va_1
[eva] jsmn.c:222: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/tests.c:83: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/tests.c:83: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:158: Trace partitioning superposing up to 100 states
[eva] jsmn.c:302: cannot properly split on \result == 2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] jsmn.c:125: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/tests.c:83: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] jsmn.c:209: Trace partitioning superposing up to 100 states
[eva] jsmn.c:302: cannot properly split on \result == 2
[eva] test/testutil.h:68: cannot properly split on \result == 0
[eva] jsmn.c:125: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] jsmn.c:302: cannot properly split on \result == 2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] jsmn.c:302: cannot properly split on \result == 5
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] using specification for function printf_va_8
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[eva] jsmn.c:302: cannot properly split on \result == 4
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[scope:rm_asserts] removing 2 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1149 statements reached (out of 1219): 94% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  34 alarms generated by the analysis:
      20 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    34 valid     1 unknown     0 invalid     35 total
  97% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:302: cannot properly split on \result == 7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1153 statements reached (out of 1219): 94% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  34 alarms generated by the analysis:
      18 accesses to uninitialized left-values
       9 invalid memory accesses
       7 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] jsmn.c:222: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1153 statements reached (out of 1219): 94% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  33 alarms generated by the analysis:
      18 accesses to uninitialized left-values
       8 invalid memory accesses
       7 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 4 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1162 statements reached (out of 1219): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  37 alarms generated by the analysis:
      21 accesses to uninitialized left-values
       8 invalid memory accesses
       8 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     2 unknown     0 invalid     35 total
  94% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? false
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 269
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 13 -eva-split-return auto -eva-slevel 70 -eva-remove-redundant-alarms -eva-plevel 123 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 77 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 50
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 12 -eva-split-return auto -eva-slevel 60 -eva-remove-redundant-alarms -eva-plevel 103 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 74 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 43
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 63 -eva-remove-redundant-alarms -eva-plevel 95 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 75 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 16 -eva-split-return auto -eva-slevel 66 -eva-remove-redundant-alarms -eva-plevel 111 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 66 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 43
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] jsmn.c:209: Trace partitioning superposing up to 200 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] jsmn.c:222: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 200 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 400 states
[eva] jsmn.c:209: Trace partitioning superposing up to 400 states
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: Trace partitioning superposing up to 200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 600 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 200 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:209: Trace partitioning superposing up to 400 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:93: Trace partitioning superposing up to 200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 600 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:93: Trace partitioning superposing up to 200 states
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:50: Trace partitioning superposing up to 300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 800 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:93: Trace partitioning superposing up to 300 states
[eva] jsmn.c:93: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:93: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 1
[eva] jsmn.c:302: cannot properly split on \result == 2
[eva] jsmn.c:129: Trace partitioning superposing up to 200 states
[eva] jsmn.c:129: Trace partitioning superposing up to 300 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 1
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 673
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 15 -eva-subdivide-non-linear 25 -eva-split-return auto -eva-slevel 98 -eva-remove-redundant-alarms -eva-plevel 184 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 117 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 77
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 13 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 105 -eva-remove-redundant-alarms -eva-plevel 182 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 116 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 73
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 16 -eva-split-return auto -eva-slevel 104 -eva-remove-redundant-alarms -eva-plevel 193 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 119 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 74
[parf] parameters: -eva-widening-delay 13 -eva-subdivide-non-linear 22 -eva-split-return auto -eva-slevel 98 -eva-remove-redundant-alarms -eva-plevel 185 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 126 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 89
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] jsmn.c:250: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: Trace partitioning superposing up to 1300 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:121: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:42: Trace partitioning superposing up to 100 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:50: Trace partitioning superposing up to 500 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:121: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:42: Trace partitioning superposing up to 100 states
[eva] jsmn.c:50: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:121: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:50: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:121: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: Trace partitioning superposing up to 200 states
[eva] jsmn.c:121: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:129: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 400 states
[eva] jsmn.c:42: Trace partitioning superposing up to 100 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 500 states
[eva] jsmn.c:50: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3600 states
[eva] jsmn.c:129: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4000 states
[eva] jsmn.c:93: Trace partitioning superposing up to 100 states
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:121: Trace partitioning superposing up to 200 states
[eva] jsmn.c:121: Trace partitioning superposing up to 300 states
[eva] jsmn.c:121: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4300 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:250: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] jsmn.c:294: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] using specification for function printf_va_8
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1124 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 1
[eva] jsmn.c:302: cannot properly split on \result == 2
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] base: base03
[parf] Analysis time for this epoch: 842
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 210 -eva-remove-redundant-alarms -eva-plevel 410 -eva-partition-history 9 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 242 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 160
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 35 -eva-split-return auto -eva-slevel 215 -eva-remove-redundant-alarms -eva-plevel 420 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 237 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 144
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 42 -eva-split-return auto -eva-slevel 224 -eva-remove-redundant-alarms -eva-plevel 406 -eva-partition-history 6 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 261 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 167
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 223 -eva-remove-redundant-alarms -eva-plevel 360 -eva-partition-history 6 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 226 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 143
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_parse) == -3, -1, 1, 2, 3, 4, 5, 7 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(tokeq) == 0 (auto)
  \return(parse) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_34
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_35
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_36
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_37
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_38
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_39
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_40
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_41
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] using specification for function printf_va_1
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_42
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_43
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] using specification for function printf_va_7
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_44
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_45
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_46
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_47
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_48
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_49
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_50
[eva] jsmn.c:209: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_51
[eva] jsmn.c:209: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_52
[eva] jsmn.c:250: starting to merge loop iterations
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_53
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_54
[eva] jsmn.c:209: Trace partitioning superposing up to 400 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_55
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_56
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_57
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_58
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 600 states
[eva] jsmn.c:209: Trace partitioning superposing up to 600 states
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 700 states
[eva] jsmn.c:209: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1900 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2400 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3400 states
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:209: Trace partitioning superposing up to 500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 600 states
[eva] jsmn.c:209: Trace partitioning superposing up to 700 states
[eva] jsmn.c:209: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3400 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1200 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3700 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 1400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3700 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4100 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 1900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4300 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4500 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2800 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 2900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 3900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4600 states
[eva] jsmn.c:209: Trace partitioning superposing up to 3900 states
[eva] jsmn.c:209: Trace partitioning superposing up to 4000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 4900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 8000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5600 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 5700 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1120 statements reached (out of 1219): 91% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  21 alarms generated by the analysis:
      12 accesses to uninitialized left-values
       6 invalid memory accesses
       3 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:250: Trace partitioning superposing up to 7400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 5900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6200 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6300 states
[eva] jsmn.c:250: Trace partitioning superposing up to 8000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6400 states
[eva] jsmn.c:250: Trace partitioning superposing up to 8100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6500 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6600 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6700 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6800 states
[eva] jsmn.c:250: Trace partitioning superposing up to 6900 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7000 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7100 states
[eva] jsmn.c:250: Trace partitioning superposing up to 7200 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:250: Trace partitioning superposing up to 7300 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] jsmn.c:250: Trace partitioning superposing up to 7400 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1120 statements reached (out of 1219): 91% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  22 alarms generated by the analysis:
      12 accesses to uninitialized left-values
       7 invalid memory accesses
       3 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:209: Trace partitioning superposing up to 4100 states
[eva] jsmn.c:294: starting to merge loop iterations
[eva] jsmn.c:302: cannot properly split on \result == -3
[eva] jsmn.c:302: cannot properly split on \result == 1
[eva] test/tests.c:175: Trace partitioning superposing up to 100 states
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_59
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_60
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_61
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_62
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_63
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_64
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_65
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_66
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_67
[eva] test/testutil.h:76: allocating variable __malloc_parse_l76_68
[eva] using specification for function printf_va_8
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  26 functions analyzed (out of 26): 100% coverage.
  In these functions, 1125 statements reached (out of 1219): 92% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  29 alarms generated by the analysis:
      15 accesses to uninitialized left-values
       8 invalid memory accesses
       6 integer overflows
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    33 valid     0 unknown     0 invalid     33 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] Final parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 35 -eva-split-return auto -eva-slevel 215 -eva-remove-redundant-alarms -eva-plevel 420 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 237 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 144
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((t + i)->start)
[parf] alarm (  3): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  4): Uninitialized((t + i)->start)
[parf] alarm (  5): Uninitialized((t + i)->end)
[parf] alarm (  6): Uninitialized((tokens + i)->type)
[parf] alarm (  7): Memory_access((tokens + i)->type, read)
[parf] alarm (  8): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  9): Uninitialized((t + i)->start)
[parf] alarm ( 10): Uninitialized((t + i)->end)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm ( 13): Uninitialized((t + i)->end)
[parf] alarm ( 14): Uninitialized((t + i)->start)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 18): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 22): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 23): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 24): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + i)->start, read)
[parf] alarm ( 26): Uninitialized((tokens + i)->start)
[parf] alarm ( 27): Uninitialized((tokens + i)->end)
[parf] alarm ( 28): Uninitialized(token->start)
[parf] alarm ( 29): Memory_access(token->start, read)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(token->type)
[parf] alarm ( 32): Memory_access(token->start, read)
[parf] alarm ( 33): Uninitialized(token->start)
[parf] alarm ( 34): Uninitialized(token->end)
[parf] alarm ( 35): Memory_access((t + i)->type, read)
[parf] alarm ( 36): Uninitialized((t + i)->type)
[parf] alarm ( 37): Uninitialized((t + i)->type)
[parf] alarm ( 38): Memory_access(*ap, read)
[parf] alarm ( 39): Memory_access(*((char **)*ap), read)
[parf] alarm ( 40): Memory_access(*ap, read)
[parf] alarm ( 41): Uninitialized((t + i)->start)
[parf] alarm ( 42): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 43): Uninitialized((t + i)->start)
[parf] alarm ( 44): Memory_access(*ap, read)
[parf] alarm ( 45): Memory_access(*ap, read)
[parf] alarm ( 46): Memory_access(*((char **)*ap), read)
[parf] alarm ( 47): Uninitialized((t + i)->end)
[parf] alarm ( 48): Memory_access(*ap, read)
[parf] alarm ( 49): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 50): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 51): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 52): Uninitialized((t + i)->end)
[parf] alarm ( 53): Memory_access(*ap, read)
[parf] alarm ( 54): Memory_access(*ap, read)
[parf] alarm ( 55): Uninitialized((t + i)->size)
[parf] alarm ( 56): Uninitialized((t + i)->size)
[parf] alarm ( 57): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 58): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 32 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Uninitialized((t + i)->start)
[parf] alarm (  2): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  3): Uninitialized((t + i)->end)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Memory_access((tokens + i)->type, read)
[parf] alarm (  6): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  7): Uninitialized((t + i)->end)
[parf] alarm (  8): Uninitialized((t + i)->start)
[parf] alarm (  9): Uninitialized((t + i)->start)
[parf] alarm ( 10): Uninitialized((tokens + i)->start)
[parf] alarm ( 11): Uninitialized((tokens + i)->end)
[parf] alarm ( 12): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 13): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 14): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 15): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 16): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + i)->start, read)
[parf] alarm ( 21): Uninitialized((tokens + i)->start)
[parf] alarm ( 22): Uninitialized((tokens + i)->end)
[parf] alarm ( 23): Uninitialized(token->start)
[parf] alarm ( 24): Memory_access(token->start, read)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Uninitialized(token->type)
[parf] alarm ( 27): Uninitialized(token->start)
[parf] alarm ( 28): Uninitialized(token->end)
[parf] alarm ( 29): Memory_access((t + i)->type, read)
[parf] alarm ( 30): Uninitialized((t + i)->type)
[parf] alarm ( 31): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 32): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 33): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 34): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 35): Uninitialized((t + i)->size)
[parf] alarm ( 36): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 37): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 30 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 5
[parf] alarms:
[parf] alarm (  1): Uninitialized((t + i)->start)
[parf] alarm (  2): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  3): Uninitialized((t + i)->end)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Memory_access((tokens + i)->type, read)
[parf] alarm (  6): Uninitialized((tokens + i)->start)
[parf] alarm (  7): Uninitialized((tokens + i)->end)
[parf] alarm (  8): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  9): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 10): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 15): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 16): Memory_access((tokens + i)->start, read)
[parf] alarm ( 17): Uninitialized((tokens + i)->start)
[parf] alarm ( 18): Uninitialized((tokens + i)->end)
[parf] alarm ( 19): Uninitialized(token->start)
[parf] alarm ( 20): Memory_access(token->start, read)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Uninitialized(token->type)
[parf] alarm ( 23): Memory_access(token->start, read)
[parf] alarm ( 24): Uninitialized(token->start)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Memory_access((t + i)->type, read)
[parf] alarm ( 27): Uninitialized((t + i)->type)
[parf] alarm ( 28): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 30): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 31): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 32): Uninitialized((t + i)->size)
[parf] alarm ( 33): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 34): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 14 -eva-remove-redundant-alarms -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,equality -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm (  2): Uninitialized((t + i)->start)
[parf] alarm (  3): Uninitialized((t + i)->end)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Memory_access((tokens + i)->type, read)
[parf] alarm (  6): Uninitialized((tokens + i)->type)
[parf] alarm (  7): Uninitialized((tokens + i)->start)
[parf] alarm (  8): Uninitialized((tokens + i)->end)
[parf] alarm (  9): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 10): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 11): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 15): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 16): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 17): Memory_access((tokens + i)->start, read)
[parf] alarm ( 18): Uninitialized((tokens + i)->start)
[parf] alarm ( 19): Uninitialized((tokens + i)->end)
[parf] alarm ( 20): Uninitialized(token->start)
[parf] alarm ( 21): Memory_access(token->start, read)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Uninitialized(token->type)
[parf] alarm ( 24): Uninitialized(token->start)
[parf] alarm ( 25): Uninitialized(token->end)
[parf] alarm ( 26): Memory_access((t + i)->type, read)
[parf] alarm ( 27): Uninitialized((t + i)->type)
[parf] alarm ( 28): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 30): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 31): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 32): Uninitialized((t + i)->size)
[parf] alarm ( 33): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 34): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 21 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Uninitialized((t + i)->start)
[parf] alarm (  2): Signed_overflow((t + i)->end - (t + i)->start <= 2147483647)
[parf] alarm (  3): Uninitialized((t + i)->end)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Memory_access((tokens + i)->type, read)
[parf] alarm (  6): Uninitialized((tokens + i)->start)
[parf] alarm (  7): Uninitialized((tokens + i)->end)
[parf] alarm (  8): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  9): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 10): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 14): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 15): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 16): Memory_access((tokens + i)->start, read)
[parf] alarm ( 17): Uninitialized((tokens + i)->start)
[parf] alarm ( 18): Uninitialized((tokens + i)->end)
[parf] alarm ( 19): Uninitialized(token->start)
[parf] alarm ( 20): Memory_access(token->start, read)
[parf] alarm ( 21): Uninitialized(token->end)
[parf] alarm ( 22): Uninitialized(token->type)
[parf] alarm ( 23): Uninitialized(token->start)
[parf] alarm ( 24): Uninitialized(token->end)
[parf] alarm ( 25): Memory_access((t + i)->type, read)
[parf] alarm ( 26): Uninitialized((t + i)->type)
[parf] alarm ( 27): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 28): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 29): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 30): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 31): Uninitialized((t + i)->size)
[parf] alarm ( 32): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 33): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 13 -eva-split-return auto -eva-slevel 70 -eva-remove-redundant-alarms -eva-plevel 123 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 77 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 16 -eva-split-return auto -eva-slevel 104 -eva-remove-redundant-alarms -eva-plevel 193 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 119 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 74
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 13 -eva-subdivide-non-linear 22 -eva-split-return auto -eva-slevel 98 -eva-remove-redundant-alarms -eva-plevel 185 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 126 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 89
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 12): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 35 -eva-split-return auto -eva-slevel 215 -eva-remove-redundant-alarms -eva-plevel 420 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 237 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 144
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  5): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  6): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm (  7): Memory_access((tokens + i)->start, read)
[parf] alarm (  8): Uninitialized((tokens + i)->start)
[parf] alarm (  9): Uninitialized((tokens + i)->end)
[parf] alarm ( 10): Uninitialized(token->start)
[parf] alarm ( 11): Memory_access(token->start, read)
[parf] alarm ( 12): Uninitialized(token->end)
[parf] alarm ( 13): Uninitialized(token->type)
[parf] alarm ( 14): Uninitialized(token->start)
[parf] alarm ( 15): Uninitialized(token->end)
[parf] alarm ( 16): Memory_access((t + i)->type, read)
[parf] alarm ( 17): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 18): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 21): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 210 -eva-remove-redundant-alarms -eva-plevel 410 -eva-partition-history 9 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 242 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 160
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Uninitialized((tokens + i)->start)
[parf] alarm (  5): Uninitialized((tokens + i)->end)
[parf] alarm (  6): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  7): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm (  8): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  9): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 10): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 11): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 12): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 13): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 14): Memory_access((tokens + i)->start, read)
[parf] alarm ( 15): Uninitialized((tokens + i)->start)
[parf] alarm ( 16): Uninitialized((tokens + i)->end)
[parf] alarm ( 17): Uninitialized(token->start)
[parf] alarm ( 18): Memory_access(token->start, read)
[parf] alarm ( 19): Uninitialized(token->end)
[parf] alarm ( 20): Uninitialized(token->type)
[parf] alarm ( 21): Uninitialized(token->start)
[parf] alarm ( 22): Uninitialized(token->end)
[parf] alarm ( 23): Memory_access((t + i)->type, read)
[parf] alarm ( 24): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 25): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 26): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 27): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 28): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 29): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 223 -eva-remove-redundant-alarms -eva-plevel 360 -eva-partition-history 6 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 226 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 143
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  5): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  6): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm (  7): Memory_access((tokens + i)->start, read)
[parf] alarm (  8): Uninitialized((tokens + i)->start)
[parf] alarm (  9): Uninitialized((tokens + i)->end)
[parf] alarm ( 10): Uninitialized(token->start)
[parf] alarm ( 11): Memory_access(token->start, read)
[parf] alarm ( 12): Uninitialized(token->end)
[parf] alarm ( 13): Uninitialized(token->type)
[parf] alarm ( 14): Uninitialized(token->start)
[parf] alarm ( 15): Uninitialized(token->end)
[parf] alarm ( 16): Memory_access((t + i)->type, read)
[parf] alarm ( 17): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 20): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 22): Memory_access((tokens + parser->toksuper)->type, read)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 35 -eva-split-return auto -eva-slevel 215 -eva-remove-redundant-alarms -eva-plevel 420 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 237 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 144
[parf] alarms:
[parf] alarm (  1): Uninitialized((tokens + i)->type)
[parf] alarm (  2): Memory_access((tokens + i)->type, read)
[parf] alarm (  3): Uninitialized((tokens + i)->type)
[parf] alarm (  4): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm (  5): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm (  6): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm (  7): Memory_access((tokens + i)->start, read)
[parf] alarm (  8): Uninitialized((tokens + i)->start)
[parf] alarm (  9): Uninitialized((tokens + i)->end)
[parf] alarm ( 10): Uninitialized(token->start)
[parf] alarm ( 11): Memory_access(token->start, read)
[parf] alarm ( 12): Uninitialized(token->end)
[parf] alarm ( 13): Uninitialized(token->type)
[parf] alarm ( 14): Uninitialized(token->start)
[parf] alarm ( 15): Uninitialized(token->end)
[parf] alarm ( 16): Memory_access((t + i)->type, read)
[parf] alarm ( 17): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 18): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 21): Memory_access((tokens + parser->toksuper)->type, read)

real	30m5.361s
user	62m54.684s
sys	0m13.785s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing jsmn.c (with preprocessing)
[kernel] Parsing example/simple.c (with preprocessing)
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      35 accesses to uninitialized left-values
      18 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 180
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] set eva options
[parf] run eva: start
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 4 -eva-remove-redundant-alarms -eva-plevel 35 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] run eva: start
[parf] set eva options
[parf] run eva: start
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 36 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 20 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 14
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 8 -eva-plevel 34 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality -eva-auto-loop-unroll 15
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 8 -eva-plevel 24 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 11
[parf] @default,cvalue,gauges,symbolic-locations
[parf] @default,cvalue,equality
[parf] @default,cvalue,gauges
[parf] @default,cvalue,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:158: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:125: starting to merge loop iterations
[eva] jsmn.c:93: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:133: Trace partitioning superposing up to 100 states
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] jsmn.c:42: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:209: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      37 accesses to uninitialized left-values
      17 integer overflows
       9 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:222: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:250: starting to merge loop iterations
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva:summary] ====== ANALYSIS SUMMARY ======
[eva] using specification for function printf_va_6
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  65 alarms generated by the analysis:
      33 accesses to uninitialized left-values
      17 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  71 alarms generated by the analysis:
      38 accesses to uninitialized left-values
      18 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] jsmn.c:294: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_2
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] example/simple.c:65: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] example/simple.c:43: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 296 statements reached (out of 311): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  65 alarms generated by the analysis:
      33 accesses to uninitialized left-values
      17 integer overflows
      10 invalid memory accesses
       5 accesses out of bounds index
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    11 valid     6 unknown     0 invalid     17 total
  64% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? false
[parf] sample base00-sample01: subset of base? false
[parf] sample base00-sample03: subset of base? false
[parf] sample base00-sample02: subset of base? false
[parf] base: base01
[parf] Analysis time for this epoch: 270
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 17 -eva-split-return auto -eva-slevel 42 -eva-remove-redundant-alarms -eva-plevel 154 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 73 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 60
[parf] run eva: start
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 9 -eva-slevel 41 -eva-remove-redundant-alarms -eva-plevel 149 -eva-partition-history 0 -eva-min-loop-unroll 3 -eva-ilevel 84 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 59
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 54 -eva-remove-redundant-alarms -eva-plevel 149 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 94 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 63
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-slevel 39 -eva-remove-redundant-alarms -eva-plevel 148 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 87 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 61
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_8
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] example/simple.c:43: starting to merge loop iterations
[eva] example/simple.c:65: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 209 statements reached (out of 311): 67% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  2 alarms generated by the analysis:
       2 accesses to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 405
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 47 -eva-slevel 165 -eva-remove-redundant-alarms -eva-plevel 558 -eva-partition-history 1 -eva-min-loop-unroll 2 -eva-ilevel 255 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 231
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 39 -eva-slevel 153 -eva-remove-redundant-alarms -eva-plevel 538 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 255 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 230
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 56 -eva-split-return auto -eva-slevel 165 -eva-remove-redundant-alarms -eva-plevel 561 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 246 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 225
[parf] set eva options
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 51 -eva-split-return auto -eva-slevel 160 -eva-remove-redundant-alarms -eva-plevel 534 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 256 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 224
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] base: base03
[parf] Analysis time for this epoch: 607
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 138 -eva-split-return auto -eva-slevel 562 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 7 -eva-ilevel 503 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 802
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 131 -eva-slevel 570 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 1 -eva-min-loop-unroll 5 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 816
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 145 -eva-split-return auto -eva-slevel 571 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 803
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 117 -eva-slevel 548 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 813
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] base: base04
[parf] Analysis time for this epoch: 911
[parf] sample: base04-sample00
[parf] sample: base04-sample01
[parf] sample: base04-sample02
[parf] sample: base04-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1827
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 1 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 1827
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1827
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 1827
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function strncmp
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] base: base05
[parf] Analysis time for this epoch: 1366
[parf] sample: base05-sample00
[parf] sample: base05-sample01
[parf] sample: base05-sample02
[parf] sample: base05-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_5
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva:summary] ====== ANALYSIS SUMMARY ======
[eva] using specification for function printf_va_3
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base05-sample00: subset of base? true
[parf] sample base05-sample01: subset of base? true
[parf] sample base05-sample03: subset of base? true
[parf] sample base05-sample02: subset of base? true
[parf] base: base06
[parf] Analysis time for this epoch: 1796
[parf] sample: base06-sample00
[parf] sample: base06-sample01
[parf] sample: base06-sample02
[parf] sample: base06-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base06-sample01: subset of base? true
[parf] sample base06-sample00: subset of base? true
[parf] sample base06-sample02: subset of base? true
[parf] sample base06-sample03: subset of base? true
[parf] base: base07
[parf] Analysis time for this epoch: 1795
[parf] sample: base07-sample00
[parf] sample: base07-sample01
[parf] sample: base07-sample02
[parf] sample: base07-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 3 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strncmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(jsmn_alloc_token) == 0 (auto)
  \return(jsoneq) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function strncmp
[eva] FRAMAC_SHARE/libc/string.h:163: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strncmp
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva] using specification for function printf_va_6
[eva] using specification for function printf_va_7
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] example/simple.c:49: Trace partitioning superposing up to 100 states
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 8): 100% coverage.
  In these functions, 208 statements reached (out of 311): 66% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  1 alarm generated by the analysis:
       1 access to uninitialized left-values
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     0 unknown     0 invalid     15 total
  100% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base07-sample00: subset of base? true
[parf] sample base07-sample01: subset of base? true
[parf] sample base07-sample03: subset of base? true
[parf] sample base07-sample02: subset of base? true
[parf] Final parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 220 -eva-slevel 5000 -eva-remove-redundant-alarms -eva-plevel 2000 -eva-partition-history 0 -eva-min-loop-unroll 4 -eva-ilevel 256 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 1024
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Index_out_of_bound(i < 128)
[parf] alarm (  8): Uninitialized(t[i].start)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->type)
[parf] alarm ( 12): Uninitialized((tokens + i)->start)
[parf] alarm ( 13): Uninitialized((tokens + i)->end)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 17): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 18): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 19): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 20): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 21): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 22): Uninitialized((tokens + i)->start)
[parf] alarm ( 23): Memory_access((tokens + i)->start, read)
[parf] alarm ( 24): Uninitialized((tokens + i)->end)
[parf] alarm ( 25): Memory_access(tok->type, read)
[parf] alarm ( 26): Uninitialized(tok->type)
[parf] alarm ( 27): Memory_access(token->start, read)
[parf] alarm ( 28): Uninitialized(token->start)
[parf] alarm ( 29): Uninitialized(token->end)
[parf] alarm ( 30): Uninitialized(tok->start)
[parf] alarm ( 31): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 32): Uninitialized(tok->end)
[parf] alarm ( 33): Uninitialized(token->type)
[parf] alarm ( 34): Uninitialized(tok->start)
[parf] alarm ( 35): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 36): Uninitialized(tok->end)
[parf] alarm ( 37): Uninitialized(token->start)
[parf] alarm ( 38): Memory_access(token->start, read)
[parf] alarm ( 39): Uninitialized(token->end)
[parf] alarm ( 40): Uninitialized(t[0].type)
[parf] alarm ( 41): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 42): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 43): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].end)
[parf] alarm ( 46): Uninitialized(t[i + 1].start)
[parf] alarm ( 47): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 48): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 49): Uninitialized(t[i + 1].end)
[parf] alarm ( 50): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 51): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 52): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 53): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 36 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 20 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  3): Memory_access((tokens + i)->type, read)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Uninitialized(t[i].end)
[parf] alarm (  6): Uninitialized(t[i].start)
[parf] alarm (  7): Index_out_of_bound(i < 128)
[parf] alarm (  8): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm (  9): Uninitialized(t[i].start)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->start)
[parf] alarm ( 12): Uninitialized((tokens + i)->end)
[parf] alarm ( 13): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 16): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 17): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 21): Uninitialized((tokens + i)->start)
[parf] alarm ( 22): Memory_access((tokens + i)->start, read)
[parf] alarm ( 23): Uninitialized((tokens + i)->end)
[parf] alarm ( 24): Memory_access(tok->type, read)
[parf] alarm ( 25): Uninitialized(tok->type)
[parf] alarm ( 26): Memory_access(token->start, read)
[parf] alarm ( 27): Uninitialized(token->start)
[parf] alarm ( 28): Uninitialized(token->end)
[parf] alarm ( 29): Uninitialized(tok->start)
[parf] alarm ( 30): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 31): Uninitialized(tok->end)
[parf] alarm ( 32): Uninitialized(token->type)
[parf] alarm ( 33): Uninitialized(token->start)
[parf] alarm ( 34): Memory_access(token->start, read)
[parf] alarm ( 35): Uninitialized(token->end)
[parf] alarm ( 36): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 37): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 38): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 39): Uninitialized(t[i + 1].start)
[parf] alarm ( 40): Uninitialized(t[i + 1].start)
[parf] alarm ( 41): Uninitialized(t[i + 1].end)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].start)
[parf] alarm ( 44): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 45): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 46): Uninitialized(t[i + 1].end)
[parf] alarm ( 47): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 48): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 49): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 50): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 51): Uninitialized(t[i + 1].start)
[parf] alarm ( 52): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 53): Uninitialized(t[i + 1].end)
[parf] alarm ( 54): Uninitialized(t[i + 1].start)
[parf] alarm ( 55): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 56): Uninitialized(t[i + 1].type)
[parf] alarm ( 57): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 58): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 59): Uninitialized(t[i + 1].size)
[parf] alarm ( 60): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 61): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 62): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 63): Uninitialized(g->start)
[parf] alarm ( 64): Memory_access(g->start, read)
[parf] alarm ( 65): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 8 -eva-plevel 24 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Uninitialized(t[i].start)
[parf] alarm ( 11): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + i)->type)
[parf] alarm ( 13): Uninitialized((tokens + i)->start)
[parf] alarm ( 14): Uninitialized((tokens + i)->end)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 22): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 23): Uninitialized((tokens + i)->start)
[parf] alarm ( 24): Memory_access((tokens + i)->start, read)
[parf] alarm ( 25): Uninitialized((tokens + i)->end)
[parf] alarm ( 26): Memory_access(tok->type, read)
[parf] alarm ( 27): Uninitialized(tok->type)
[parf] alarm ( 28): Memory_access(token->start, read)
[parf] alarm ( 29): Uninitialized(token->start)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(tok->start)
[parf] alarm ( 32): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 33): Uninitialized(tok->end)
[parf] alarm ( 34): Uninitialized(token->type)
[parf] alarm ( 35): Uninitialized(tok->start)
[parf] alarm ( 36): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 37): Uninitialized(tok->end)
[parf] alarm ( 38): Uninitialized(token->start)
[parf] alarm ( 39): Memory_access(token->start, read)
[parf] alarm ( 40): Uninitialized(token->end)
[parf] alarm ( 41): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 42): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 43): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Uninitialized(t[i + 1].end)
[parf] alarm ( 47): Uninitialized(t[i + 1].start)
[parf] alarm ( 48): Uninitialized(t[i + 1].start)
[parf] alarm ( 49): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 50): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 51): Uninitialized(t[i + 1].end)
[parf] alarm ( 52): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 53): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 54): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 55): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].end)
[parf] alarm ( 59): Uninitialized(t[i + 1].start)
[parf] alarm ( 60): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 61): Uninitialized(t[i + 1].type)
[parf] alarm ( 62): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 63): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 64): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 65): Uninitialized(t[i + 1].size)
[parf] alarm ( 66): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 67): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 68): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 69): Uninitialized(g->start)
[parf] alarm ( 70): Memory_access(g->start, read)
[parf] alarm ( 71): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 8 -eva-plevel 34 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,equality -eva-auto-loop-unroll 15
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Uninitialized(t[i + 1].size)
[parf] alarm (  3): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  4): Memory_access((tokens + i)->type, read)
[parf] alarm (  5): Uninitialized((tokens + i)->type)
[parf] alarm (  6): Uninitialized(t[i].end)
[parf] alarm (  7): Uninitialized(t[i].start)
[parf] alarm (  8): Index_out_of_bound(i < 128)
[parf] alarm (  9): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm ( 10): Uninitialized(t[i].start)
[parf] alarm ( 11): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 12): Uninitialized((tokens + i)->type)
[parf] alarm ( 13): Uninitialized((tokens + i)->start)
[parf] alarm ( 14): Uninitialized((tokens + i)->end)
[parf] alarm ( 15): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 16): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 17): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 21): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 22): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 23): Uninitialized((tokens + i)->start)
[parf] alarm ( 24): Memory_access((tokens + i)->start, read)
[parf] alarm ( 25): Uninitialized((tokens + i)->end)
[parf] alarm ( 26): Memory_access(tok->type, read)
[parf] alarm ( 27): Uninitialized(tok->type)
[parf] alarm ( 28): Memory_access(token->start, read)
[parf] alarm ( 29): Uninitialized(token->start)
[parf] alarm ( 30): Uninitialized(token->end)
[parf] alarm ( 31): Uninitialized(tok->start)
[parf] alarm ( 32): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 33): Uninitialized(tok->end)
[parf] alarm ( 34): Uninitialized(token->type)
[parf] alarm ( 35): Uninitialized(tok->start)
[parf] alarm ( 36): Uninitialized(token->start)
[parf] alarm ( 37): Uninitialized(token->end)
[parf] alarm ( 38): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 39): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 40): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 41): Uninitialized(t[i + 1].start)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].end)
[parf] alarm ( 44): Uninitialized(t[i + 1].start)
[parf] alarm ( 45): Uninitialized(t[i + 1].start)
[parf] alarm ( 46): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 47): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 48): Uninitialized(t[i + 1].end)
[parf] alarm ( 49): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 50): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 51): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 52): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 53): Uninitialized(t[i + 1].start)
[parf] alarm ( 54): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 55): Uninitialized(t[i + 1].end)
[parf] alarm ( 56): Uninitialized(t[i + 1].start)
[parf] alarm ( 57): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 58): Uninitialized(t[i + 1].type)
[parf] alarm ( 59): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 60): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 61): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 62): Uninitialized(t[i + 1].size)
[parf] alarm ( 63): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 64): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 65): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 66): Uninitialized(g->start)
[parf] alarm ( 67): Memory_access(g->start, read)
[parf] alarm ( 68): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 4 -eva-remove-redundant-alarms -eva-plevel 35 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Signed_overflow(i + (t[i + 1].size + 1) <= 2147483647)
[parf] alarm (  2): Signed_overflow(t[i + 1].size + 1 <= 2147483647)
[parf] alarm (  3): Memory_access((tokens + i)->type, read)
[parf] alarm (  4): Uninitialized((tokens + i)->type)
[parf] alarm (  5): Uninitialized(t[i].end)
[parf] alarm (  6): Uninitialized(t[i].start)
[parf] alarm (  7): Index_out_of_bound(i < 128)
[parf] alarm (  8): Signed_overflow(t[i].end - t[i].start <= 2147483647)
[parf] alarm (  9): Uninitialized(t[i].start)
[parf] alarm ( 10): Signed_overflow(i + 1 <= 2147483647)
[parf] alarm ( 11): Uninitialized((tokens + i)->start)
[parf] alarm ( 12): Uninitialized((tokens + i)->end)
[parf] alarm ( 13): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 14): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 15): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 16): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 17): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 18): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 19): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 20): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 21): Uninitialized((tokens + i)->start)
[parf] alarm ( 22): Memory_access((tokens + i)->start, read)
[parf] alarm ( 23): Uninitialized((tokens + i)->end)
[parf] alarm ( 24): Memory_access(tok->type, read)
[parf] alarm ( 25): Uninitialized(tok->type)
[parf] alarm ( 26): Memory_access(token->start, read)
[parf] alarm ( 27): Uninitialized(token->start)
[parf] alarm ( 28): Uninitialized(token->end)
[parf] alarm ( 29): Uninitialized(tok->start)
[parf] alarm ( 30): Signed_overflow(tok->end - tok->start <= 2147483647)
[parf] alarm ( 31): Uninitialized(tok->end)
[parf] alarm ( 32): Uninitialized(token->type)
[parf] alarm ( 33): Uninitialized(token->start)
[parf] alarm ( 34): Memory_access(token->start, read)
[parf] alarm ( 35): Uninitialized(token->end)
[parf] alarm ( 36): Signed_overflow(count + 1 <= 2147483647)
[parf] alarm ( 37): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 38): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 39): Uninitialized(t[i + 1].start)
[parf] alarm ( 40): Uninitialized(t[i + 1].start)
[parf] alarm ( 41): Uninitialized(t[i + 1].end)
[parf] alarm ( 42): Uninitialized(t[i + 1].start)
[parf] alarm ( 43): Uninitialized(t[i + 1].start)
[parf] alarm ( 44): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 45): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 46): Uninitialized(t[i + 1].end)
[parf] alarm ( 47): Signed_overflow((tokens + parser->toksuper)->size + 1 <= 2147483647)
[parf] alarm ( 48): Memory_access((tokens + parser->toksuper)->size, write)
[parf] alarm ( 49): Uninitialized((tokens + parser->toksuper)->size)
[parf] alarm ( 50): Signed_overflow(t[i + 1].end - t[i + 1].start <= 2147483647)
[parf] alarm ( 51): Uninitialized(t[i + 1].start)
[parf] alarm ( 52): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 53): Uninitialized(t[i + 1].end)
[parf] alarm ( 54): Uninitialized(t[i + 1].start)
[parf] alarm ( 55): Index_out_of_bound(i + 1 < 128)
[parf] alarm ( 56): Uninitialized(t[i + 1].type)
[parf] alarm ( 57): Uninitialized((tokens + parser->toksuper)->type)
[parf] alarm ( 58): Memory_access((tokens + parser->toksuper)->type, read)
[parf] alarm ( 59): Uninitialized(t[i + 1].size)
[parf] alarm ( 60): Signed_overflow((i + j) + 2 <= 2147483647)
[parf] alarm ( 61): Signed_overflow(i + j <= 2147483647)
[parf] alarm ( 62): Signed_overflow(g->end - g->start <= 2147483647)
[parf] alarm ( 63): Uninitialized(g->start)
[parf] alarm ( 64): Memory_access(g->start, read)
[parf] alarm ( 65): Uninitialized(g->end)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 54 -eva-remove-redundant-alarms -eva-plevel 149 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 94 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 63
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 9 -eva-slevel 41 -eva-remove-redundant-alarms -eva-plevel 149 -eva-partition-history 0 -eva-min-loop-unroll 3 -eva-ilevel 84 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 59
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] alarm (  2): Uninitialized(t[i + 1].type)
[parf] ============================================================================
[parf] ====== project "base01-sample02 2" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 17 -eva-split-return auto -eva-slevel 42 -eva-remove-redundant-alarms -eva-plevel 154 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 73 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 60
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base01-sample03 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-slevel 39 -eva-remove-redundant-alarms -eva-plevel 148 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 87 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 61
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 51 -eva-split-return auto -eva-slevel 160 -eva-remove-redundant-alarms -eva-plevel 534 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 256 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 224
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 39 -eva-slevel 153 -eva-remove-redundant-alarms -eva-plevel 538 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 255 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 230
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample02 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 56 -eva-split-return auto -eva-slevel 165 -eva-remove-redundant-alarms -eva-plevel 561 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 246 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 225
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base02-sample03 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 47 -eva-slevel 165 -eva-remove-redundant-alarms -eva-plevel 558 -eva-partition-history 1 -eva-min-loop-unroll 2 -eva-ilevel 255 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 231
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 138 -eva-split-return auto -eva-slevel 562 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 7 -eva-ilevel 503 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 802
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 117 -eva-slevel 548 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 813
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 145 -eva-split-return auto -eva-slevel 571 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 803
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base03-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 131 -eva-slevel 570 -eva-remove-redundant-alarms -eva-plevel 2535 -eva-partition-history 1 -eva-min-loop-unroll 5 -eva-ilevel 503 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 816
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 1 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 1827
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1827
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-split-return auto -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1827
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base04-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 338 -eva-slevel 5549 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 1827
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base05-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base05-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base05-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base05-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base06-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base06-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base06-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base06-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base07-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base07-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 3 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base07-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] ====== project "base07-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 441 -eva-split-return auto -eva-slevel 10001 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 2049
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 54 -eva-remove-redundant-alarms -eva-plevel 149 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 94 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 63
[parf] alarms:
[parf] alarm (  1): Uninitialized(t[i + 1].start)

real	0m9.503s
user	0m15.202s
sys	0m1.408s
