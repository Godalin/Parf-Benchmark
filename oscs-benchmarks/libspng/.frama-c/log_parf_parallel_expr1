Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing fc_stubs.c (with preprocessing)
[kernel] Parsing examples/example.c (with preprocessing)
[kernel] Parsing spng.c (with preprocessing)
[kernel:typing:incompatible-types-call] spng.c:401: Warning: 
  expected 'unsigned char *' but got argument of type 'unsigned char const *': ctx->data
[kernel:typing:incompatible-types-call] spng.c:1024: Warning: 
  expected 'unsigned char *' but got argument of type 'unsigned char const *': 
  data + 12
[kernel:parser:decimal-float] spng.c:1830: Warning: 
  Floating-point constant 2.2f is not represented exactly. Will use 0x1.19999a0000000p1.
  (warn-once: no further messages from category 'parser:decimal-float' will be emitted)
[kernel] Parsing FRAMAC_SHARE/libc/stdio.c (with preprocessing)
mkdir: .parf_temp_files: File exists
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] examples/example.c:34: allocating variable __malloc_main_l34
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_7
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_0
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_1
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_0
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_2
[eva] examples/example.c:106: allocating variable __malloc_main_l106
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_3
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_1
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_1
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_4
[eva] spng.c:1650: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_5
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_6
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_7
[eva] spng.c:646: starting to merge loop iterations
[eva] using specification for function abs
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:1967: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_8
[eva] spng.c:1500: starting to merge loop iterations
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1960 statements reached (out of 2559): 76% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  186 alarms generated by the analysis:
     102 accesses to uninitialized left-values
      50 invalid memory accesses
       6 divisions by zero
       6 escaping addresses
       5 invalid shifts
       2 integer overflows
       1 access out of bounds index
      14 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   413 valid    84 unknown     0 invalid    497 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 179
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 9 -eva-remove-redundant-alarms -eva-plevel 27 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 21 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 9
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 17 -eva-plevel 35 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 12
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-slevel 6 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 8
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality
[parf] @default,cvalue
[parf] @default,cvalue,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] using specification for function fopen
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_2
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function rewind
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_1
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] using specification for function ftell
[eva] using specification for function printf_va_5
[eva] using specification for function rewind
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_5
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1388: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1283: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1263: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:1483: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:1690: cannot properly split on \result == 0
[eva] spng.c:2476: cannot properly split on \result == 0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:1483: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1690: cannot properly split on \result == 0
[eva] spng.c:2476: cannot properly split on \result == 0
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1483: Trace partitioning superposing up to 500 states
[eva] spng.c:1483: Trace partitioning superposing up to 400 states
[eva] spng.c:2467: cannot properly split on \result == 0
[eva] spng.c:2467: cannot properly split on \result == 0
[eva] spng.c:1483: Trace partitioning superposing up to 600 states
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] using specification for function printf_va_11
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1942 statements reached (out of 2559): 75% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  158 alarms generated by the analysis:
      85 accesses to uninitialized left-values
      50 invalid memory accesses
       5 divisions by zero
       5 escaping addresses
       3 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   411 valid    84 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:1617: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] spng.c:1500: starting to merge loop iterations
[eva] spng.c:1617: cannot properly split on \result == 0
[eva] spng.c:2246: cannot properly split on \result == 0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] spng.c:1500: starting to merge loop iterations
[eva] spng.c:1617: cannot properly split on \result == 0
[eva] spng.c:2246: cannot properly split on \result == 0
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 35 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1945 statements reached (out of 2559): 76% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  160 alarms generated by the analysis:
      88 accesses to uninitialized left-values
      50 invalid memory accesses
       6 escaping addresses
       4 divisions by zero
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   411 valid    84 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1928 statements reached (out of 2559): 75% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  176 alarms generated by the analysis:
     102 accesses to uninitialized left-values
      50 invalid memory accesses
       6 divisions by zero
       6 escaping addresses
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   410 valid    84 unknown     0 invalid    494 total
  82% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1945 statements reached (out of 2559): 76% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  143 alarms generated by the analysis:
      72 accesses to uninitialized left-values
      50 invalid memory accesses
       5 escaping addresses
       4 divisions by zero
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   411 valid    84 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 359
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 44 -eva-remove-redundant-alarms -eva-plevel 63 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 39 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 23
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 27 -eva-remove-redundant-alarms -eva-plevel 68 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 41 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 26
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 11 -eva-split-return auto -eva-slevel 39 -eva-remove-redundant-alarms -eva-plevel 69 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 46 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 19
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 65 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 37 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 31
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function printf_va_2
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function fseek
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function ftell
[eva] using specification for function printf_va_3
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function rewind
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function fread
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] using specification for function printf_va_4
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:1417: starting to merge loop iterations
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1417: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] spng.c:1428: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1046: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] spng.c:1690: cannot properly split on \result == 0
[eva] spng.c:2476: cannot properly split on \result == 0
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1483: Trace partitioning superposing up to 1300 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1483: Trace partitioning superposing up to 700 states
[eva] spng.c:2467: cannot properly split on \result == 0
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1483: Trace partitioning superposing up to 1500 states
[eva] spng.c:1690: cannot properly split on \result == 0
[eva] spng.c:2476: cannot properly split on \result == 0
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:1483: Trace partitioning superposing up to 1300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:1690: cannot properly split on \result == 0
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:2476: cannot properly split on \result == 0
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1483: Trace partitioning superposing up to 1000 states
[eva] spng.c:1483: Trace partitioning superposing up to 900 states
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:2467: cannot properly split on \result == 0
[eva] spng.c:2467: cannot properly split on \result == 0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] spng.c:1500: starting to merge loop iterations
[eva] spng.c:1617: Trace partitioning superposing up to 200 states
[eva] spng.c:1617: cannot properly split on \result == 0
[eva] spng.c:2246: cannot properly split on \result == 0
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2314: assertion 'Eva,mem_access' got final status invalid.
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1942 statements reached (out of 2559): 75% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  140 alarms generated by the analysis:
      72 accesses to uninitialized left-values
      50 invalid memory accesses
       3 divisions by zero
       3 escaping addresses
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   411 valid    84 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:488: starting to merge loop iterations
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  44 functions analyzed (out of 94): 46% coverage.
  In these functions, 1686 statements reached (out of 2377): 70% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  114 alarms generated by the analysis:
      53 accesses to uninitialized left-values
      49 invalid memory accesses
       3 escaping addresses
       1 invalid shift
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   275 valid    70 unknown     0 invalid    345 total
  79% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] spng.c:1500: starting to merge loop iterations
[eva] spng.c:1500: Trace partitioning superposing up to 100 states
[eva] spng.c:1617: Trace partitioning superposing up to 400 states
[eva] spng.c:1617: cannot properly split on \result == 0
[eva] spng.c:2246: cannot properly split on \result == 0
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1931 statements reached (out of 2559): 75% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  135 alarms generated by the analysis:
      68 accesses to uninitialized left-values
      49 invalid memory accesses
       3 divisions by zero
       3 escaping addresses
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   414 valid    81 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_18
[eva] spng.c:1500: starting to merge loop iterations
[eva] spng.c:1500: Trace partitioning superposing up to 100 states
[eva] spng.c:1617: Trace partitioning superposing up to 300 states
[eva] spng.c:1617: cannot properly split on \result == 0
[eva] spng.c:2246: cannot properly split on \result == 0
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  45 functions analyzed (out of 94): 47% coverage.
  In these functions, 1931 statements reached (out of 2559): 75% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  135 alarms generated by the analysis:
      68 accesses to uninitialized left-values
      49 invalid memory accesses
       3 divisions by zero
       3 escaping addresses
       2 invalid shifts
       1 access out of bounds index
       1 integer overflow
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   414 valid    81 unknown     0 invalid    495 total
  83% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 719
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 76 -eva-remove-redundant-alarms -eva-plevel 134 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 35
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 84 -eva-remove-redundant-alarms -eva-plevel 146 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 33
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 85 -eva-remove-redundant-alarms -eva-plevel 141 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 98 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 30
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 80 -eva-remove-redundant-alarms -eva-plevel 128 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 99 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 36
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] spng.c:946: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1444: Trace partitioning superposing up to 100 states
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1444: Trace partitioning superposing up to 100 states
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1417: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1417: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1444: Trace partitioning superposing up to 100 states
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1444: Trace partitioning superposing up to 100 states
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1046: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1483: Trace partitioning superposing up to 2600 states
[eva] spng.c:1046: starting to merge loop iterations
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] spng.c:1046: Trace partitioning superposing up to 800 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1483: Trace partitioning superposing up to 2700 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:1388: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1483: Trace partitioning superposing up to 2400 states
[eva] spng.c:1483: Trace partitioning superposing up to 2400 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] spng.c:1046: Trace partitioning superposing up to 100 states
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1483: Trace partitioning superposing up to 800 states
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] using specification for function abs
[eva] spng.c:1483: Trace partitioning superposing up to 900 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:488: starting to merge loop iterations
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] using specification for function abs
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:488: starting to merge loop iterations
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2302: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  44 functions analyzed (out of 94): 46% coverage.
  In these functions, 1686 statements reached (out of 2377): 70% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  115 alarms generated by the analysis:
      54 accesses to uninitialized left-values
      49 invalid memory accesses
       3 escaping addresses
       1 invalid shift
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   275 valid    70 unknown     0 invalid    345 total
  79% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] using specification for function abs
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] using specification for function abs
[eva] spng.c:1922: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2302: Trace partitioning superposing up to 100 states
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  44 functions analyzed (out of 94): 46% coverage.
  In these functions, 1686 statements reached (out of 2377): 70% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  116 alarms generated by the analysis:
      54 accesses to uninitialized left-values
      49 invalid memory accesses
       3 escaping addresses
       1 invalid shift
       9 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   275 valid    70 unknown     0 invalid    345 total
  79% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2302: Trace partitioning superposing up to 100 states
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  44 functions analyzed (out of 94): 46% coverage.
  In these functions, 1678 statements reached (out of 2377): 70% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  115 alarms generated by the analysis:
      54 accesses to uninitialized left-values
      49 invalid memory accesses
       3 escaping addresses
       9 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   275 valid    70 unknown     0 invalid    345 total
  79% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_11
[eva] spng.c:2302: starting to merge loop iterations
[eva] spng.c:2302: Trace partitioning superposing up to 100 states
[scope:rm_asserts] removing 19 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  44 functions analyzed (out of 94): 46% coverage.
  In these functions, 1678 statements reached (out of 2377): 70% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  114 alarms generated by the analysis:
      54 accesses to uninitialized left-values
      49 invalid memory accesses
       3 escaping addresses
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions   275 valid    70 unknown     0 invalid    345 total
  79% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? false
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? false
[parf] base: base03
[parf] Analysis time for this epoch: 1297
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 15 -eva-subdivide-non-linear 42 -eva-split-return auto -eva-slevel 150 -eva-remove-redundant-alarms -eva-plevel 264 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 8 -eva-ilevel 186 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 66
[parf] set eva options
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 165 -eva-remove-redundant-alarms -eva-plevel 258 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 8 -eva-ilevel 181 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 66
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 44 -eva-split-return auto -eva-slevel 138 -eva-remove-redundant-alarms -eva-plevel 265 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 182 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 64
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 53 -eva-split-return auto -eva-slevel 160 -eva-remove-redundant-alarms -eva-plevel 252 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 196 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 81
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Splitting return states on:
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_interval) == 0, 10 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(spng_ctx_new) == 0 (auto)
  \return(spng_ctx_new2) == 0 (auto)
  \return(spng_set_png_buffer) == 0 (auto)
  \return(spng_set_crc_action) == 0 (auto)
  \return(spng_decoded_image_size) == 0 (auto)
  \return(spng_decode_image) == 0 (auto)
  \return(spng_get_ihdr) == 0 (auto)
  \return(spng_strerror) == 0 (auto)
  \return(spng_version_string) == 0 (auto)
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgetc) == -1, 10 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 1 (auto)
  \return(feof) == 0 (auto)
  \return(ferror) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(memcmp) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strcmp) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(__fc_fpclassifyf) == 2 (auto)
  \return(__fc_fpclassify) == 2 (auto)
  \return(inflateInit) == 0 (auto)
  \return(inflate) == -5, 0, 1 (auto)
  \return(spng__malloc) == 0 (auto)
  \return(spng__calloc) == 0 (auto)
  \return(spng__realloc) == 0 (auto)
  \return(spng__zalloc) == 0 (auto)
  \return(read_u32) == 0, 1, 2, 3, 4, 6, 7, 9, 13, 32 (auto)
  \return(is_critical_chunk) == 0 (auto)
  \return(read_data) == -1, 0 (auto)
  \return(read_and_check_crc) == -1, 0 (auto)
  \return(read_header) == -1, 0 (auto)
  \return(read_chunk_bytes) == -1, 0 (auto)
  \return(discard_chunk_bytes) == -1, 0 (auto)
  \return(read_idat_bytes) == -5, 0, 1 (auto)
  \return(read_scanline_bytes) == 0 (auto)
  \return(defilter_scanline) == 0 (auto)
  \return(check_ihdr) == 0 (auto)
  \return(check_plte) == 0 (auto)
  \return(check_sbit) == 0 (auto)
  \return(check_chrm_int) == 0 (auto)
  \return(check_phys) == 0 (auto)
  \return(check_time) == 0 (auto)
  \return(check_offs) == 0 (auto)
  \return(check_exif) == 0 (auto)
  \return(check_png_keyword) == 0 (auto)
  \return(check_png_text) == 0 (auto)
  \return(chunk_fits_in_cache) == 0 (auto)
  \return(read_chunks_before_idat) == 0 (auto)
  \return(read_chunks_after_idat) == 0 (auto)
  \return(calculate_subimages) == 0 (auto)
  \return(get_ancillary) == 0 (auto)
  \return(get_ancillary2) == 0 (auto)
  \return(is_valid_mode) == 0 (auto)
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] Analyzing a complete application starting at main
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function printf_va_2
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] using specification for function rewind
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] examples/example.c:34: allocating variable __malloc_main_l34_0
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function printf_va_3
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] using specification for function printf_va_4
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] spng.c:2274: allocating variable __calloc_spng_ctx_new2_l2274_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function printf_va_5
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] using specification for function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:63: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:266: cannot properly split on \result == 0
[eva] spng.c:1086: Trace partitioning superposing up to 100 states
[eva] spng.c:1086: Trace partitioning superposing up to 100 states
[eva] spng.c:1086: Trace partitioning superposing up to 100 states
[eva] spng.c:1086: Trace partitioning superposing up to 100 states
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:1086: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_9
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_2
[eva] FRAMAC_SHARE/libc/string.h:78: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] FRAMAC_SHARE/libc/string.h:85: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memchr
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] using specification for function strstr
[eva] FRAMAC_SHARE/libc/string.h:243: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:950: Trace partitioning superposing up to 100 states
[eva] spng.c:954: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:954: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_10
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1417: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:1428: starting to merge loop iterations
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:1444: Trace partitioning superposing up to 200 states
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1283: starting to merge loop iterations
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] using specification for function strcmp
[eva] FRAMAC_SHARE/libc/string.h:156: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function strcmp
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1283: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:1263: starting to merge loop iterations
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:950: Trace partitioning superposing up to 200 states
[eva] spng.c:946: starting to merge loop iterations
[eva] spng.c:950: Trace partitioning superposing up to 200 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 300 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 400 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 500 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: Trace partitioning superposing up to 600 states
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1046: Trace partitioning superposing up to 700 states
[eva] spng.c:1046: Trace partitioning superposing up to 800 states
[eva] spng.c:1046: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 800 states
[eva] spng.c:1388: starting to merge loop iterations
[eva] spng.c:1046: Trace partitioning superposing up to 800 states
[eva] spng.c:1046: Trace partitioning superposing up to 800 states
[eva] spng.c:1046: Trace partitioning superposing up to 900 states
[eva] spng.c:1046: Trace partitioning superposing up to 900 states
[eva] spng.c:1046: Trace partitioning superposing up to 900 states
[eva] spng.c:1046: Trace partitioning superposing up to 900 states
[eva] spng.c:1046: Trace partitioning superposing up to 1000 states
[eva] spng.c:1046: Trace partitioning superposing up to 1000 states
[eva] spng.c:1046: Trace partitioning superposing up to 1000 states
[eva] spng.c:1046: Trace partitioning superposing up to 1100 states
[eva] spng.c:1046: Trace partitioning superposing up to 1100 states
[eva] spng.c:1046: Trace partitioning superposing up to 1000 states
[eva] spng.c:1046: Trace partitioning superposing up to 1200 states
[eva] spng.c:1046: Trace partitioning superposing up to 1100 states
[eva] spng.c:1046: Trace partitioning superposing up to 1100 states
[eva] spng.c:1046: Trace partitioning superposing up to 1200 states
[eva] spng.c:1046: Trace partitioning superposing up to 1200 states
[eva] spng.c:1046: Trace partitioning superposing up to 1300 states
[eva] spng.c:1046: Trace partitioning superposing up to 1200 states
[eva] spng.c:1046: Trace partitioning superposing up to 1300 states
[eva] spng.c:1483: Trace partitioning superposing up to 4300 states
[eva] spng.c:1046: Trace partitioning superposing up to 1300 states
[eva] spng.c:1046: Trace partitioning superposing up to 1300 states
[eva] spng.c:1046: Trace partitioning superposing up to 1400 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:1483: Trace partitioning superposing up to 4300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1046: Trace partitioning superposing up to 1400 states
[eva] spng.c:1483: Trace partitioning superposing up to 5100 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] spng.c:1046: Trace partitioning superposing up to 1500 states
[eva] spng.c:1483: Trace partitioning superposing up to 5300 states
[eva] spng.c:1046: Trace partitioning superposing up to 200 states
[eva] using specification for function printf_va_8
[eva] using specification for function printf_va_9
[eva] using specification for function printf_va_10
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_11
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_3
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_3
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_12
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 300 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:450: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 400 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:492: Trace partitioning superposing up to 200 states
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1672: Trace partitioning superposing up to 200 states
[eva] spng.c:1650: Trace partitioning superposing up to 300 states
[eva] spng.c:1672: Trace partitioning superposing up to 100 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:1650: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_15
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_16
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_17
[eva] spng.c:1794: Trace partitioning superposing up to 100 states
[eva] spng.c:1922: Trace partitioning superposing up to 200 states
[eva] spng.c:1922: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:450: Trace partitioning superposing up to 100 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:450: Trace partitioning superposing up to 200 states
[eva] spng.c:450: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 300 states
[eva] spng.c:450: Trace partitioning superposing up to 400 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:450: Trace partitioning superposing up to 400 states
[eva] spng.c:447: starting to merge loop iterations
[eva] spng.c:450: Trace partitioning superposing up to 500 states
[eva] spng.c:466: cannot properly split on \result == 1
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:492: Trace partitioning superposing up to 100 states
[eva] spng.c:488: starting to merge loop iterations
[eva] examples/example.c:106: allocating variable __malloc_main_l106_0
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_13
[eva] spng.c:225: allocating variable __calloc_spng__calloc_l225_4
[eva] spng.c:230: allocating variable __realloc_spng__realloc_l230_4
[eva] spng.c:220: allocating variable __malloc_spng__malloc_l220_14
[eva] spng.c:488: starting to merge loop iterations
[eva] spng.c:492: Trace partitioning superposing up to 200 states
[parf] Final parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 76 -eva-remove-redundant-alarms -eva-plevel 128 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 35
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  3): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  4): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  5): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  9): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 10): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 11): Unspecified(ctx->splt_list)
[parf] alarm ( 12): Uninitialized(ctx->splt_list)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 15): Uninitialized(*(str + 0))
[parf] alarm ( 16): Memory_access(*(str + 0), read)
[parf] alarm ( 17): Uninitialized(ctx->n_splt)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 19): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 20): Uninitialized(*(end + -1))
[parf] alarm ( 21): Memory_access(*(end + -1), read)
[parf] alarm ( 22): Uninitialized(out_size_required)
[parf] alarm ( 23): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 25): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 26): Uninitialized(ihdr->color_type)
[parf] alarm ( 27): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 28): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 29): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 30): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 31): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 32): Division_by_zero((size_t)ctx->ihdr.height)
[parf] alarm ( 33): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 34): Invalid_shift((int)ihdr->bit_depth <= 32)
[parf] alarm ( 35): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 38): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 39): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 40): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 41): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 42): Uninitialized(red)
[parf] alarm ( 43): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 44): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 45): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 46): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 47): Uninitialized(green)
[parf] alarm ( 48): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 49): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 50): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 51): Uninitialized(blue)
[parf] alarm ( 52): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 53): Uninitialized(ctx->text_list)
[parf] alarm ( 54): Uninitialized(alpha)
[parf] alarm ( 55): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 56): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 57): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 58): Function_pointer(ctx->alloc.malloc_fn)
[parf] alarm ( 59): Uninitialized(c)
[parf] alarm ( 60): Function_pointer(ctx->alloc.calloc_fn)
[parf] alarm ( 61): Uninitialized(ctx->n_text)
[parf] alarm ( 62): Memory_access(*(argv + 1), read)
[parf] alarm ( 63): Function_pointer(ctx->alloc.realloc_fn)
[parf] alarm ( 64): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 65): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 66): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 67): Memory_access(*(argv + 1), read)
[parf] alarm ( 68): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 69): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 70): Function_pointer(ctx->alloc.free_fn)
[parf] alarm ( 71): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 72): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 73): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 74): Uninitialized(phys->unit_specifier)
[parf] alarm ( 75): Uninitialized(ctx->n_splt)
[parf] alarm ( 76): Uninitialized(bytes_read)
[parf] alarm ( 77): Uninitialized(sbit->red_bits)
[parf] alarm ( 78): Function_pointer(free_func)
[parf] alarm ( 79): Invalid_shift((int)shift_amount <= 32)
[parf] alarm ( 80): Signed_overflow((int)sample_bits << (int)shift_amount <= 2147483647)
[parf] alarm ( 81): Unspecified(ctx->splt_list)
[parf] alarm ( 82): Uninitialized(ctx->splt_list)
[parf] alarm ( 83): Uninitialized(*(data + 0))
[parf] alarm ( 84): Memory_access(*(data + 0), read)
[parf] alarm ( 85): Memory_access(*(data + 1), read)
[parf] alarm ( 86): Uninitialized(*(data + 1))
[parf] alarm ( 87): Uninitialized(sbit->green_bits)
[parf] alarm ( 88): Memory_access(*(data + 3), read)
[parf] alarm ( 89): Memory_access(*(data + 2), read)
[parf] alarm ( 90): Uninitialized(*(data + 0))
[parf] alarm ( 91): Memory_access(*(data + 0), read)
[parf] alarm ( 92): Uninitialized(*(data + 2))
[parf] alarm ( 93): Uninitialized(*(data + 1))
[parf] alarm ( 94): Memory_access(*(data + 1), read)
[parf] alarm ( 95): Uninitialized(*(data + 3))
[parf] alarm ( 96): Uninitialized(sbit->blue_bits)
[parf] alarm ( 97): Uninitialized(time->month)
[parf] alarm ( 98): Invalid_shift(tmp <= 32)
[parf] alarm ( 99): Memory_access(*(data + 0), read)
[parf] alarm (100): Memory_access(*(data + 1), read)
[parf] alarm (101): Uninitialized(*(data + 1))
[parf] alarm (102): Uninitialized(*(data + 3))
[parf] alarm (103): Memory_access(*(data + 2), read)
[parf] alarm (104): Uninitialized(*(data + 2))
[parf] alarm (105): Memory_access(*(data + 3), read)
[parf] alarm (106): Uninitialized(*(data + 0))
[parf] alarm (107): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm (108): Uninitialized(ihdr->bit_depth)
[parf] alarm (109): Uninitialized(ctx->ihdr.color_type)
[parf] alarm (110): Uninitialized(time->day)
[parf] alarm (111): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm (112): Uninitialized(ihdr->color_type)
[parf] alarm (113): Uninitialized(chunk->type[0])
[parf] alarm (114): Uninitialized(time->hour)
[parf] alarm (115): Uninitialized(ihdr->bit_depth)
[parf] alarm (116): Uninitialized(time->minute)
[parf] alarm (117): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm (118): Uninitialized(sbit->grayscale_bits)
[parf] alarm (119): Uninitialized(time->second)
[parf] alarm (120): Uninitialized(ihdr.color_type)
[parf] alarm (121): Uninitialized(sbit->alpha_bits)
[parf] alarm (122): Division_by_zero((unsigned long)ihdr->width)
[parf] alarm (123): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm (124): Uninitialized(ihdr->bit_depth)
[parf] alarm (125): Uninitialized(ihdr->bit_depth)
[parf] alarm (126): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm (127): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm (128): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm (129): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm (130): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm (131): Uninitialized(ihdr.width)
[parf] alarm (132): Uninitialized(ihdr.height)
[parf] alarm (133): Uninitialized(ihdr.bit_depth)
[parf] alarm (134): Uninitialized(ihdr.filter_method)
[parf] alarm (135): Uninitialized(ihdr.compression_method)
[parf] alarm (136): Uninitialized(ihdr.interlace_method)
[parf] alarm (137): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (138): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (139): Function_pointer(ctx->read_fn)
[parf] alarm (140): Uninitialized(offs->unit_specifier)
[parf] alarm (141): Uninitialized(sbit->red_bits)
[parf] alarm (142): Uninitialized(ihdr->bit_depth)
[parf] alarm (143): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (144): Uninitialized(out_size)
[parf] alarm (145): Uninitialized(sbit->green_bits)
[parf] alarm (146): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (147): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (148): Uninitialized(sbit->blue_bits)
[parf] alarm (149): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (150): Index_out_of_bound(k_0 < 256)
[parf] alarm (151): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (152): Uninitialized(sbit->alpha_bits)
[parf] alarm (153): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (154): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (155): Uninitialized(ihdr->bit_depth)
[parf] alarm (156): Uninitialized(ihdr->compression_method)
[parf] alarm (157): Unspecified(out)
[parf] alarm (158): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (159): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (160): Division_by_zero((unsigned long)(ctx->splt_list + i_0)->n_entries)
[parf] alarm (161): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (162): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (163): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (164): Uninitialized(ihdr->filter_method)
[parf] alarm (165): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (166): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (167): Uninitialized(ctx->exif.data)
[parf] alarm (168): Unspecified(ctx->exif.data)
[parf] alarm (169): Uninitialized(ihdr->interlace_method)
[parf] alarm (170): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (171): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (172): Pointer_comparison(str, (char const *)0)
[parf] alarm (173): Uninitialized(ctx->iccp.profile)
[parf] alarm (174): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm (175): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (176): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (177): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (178): Pointer_comparison(end, (char *)0)
[parf] alarm (179): Uninitialized(ctx->ihdr.color_type)
[parf] alarm (180): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (181): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (182): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (183): Uninitialized(ctx->gamma_lut)
[parf] alarm (184): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (185): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (186): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 17 -eva-plevel 35 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  3): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  4): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  5): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  9): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 10): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 11): Unspecified(ctx->splt_list)
[parf] alarm ( 12): Uninitialized(ctx->splt_list)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 15): Uninitialized(*(str + 0))
[parf] alarm ( 16): Memory_access(*(str + 0), read)
[parf] alarm ( 17): Uninitialized(ctx->n_splt)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 19): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 20): Uninitialized(*(end + -1))
[parf] alarm ( 21): Memory_access(*(end + -1), read)
[parf] alarm ( 22): Uninitialized(out_size_required)
[parf] alarm ( 23): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 25): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 26): Uninitialized(ihdr->color_type)
[parf] alarm ( 27): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 28): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 29): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 30): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 31): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 32): Division_by_zero((size_t)ctx->ihdr.height)
[parf] alarm ( 33): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 34): Invalid_shift((int)ihdr->bit_depth <= 32)
[parf] alarm ( 35): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 38): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 39): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 40): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 41): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 42): Uninitialized(red)
[parf] alarm ( 43): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 44): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 45): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 46): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 47): Uninitialized(green)
[parf] alarm ( 48): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 49): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 50): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 51): Uninitialized(blue)
[parf] alarm ( 52): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 53): Uninitialized(ctx->text_list)
[parf] alarm ( 54): Uninitialized(alpha)
[parf] alarm ( 55): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 56): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 57): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 58): Uninitialized(c)
[parf] alarm ( 59): Uninitialized(ctx->n_text)
[parf] alarm ( 60): Memory_access(*(argv + 1), read)
[parf] alarm ( 61): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 62): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 63): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 64): Memory_access(*(argv + 1), read)
[parf] alarm ( 65): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 66): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 67): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 68): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 69): Uninitialized(phys->unit_specifier)
[parf] alarm ( 70): Uninitialized(ctx->n_splt)
[parf] alarm ( 71): Uninitialized(bytes_read)
[parf] alarm ( 72): Uninitialized(sbit->red_bits)
[parf] alarm ( 73): Unspecified(ctx->splt_list)
[parf] alarm ( 74): Uninitialized(ctx->splt_list)
[parf] alarm ( 75): Uninitialized(*(data + 0))
[parf] alarm ( 76): Memory_access(*(data + 0), read)
[parf] alarm ( 77): Memory_access(*(data + 1), read)
[parf] alarm ( 78): Uninitialized(*(data + 1))
[parf] alarm ( 79): Uninitialized(sbit->green_bits)
[parf] alarm ( 80): Memory_access(*(data + 3), read)
[parf] alarm ( 81): Memory_access(*(data + 2), read)
[parf] alarm ( 82): Uninitialized(*(data + 0))
[parf] alarm ( 83): Memory_access(*(data + 0), read)
[parf] alarm ( 84): Uninitialized(*(data + 2))
[parf] alarm ( 85): Uninitialized(*(data + 1))
[parf] alarm ( 86): Memory_access(*(data + 1), read)
[parf] alarm ( 87): Uninitialized(*(data + 3))
[parf] alarm ( 88): Uninitialized(sbit->blue_bits)
[parf] alarm ( 89): Uninitialized(time->month)
[parf] alarm ( 90): Memory_access(*(data + 0), read)
[parf] alarm ( 91): Memory_access(*(data + 1), read)
[parf] alarm ( 92): Uninitialized(*(data + 1))
[parf] alarm ( 93): Uninitialized(*(data + 3))
[parf] alarm ( 94): Memory_access(*(data + 2), read)
[parf] alarm ( 95): Uninitialized(*(data + 2))
[parf] alarm ( 96): Memory_access(*(data + 3), read)
[parf] alarm ( 97): Uninitialized(*(data + 0))
[parf] alarm ( 98): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 99): Uninitialized(ihdr->bit_depth)
[parf] alarm (100): Uninitialized(ctx->ihdr.color_type)
[parf] alarm (101): Uninitialized(time->day)
[parf] alarm (102): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm (103): Uninitialized(ihdr->color_type)
[parf] alarm (104): Uninitialized(chunk->type[0])
[parf] alarm (105): Uninitialized(time->hour)
[parf] alarm (106): Uninitialized(ihdr->bit_depth)
[parf] alarm (107): Uninitialized(time->minute)
[parf] alarm (108): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm (109): Uninitialized(sbit->grayscale_bits)
[parf] alarm (110): Uninitialized(time->second)
[parf] alarm (111): Uninitialized(ihdr.color_type)
[parf] alarm (112): Uninitialized(sbit->alpha_bits)
[parf] alarm (113): Division_by_zero((unsigned long)ihdr->width)
[parf] alarm (114): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm (115): Uninitialized(ihdr->bit_depth)
[parf] alarm (116): Uninitialized(ihdr->bit_depth)
[parf] alarm (117): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm (118): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm (119): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm (120): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm (121): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm (122): Uninitialized(ihdr.width)
[parf] alarm (123): Uninitialized(ihdr.height)
[parf] alarm (124): Uninitialized(ihdr.bit_depth)
[parf] alarm (125): Uninitialized(ihdr.filter_method)
[parf] alarm (126): Uninitialized(ihdr.compression_method)
[parf] alarm (127): Uninitialized(ihdr.interlace_method)
[parf] alarm (128): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (129): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (130): Uninitialized(offs->unit_specifier)
[parf] alarm (131): Uninitialized(sbit->red_bits)
[parf] alarm (132): Uninitialized(ihdr->bit_depth)
[parf] alarm (133): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (134): Uninitialized(out_size)
[parf] alarm (135): Uninitialized(sbit->green_bits)
[parf] alarm (136): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (137): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (138): Uninitialized(sbit->blue_bits)
[parf] alarm (139): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (140): Index_out_of_bound(k_0 < 256)
[parf] alarm (141): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (142): Uninitialized(sbit->alpha_bits)
[parf] alarm (143): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (144): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (145): Uninitialized(ihdr->bit_depth)
[parf] alarm (146): Uninitialized(ihdr->compression_method)
[parf] alarm (147): Unspecified(out)
[parf] alarm (148): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (149): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (150): Division_by_zero((unsigned long)(ctx->splt_list + i_0)->n_entries)
[parf] alarm (151): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (152): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (153): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (154): Uninitialized(ihdr->filter_method)
[parf] alarm (155): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (156): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (157): Uninitialized(ctx->exif.data)
[parf] alarm (158): Unspecified(ctx->exif.data)
[parf] alarm (159): Uninitialized(ihdr->interlace_method)
[parf] alarm (160): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (161): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (162): Pointer_comparison(str, (char const *)0)
[parf] alarm (163): Uninitialized(ctx->iccp.profile)
[parf] alarm (164): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm (165): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (166): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (167): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (168): Pointer_comparison(end, (char *)0)
[parf] alarm (169): Uninitialized(ctx->ihdr.color_type)
[parf] alarm (170): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (171): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (172): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (173): Uninitialized(ctx->gamma_lut)
[parf] alarm (174): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (175): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (176): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Unspecified(ctx->splt_list)
[parf] alarm (  9): Uninitialized(ctx->splt_list)
[parf] alarm ( 10): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 11): Uninitialized(*(str + 0))
[parf] alarm ( 12): Memory_access(*(str + 0), read)
[parf] alarm ( 13): Uninitialized(ctx->n_splt)
[parf] alarm ( 14): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 16): Uninitialized(*(end + -1))
[parf] alarm ( 17): Memory_access(*(end + -1), read)
[parf] alarm ( 18): Uninitialized(out_size_required)
[parf] alarm ( 19): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 20): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 21): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 22): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 23): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 24): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 25): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 26): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 27): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 28): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 29): Uninitialized(red)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 31): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 32): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 33): Uninitialized(green)
[parf] alarm ( 34): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 35): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 36): Uninitialized(blue)
[parf] alarm ( 37): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 38): Uninitialized(ctx->text_list)
[parf] alarm ( 39): Uninitialized(alpha)
[parf] alarm ( 40): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 41): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 42): Uninitialized(c)
[parf] alarm ( 43): Uninitialized(ctx->n_text)
[parf] alarm ( 44): Memory_access(*(argv + 1), read)
[parf] alarm ( 45): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 46): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 47): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 48): Memory_access(*(argv + 1), read)
[parf] alarm ( 49): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 50): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 51): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 52): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 53): Uninitialized(phys->unit_specifier)
[parf] alarm ( 54): Uninitialized(ctx->n_splt)
[parf] alarm ( 55): Uninitialized(sbit->red_bits)
[parf] alarm ( 56): Unspecified(ctx->splt_list)
[parf] alarm ( 57): Uninitialized(ctx->splt_list)
[parf] alarm ( 58): Uninitialized(*(data + 0))
[parf] alarm ( 59): Memory_access(*(data + 0), read)
[parf] alarm ( 60): Memory_access(*(data + 1), read)
[parf] alarm ( 61): Uninitialized(*(data + 1))
[parf] alarm ( 62): Uninitialized(sbit->green_bits)
[parf] alarm ( 63): Memory_access(*(data + 3), read)
[parf] alarm ( 64): Memory_access(*(data + 2), read)
[parf] alarm ( 65): Uninitialized(*(data + 0))
[parf] alarm ( 66): Memory_access(*(data + 0), read)
[parf] alarm ( 67): Uninitialized(*(data + 2))
[parf] alarm ( 68): Uninitialized(*(data + 1))
[parf] alarm ( 69): Memory_access(*(data + 1), read)
[parf] alarm ( 70): Uninitialized(*(data + 3))
[parf] alarm ( 71): Uninitialized(sbit->blue_bits)
[parf] alarm ( 72): Uninitialized(time->month)
[parf] alarm ( 73): Memory_access(*(data + 0), read)
[parf] alarm ( 74): Memory_access(*(data + 1), read)
[parf] alarm ( 75): Uninitialized(*(data + 1))
[parf] alarm ( 76): Uninitialized(*(data + 3))
[parf] alarm ( 77): Memory_access(*(data + 2), read)
[parf] alarm ( 78): Uninitialized(*(data + 2))
[parf] alarm ( 79): Memory_access(*(data + 3), read)
[parf] alarm ( 80): Uninitialized(*(data + 0))
[parf] alarm ( 81): Uninitialized(time->day)
[parf] alarm ( 82): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 83): Uninitialized(ihdr->color_type)
[parf] alarm ( 84): Uninitialized(chunk->type[0])
[parf] alarm ( 85): Uninitialized(time->hour)
[parf] alarm ( 86): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 87): Uninitialized(time->minute)
[parf] alarm ( 88): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm ( 89): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 90): Uninitialized(time->second)
[parf] alarm ( 91): Uninitialized(ihdr.color_type)
[parf] alarm ( 92): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 93): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm ( 94): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 95): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm ( 96): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 97): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm ( 98): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm ( 99): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm (100): Uninitialized(ihdr.bit_depth)
[parf] alarm (101): Uninitialized(ihdr.filter_method)
[parf] alarm (102): Uninitialized(ihdr.compression_method)
[parf] alarm (103): Uninitialized(ihdr.interlace_method)
[parf] alarm (104): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (105): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (106): Uninitialized(offs->unit_specifier)
[parf] alarm (107): Uninitialized(sbit->red_bits)
[parf] alarm (108): Uninitialized(ihdr->bit_depth)
[parf] alarm (109): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (110): Uninitialized(out_size)
[parf] alarm (111): Uninitialized(sbit->green_bits)
[parf] alarm (112): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (113): Uninitialized(sbit->blue_bits)
[parf] alarm (114): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (115): Index_out_of_bound(k_0 < 256)
[parf] alarm (116): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (117): Uninitialized(sbit->alpha_bits)
[parf] alarm (118): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (119): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (120): Uninitialized(ihdr->compression_method)
[parf] alarm (121): Unspecified(out)
[parf] alarm (122): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (123): Division_by_zero((unsigned long)(ctx->splt_list + i_0)->n_entries)
[parf] alarm (124): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (125): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (126): Uninitialized(ihdr->filter_method)
[parf] alarm (127): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (128): Uninitialized(ctx->exif.data)
[parf] alarm (129): Unspecified(ctx->exif.data)
[parf] alarm (130): Uninitialized(ihdr->interlace_method)
[parf] alarm (131): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (132): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (133): Pointer_comparison(str, (char const *)0)
[parf] alarm (134): Uninitialized(ctx->iccp.profile)
[parf] alarm (135): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (136): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (137): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (138): Pointer_comparison(end, (char *)0)
[parf] alarm (139): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (140): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (141): Uninitialized(ctx->gamma_lut)
[parf] alarm (142): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (143): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 9 -eva-remove-redundant-alarms -eva-plevel 27 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 21 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  3): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  4): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  5): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  9): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 10): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 11): Unspecified(ctx->splt_list)
[parf] alarm ( 12): Uninitialized(ctx->splt_list)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 15): Uninitialized(*(str + 0))
[parf] alarm ( 16): Memory_access(*(str + 0), read)
[parf] alarm ( 17): Uninitialized(ctx->n_splt)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 19): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 20): Uninitialized(*(end + -1))
[parf] alarm ( 21): Memory_access(*(end + -1), read)
[parf] alarm ( 22): Uninitialized(out_size_required)
[parf] alarm ( 23): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 25): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 26): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 28): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 29): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 30): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 31): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 32): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 33): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 34): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 35): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 36): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 37): Uninitialized(red)
[parf] alarm ( 38): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 39): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 40): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 41): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 42): Uninitialized(green)
[parf] alarm ( 43): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 44): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 45): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 46): Uninitialized(blue)
[parf] alarm ( 47): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 48): Uninitialized(ctx->text_list)
[parf] alarm ( 49): Uninitialized(alpha)
[parf] alarm ( 50): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 51): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 52): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 53): Uninitialized(c)
[parf] alarm ( 54): Uninitialized(ctx->n_text)
[parf] alarm ( 55): Memory_access(*(argv + 1), read)
[parf] alarm ( 56): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 57): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 58): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 59): Memory_access(*(argv + 1), read)
[parf] alarm ( 60): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 61): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 62): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 63): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 64): Uninitialized(phys->unit_specifier)
[parf] alarm ( 65): Uninitialized(ctx->n_splt)
[parf] alarm ( 66): Uninitialized(sbit->red_bits)
[parf] alarm ( 67): Unspecified(ctx->splt_list)
[parf] alarm ( 68): Uninitialized(ctx->splt_list)
[parf] alarm ( 69): Uninitialized(*(data + 0))
[parf] alarm ( 70): Memory_access(*(data + 0), read)
[parf] alarm ( 71): Memory_access(*(data + 1), read)
[parf] alarm ( 72): Uninitialized(*(data + 1))
[parf] alarm ( 73): Uninitialized(sbit->green_bits)
[parf] alarm ( 74): Memory_access(*(data + 3), read)
[parf] alarm ( 75): Memory_access(*(data + 2), read)
[parf] alarm ( 76): Uninitialized(*(data + 0))
[parf] alarm ( 77): Memory_access(*(data + 0), read)
[parf] alarm ( 78): Uninitialized(*(data + 2))
[parf] alarm ( 79): Uninitialized(*(data + 1))
[parf] alarm ( 80): Memory_access(*(data + 1), read)
[parf] alarm ( 81): Uninitialized(*(data + 3))
[parf] alarm ( 82): Uninitialized(sbit->blue_bits)
[parf] alarm ( 83): Uninitialized(time->month)
[parf] alarm ( 84): Memory_access(*(data + 0), read)
[parf] alarm ( 85): Memory_access(*(data + 1), read)
[parf] alarm ( 86): Uninitialized(*(data + 1))
[parf] alarm ( 87): Uninitialized(*(data + 3))
[parf] alarm ( 88): Memory_access(*(data + 2), read)
[parf] alarm ( 89): Uninitialized(*(data + 2))
[parf] alarm ( 90): Memory_access(*(data + 3), read)
[parf] alarm ( 91): Uninitialized(*(data + 0))
[parf] alarm ( 92): Uninitialized(time->day)
[parf] alarm ( 93): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 94): Uninitialized(ihdr->color_type)
[parf] alarm ( 95): Uninitialized(chunk->type[0])
[parf] alarm ( 96): Uninitialized(time->hour)
[parf] alarm ( 97): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 98): Uninitialized(time->minute)
[parf] alarm ( 99): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm (100): Uninitialized(sbit->grayscale_bits)
[parf] alarm (101): Uninitialized(time->second)
[parf] alarm (102): Uninitialized(ihdr.color_type)
[parf] alarm (103): Uninitialized(sbit->alpha_bits)
[parf] alarm (104): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm (105): Uninitialized(ihdr->bit_depth)
[parf] alarm (106): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm (107): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm (108): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm (109): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm (110): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm (111): Uninitialized(ihdr.bit_depth)
[parf] alarm (112): Uninitialized(ihdr.filter_method)
[parf] alarm (113): Uninitialized(ihdr.compression_method)
[parf] alarm (114): Uninitialized(ihdr.interlace_method)
[parf] alarm (115): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (116): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (117): Uninitialized(offs->unit_specifier)
[parf] alarm (118): Uninitialized(sbit->red_bits)
[parf] alarm (119): Uninitialized(ihdr->bit_depth)
[parf] alarm (120): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (121): Uninitialized(out_size)
[parf] alarm (122): Uninitialized(sbit->green_bits)
[parf] alarm (123): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (124): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (125): Uninitialized(sbit->blue_bits)
[parf] alarm (126): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (127): Index_out_of_bound(k_0 < 256)
[parf] alarm (128): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (129): Uninitialized(sbit->alpha_bits)
[parf] alarm (130): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (131): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (132): Uninitialized(ihdr->compression_method)
[parf] alarm (133): Unspecified(out)
[parf] alarm (134): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (135): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (136): Division_by_zero((unsigned long)(ctx->splt_list + i_0)->n_entries)
[parf] alarm (137): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (138): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (139): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (140): Uninitialized(ihdr->filter_method)
[parf] alarm (141): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (142): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (143): Uninitialized(ctx->exif.data)
[parf] alarm (144): Unspecified(ctx->exif.data)
[parf] alarm (145): Uninitialized(ihdr->interlace_method)
[parf] alarm (146): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (147): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (148): Pointer_comparison(str, (char const *)0)
[parf] alarm (149): Uninitialized(ctx->iccp.profile)
[parf] alarm (150): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (151): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (152): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (153): Pointer_comparison(end, (char *)0)
[parf] alarm (154): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (155): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (156): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (157): Uninitialized(ctx->gamma_lut)
[parf] alarm (158): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (159): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (160): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-slevel 6 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 8
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Unspecified(ctx->splt_list)
[parf] alarm (  9): Uninitialized(ctx->splt_list)
[parf] alarm ( 10): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 11): Uninitialized(*(str + 0))
[parf] alarm ( 12): Memory_access(*(str + 0), read)
[parf] alarm ( 13): Uninitialized(ctx->n_splt)
[parf] alarm ( 14): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 16): Uninitialized(*(end + -1))
[parf] alarm ( 17): Memory_access(*(end + -1), read)
[parf] alarm ( 18): Uninitialized(out_size_required)
[parf] alarm ( 19): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 20): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 21): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 22): Uninitialized(ihdr->color_type)
[parf] alarm ( 23): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 24): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 25): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 26): Division_by_zero((size_t)ctx->ihdr.height)
[parf] alarm ( 27): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 28): Invalid_shift((int)ihdr->bit_depth <= 32)
[parf] alarm ( 29): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 30): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 31): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 32): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 33): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 34): Uninitialized(red)
[parf] alarm ( 35): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 36): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 37): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 38): Uninitialized(green)
[parf] alarm ( 39): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 40): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 41): Uninitialized(blue)
[parf] alarm ( 42): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 43): Uninitialized(ctx->text_list)
[parf] alarm ( 44): Uninitialized(alpha)
[parf] alarm ( 45): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 46): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 47): Uninitialized(c)
[parf] alarm ( 48): Uninitialized(ctx->n_text)
[parf] alarm ( 49): Memory_access(*(argv + 1), read)
[parf] alarm ( 50): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 51): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 52): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 53): Memory_access(*(argv + 1), read)
[parf] alarm ( 54): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 55): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 56): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 57): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 58): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 59): Uninitialized(phys->unit_specifier)
[parf] alarm ( 60): Uninitialized(ctx->n_splt)
[parf] alarm ( 61): Uninitialized(bytes_read)
[parf] alarm ( 62): Uninitialized(sbit->red_bits)
[parf] alarm ( 63): Unspecified(ctx->splt_list)
[parf] alarm ( 64): Uninitialized(ctx->splt_list)
[parf] alarm ( 65): Uninitialized(*(data + 0))
[parf] alarm ( 66): Memory_access(*(data + 0), read)
[parf] alarm ( 67): Memory_access(*(data + 1), read)
[parf] alarm ( 68): Uninitialized(*(data + 1))
[parf] alarm ( 69): Uninitialized(sbit->green_bits)
[parf] alarm ( 70): Memory_access(*(data + 3), read)
[parf] alarm ( 71): Memory_access(*(data + 2), read)
[parf] alarm ( 72): Uninitialized(*(data + 0))
[parf] alarm ( 73): Memory_access(*(data + 0), read)
[parf] alarm ( 74): Uninitialized(*(data + 2))
[parf] alarm ( 75): Uninitialized(*(data + 1))
[parf] alarm ( 76): Memory_access(*(data + 1), read)
[parf] alarm ( 77): Uninitialized(*(data + 3))
[parf] alarm ( 78): Uninitialized(sbit->blue_bits)
[parf] alarm ( 79): Uninitialized(time->month)
[parf] alarm ( 80): Memory_access(*(data + 0), read)
[parf] alarm ( 81): Memory_access(*(data + 1), read)
[parf] alarm ( 82): Uninitialized(*(data + 1))
[parf] alarm ( 83): Uninitialized(*(data + 3))
[parf] alarm ( 84): Memory_access(*(data + 2), read)
[parf] alarm ( 85): Uninitialized(*(data + 2))
[parf] alarm ( 86): Memory_access(*(data + 3), read)
[parf] alarm ( 87): Uninitialized(*(data + 0))
[parf] alarm ( 88): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 89): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 90): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 91): Uninitialized(time->day)
[parf] alarm ( 92): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 93): Uninitialized(ihdr->color_type)
[parf] alarm ( 94): Uninitialized(chunk->type[0])
[parf] alarm ( 95): Uninitialized(time->hour)
[parf] alarm ( 96): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 97): Uninitialized(time->minute)
[parf] alarm ( 98): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm ( 99): Uninitialized(sbit->grayscale_bits)
[parf] alarm (100): Uninitialized(time->second)
[parf] alarm (101): Uninitialized(ihdr.color_type)
[parf] alarm (102): Uninitialized(sbit->alpha_bits)
[parf] alarm (103): Division_by_zero((unsigned long)ihdr->width)
[parf] alarm (104): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm (105): Uninitialized(ihdr->bit_depth)
[parf] alarm (106): Uninitialized(ihdr->bit_depth)
[parf] alarm (107): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm (108): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm (109): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm (110): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm (111): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm (112): Uninitialized(ihdr.width)
[parf] alarm (113): Uninitialized(ihdr.height)
[parf] alarm (114): Uninitialized(ihdr.bit_depth)
[parf] alarm (115): Uninitialized(ihdr.filter_method)
[parf] alarm (116): Uninitialized(ihdr.compression_method)
[parf] alarm (117): Uninitialized(ihdr.interlace_method)
[parf] alarm (118): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (119): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (120): Uninitialized(offs->unit_specifier)
[parf] alarm (121): Uninitialized(sbit->red_bits)
[parf] alarm (122): Uninitialized(ihdr->bit_depth)
[parf] alarm (123): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (124): Uninitialized(out_size)
[parf] alarm (125): Uninitialized(sbit->green_bits)
[parf] alarm (126): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (127): Uninitialized(sbit->blue_bits)
[parf] alarm (128): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (129): Index_out_of_bound(k_0 < 256)
[parf] alarm (130): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (131): Uninitialized(sbit->alpha_bits)
[parf] alarm (132): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (133): Uninitialized(ihdr->bit_depth)
[parf] alarm (134): Uninitialized(ihdr->compression_method)
[parf] alarm (135): Unspecified(out)
[parf] alarm (136): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (137): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (138): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (139): Uninitialized(ihdr->filter_method)
[parf] alarm (140): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (141): Uninitialized(ctx->exif.data)
[parf] alarm (142): Unspecified(ctx->exif.data)
[parf] alarm (143): Uninitialized(ihdr->interlace_method)
[parf] alarm (144): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (145): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (146): Pointer_comparison(str, (char const *)0)
[parf] alarm (147): Uninitialized(ctx->iccp.profile)
[parf] alarm (148): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm (149): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (150): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (151): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (152): Pointer_comparison(end, (char *)0)
[parf] alarm (153): Uninitialized(ctx->ihdr.color_type)
[parf] alarm (154): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (155): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (156): Uninitialized(ctx->gamma_lut)
[parf] alarm (157): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (158): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 65 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 37 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 31
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Uninitialized(ctx->splt_list)
[parf] alarm (  9): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 10): Uninitialized(*(str + 0))
[parf] alarm ( 11): Memory_access(*(str + 0), read)
[parf] alarm ( 12): Uninitialized(ctx->n_splt)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 15): Uninitialized(*(end + -1))
[parf] alarm ( 16): Memory_access(*(end + -1), read)
[parf] alarm ( 17): Uninitialized(out_size_required)
[parf] alarm ( 18): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 19): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 20): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 22): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 23): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 25): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 26): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 28): Uninitialized(red)
[parf] alarm ( 29): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 31): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 32): Uninitialized(green)
[parf] alarm ( 33): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 34): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 35): Uninitialized(blue)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized(alpha)
[parf] alarm ( 38): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 39): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 40): Uninitialized(c)
[parf] alarm ( 41): Memory_access(*(argv + 1), read)
[parf] alarm ( 42): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 43): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 44): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 45): Memory_access(*(argv + 1), read)
[parf] alarm ( 46): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 47): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 48): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 49): Uninitialized(phys->unit_specifier)
[parf] alarm ( 50): Uninitialized(ctx->n_splt)
[parf] alarm ( 51): Uninitialized(sbit->red_bits)
[parf] alarm ( 52): Uninitialized(ctx->splt_list)
[parf] alarm ( 53): Uninitialized(*(data + 0))
[parf] alarm ( 54): Memory_access(*(data + 0), read)
[parf] alarm ( 55): Memory_access(*(data + 1), read)
[parf] alarm ( 56): Uninitialized(*(data + 1))
[parf] alarm ( 57): Uninitialized(sbit->green_bits)
[parf] alarm ( 58): Memory_access(*(data + 3), read)
[parf] alarm ( 59): Memory_access(*(data + 2), read)
[parf] alarm ( 60): Uninitialized(*(data + 0))
[parf] alarm ( 61): Memory_access(*(data + 0), read)
[parf] alarm ( 62): Uninitialized(*(data + 2))
[parf] alarm ( 63): Uninitialized(*(data + 1))
[parf] alarm ( 64): Memory_access(*(data + 1), read)
[parf] alarm ( 65): Uninitialized(*(data + 3))
[parf] alarm ( 66): Uninitialized(sbit->blue_bits)
[parf] alarm ( 67): Uninitialized(time->month)
[parf] alarm ( 68): Memory_access(*(data + 0), read)
[parf] alarm ( 69): Memory_access(*(data + 1), read)
[parf] alarm ( 70): Uninitialized(*(data + 1))
[parf] alarm ( 71): Uninitialized(*(data + 3))
[parf] alarm ( 72): Memory_access(*(data + 2), read)
[parf] alarm ( 73): Uninitialized(*(data + 2))
[parf] alarm ( 74): Memory_access(*(data + 3), read)
[parf] alarm ( 75): Uninitialized(*(data + 0))
[parf] alarm ( 76): Uninitialized(time->day)
[parf] alarm ( 77): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 78): Uninitialized(ihdr->color_type)
[parf] alarm ( 79): Uninitialized(chunk->type[0])
[parf] alarm ( 80): Uninitialized(time->hour)
[parf] alarm ( 81): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 82): Uninitialized(time->minute)
[parf] alarm ( 83): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm ( 84): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 85): Uninitialized(time->second)
[parf] alarm ( 86): Uninitialized(ihdr.color_type)
[parf] alarm ( 87): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 88): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm ( 89): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 90): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm ( 91): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 92): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm ( 93): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm ( 94): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm ( 95): Uninitialized(ihdr.bit_depth)
[parf] alarm ( 96): Uninitialized(ihdr.filter_method)
[parf] alarm ( 97): Uninitialized(ihdr.compression_method)
[parf] alarm ( 98): Uninitialized(ihdr.interlace_method)
[parf] alarm ( 99): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (101): Uninitialized(offs->unit_specifier)
[parf] alarm (102): Uninitialized(sbit->red_bits)
[parf] alarm (103): Uninitialized(ihdr->bit_depth)
[parf] alarm (104): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (105): Uninitialized(out_size)
[parf] alarm (106): Uninitialized(sbit->green_bits)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (108): Uninitialized(sbit->blue_bits)
[parf] alarm (109): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (110): Index_out_of_bound(k_0 < 256)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (112): Uninitialized(sbit->alpha_bits)
[parf] alarm (113): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (114): Uninitialized(ihdr->compression_method)
[parf] alarm (115): Unspecified(out)
[parf] alarm (116): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (117): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (118): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (119): Uninitialized(ihdr->filter_method)
[parf] alarm (120): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (121): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (122): Uninitialized(ctx->exif.data)
[parf] alarm (123): Unspecified(ctx->exif.data)
[parf] alarm (124): Uninitialized(ihdr->interlace_method)
[parf] alarm (125): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (126): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (127): Pointer_comparison(str, (char const *)0)
[parf] alarm (128): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (129): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (130): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (131): Pointer_comparison(end, (char *)0)
[parf] alarm (132): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (133): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (134): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (135): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 44 -eva-remove-redundant-alarms -eva-plevel 63 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 39 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 23
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Uninitialized(ctx->splt_list)
[parf] alarm (  9): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 10): Uninitialized(*(str + 0))
[parf] alarm ( 11): Memory_access(*(str + 0), read)
[parf] alarm ( 12): Uninitialized(ctx->n_splt)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 15): Uninitialized(*(end + -1))
[parf] alarm ( 16): Memory_access(*(end + -1), read)
[parf] alarm ( 17): Uninitialized(out_size_required)
[parf] alarm ( 18): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 19): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 20): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 22): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 23): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 25): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 26): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 28): Uninitialized(red)
[parf] alarm ( 29): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 31): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 32): Uninitialized(green)
[parf] alarm ( 33): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 34): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 35): Uninitialized(blue)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized(alpha)
[parf] alarm ( 38): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 39): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 40): Uninitialized(c)
[parf] alarm ( 41): Memory_access(*(argv + 1), read)
[parf] alarm ( 42): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 43): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 44): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 45): Memory_access(*(argv + 1), read)
[parf] alarm ( 46): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 47): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 48): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 49): Uninitialized(phys->unit_specifier)
[parf] alarm ( 50): Uninitialized(ctx->n_splt)
[parf] alarm ( 51): Uninitialized(sbit->red_bits)
[parf] alarm ( 52): Uninitialized(ctx->splt_list)
[parf] alarm ( 53): Uninitialized(*(data + 0))
[parf] alarm ( 54): Memory_access(*(data + 0), read)
[parf] alarm ( 55): Memory_access(*(data + 1), read)
[parf] alarm ( 56): Uninitialized(*(data + 1))
[parf] alarm ( 57): Uninitialized(sbit->green_bits)
[parf] alarm ( 58): Memory_access(*(data + 3), read)
[parf] alarm ( 59): Memory_access(*(data + 2), read)
[parf] alarm ( 60): Uninitialized(*(data + 0))
[parf] alarm ( 61): Memory_access(*(data + 0), read)
[parf] alarm ( 62): Uninitialized(*(data + 2))
[parf] alarm ( 63): Uninitialized(*(data + 1))
[parf] alarm ( 64): Memory_access(*(data + 1), read)
[parf] alarm ( 65): Uninitialized(*(data + 3))
[parf] alarm ( 66): Uninitialized(sbit->blue_bits)
[parf] alarm ( 67): Uninitialized(time->month)
[parf] alarm ( 68): Memory_access(*(data + 0), read)
[parf] alarm ( 69): Memory_access(*(data + 1), read)
[parf] alarm ( 70): Uninitialized(*(data + 1))
[parf] alarm ( 71): Uninitialized(*(data + 3))
[parf] alarm ( 72): Memory_access(*(data + 2), read)
[parf] alarm ( 73): Uninitialized(*(data + 2))
[parf] alarm ( 74): Memory_access(*(data + 3), read)
[parf] alarm ( 75): Uninitialized(*(data + 0))
[parf] alarm ( 76): Uninitialized(time->day)
[parf] alarm ( 77): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 78): Uninitialized(ihdr->color_type)
[parf] alarm ( 79): Uninitialized(chunk->type[0])
[parf] alarm ( 80): Uninitialized(time->hour)
[parf] alarm ( 81): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 82): Uninitialized(time->minute)
[parf] alarm ( 83): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm ( 84): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 85): Uninitialized(time->second)
[parf] alarm ( 86): Uninitialized(ihdr.color_type)
[parf] alarm ( 87): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 88): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm ( 89): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 90): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm ( 91): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 92): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm ( 93): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm ( 94): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm ( 95): Uninitialized(ihdr.bit_depth)
[parf] alarm ( 96): Uninitialized(ihdr.filter_method)
[parf] alarm ( 97): Uninitialized(ihdr.compression_method)
[parf] alarm ( 98): Uninitialized(ihdr.interlace_method)
[parf] alarm ( 99): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (101): Uninitialized(offs->unit_specifier)
[parf] alarm (102): Uninitialized(sbit->red_bits)
[parf] alarm (103): Uninitialized(ihdr->bit_depth)
[parf] alarm (104): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (105): Uninitialized(out_size)
[parf] alarm (106): Uninitialized(sbit->green_bits)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (108): Uninitialized(sbit->blue_bits)
[parf] alarm (109): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (110): Index_out_of_bound(k_0 < 256)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (112): Uninitialized(sbit->alpha_bits)
[parf] alarm (113): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (114): Uninitialized(ihdr->compression_method)
[parf] alarm (115): Unspecified(out)
[parf] alarm (116): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (117): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (118): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (119): Uninitialized(ihdr->filter_method)
[parf] alarm (120): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (121): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (122): Uninitialized(ctx->exif.data)
[parf] alarm (123): Unspecified(ctx->exif.data)
[parf] alarm (124): Uninitialized(ihdr->interlace_method)
[parf] alarm (125): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (126): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (127): Pointer_comparison(str, (char const *)0)
[parf] alarm (128): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (129): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (130): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (131): Pointer_comparison(end, (char *)0)
[parf] alarm (132): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (133): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (134): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (135): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base01-sample02 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 11 -eva-split-return auto -eva-slevel 39 -eva-remove-redundant-alarms -eva-plevel 69 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 46 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 19
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 19): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 20): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 22): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 23): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 24): Uninitialized(red)
[parf] alarm ( 25): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 26): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 28): Uninitialized(green)
[parf] alarm ( 29): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 31): Uninitialized(blue)
[parf] alarm ( 32): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 33): Uninitialized(alpha)
[parf] alarm ( 34): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 35): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 36): Uninitialized(c)
[parf] alarm ( 37): Memory_access(*(argv + 1), read)
[parf] alarm ( 38): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 39): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 40): Memory_access(*(argv + 1), read)
[parf] alarm ( 41): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 42): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 43): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 44): Uninitialized(phys->unit_specifier)
[parf] alarm ( 45): Uninitialized(sbit->red_bits)
[parf] alarm ( 46): Uninitialized(*(data + 0))
[parf] alarm ( 47): Memory_access(*(data + 0), read)
[parf] alarm ( 48): Memory_access(*(data + 1), read)
[parf] alarm ( 49): Uninitialized(*(data + 1))
[parf] alarm ( 50): Uninitialized(sbit->green_bits)
[parf] alarm ( 51): Memory_access(*(data + 3), read)
[parf] alarm ( 52): Memory_access(*(data + 2), read)
[parf] alarm ( 53): Uninitialized(*(data + 0))
[parf] alarm ( 54): Memory_access(*(data + 0), read)
[parf] alarm ( 55): Uninitialized(*(data + 2))
[parf] alarm ( 56): Uninitialized(*(data + 1))
[parf] alarm ( 57): Memory_access(*(data + 1), read)
[parf] alarm ( 58): Uninitialized(*(data + 3))
[parf] alarm ( 59): Uninitialized(sbit->blue_bits)
[parf] alarm ( 60): Uninitialized(time->month)
[parf] alarm ( 61): Memory_access(*(data + 0), read)
[parf] alarm ( 62): Memory_access(*(data + 1), read)
[parf] alarm ( 63): Uninitialized(*(data + 1))
[parf] alarm ( 64): Uninitialized(*(data + 3))
[parf] alarm ( 65): Memory_access(*(data + 2), read)
[parf] alarm ( 66): Uninitialized(*(data + 2))
[parf] alarm ( 67): Memory_access(*(data + 3), read)
[parf] alarm ( 68): Uninitialized(*(data + 0))
[parf] alarm ( 69): Uninitialized(time->day)
[parf] alarm ( 70): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 71): Uninitialized(ihdr->color_type)
[parf] alarm ( 72): Uninitialized(chunk->type[0])
[parf] alarm ( 73): Uninitialized(time->hour)
[parf] alarm ( 74): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 75): Uninitialized(time->minute)
[parf] alarm ( 76): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 77): Uninitialized(time->second)
[parf] alarm ( 78): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 79): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 80): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 81): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 82): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 83): Uninitialized(offs->unit_specifier)
[parf] alarm ( 84): Uninitialized(sbit->red_bits)
[parf] alarm ( 85): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 86): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 87): Uninitialized(sbit->green_bits)
[parf] alarm ( 88): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 89): Uninitialized(sbit->blue_bits)
[parf] alarm ( 90): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 91): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 92): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 93): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 94): Uninitialized(ihdr->compression_method)
[parf] alarm ( 95): Unspecified(out)
[parf] alarm ( 96): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 97): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 99): Uninitialized(ihdr->filter_method)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (101): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (102): Unspecified(ctx->exif.data)
[parf] alarm (103): Uninitialized(ihdr->interlace_method)
[parf] alarm (104): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (105): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (106): Pointer_comparison(str, (char const *)0)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (108): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (109): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (110): Pointer_comparison(end, (char *)0)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (112): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (113): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (114): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base01-sample03 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 27 -eva-remove-redundant-alarms -eva-plevel 68 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 41 -eva-equality-through-calls none -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 26
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Uninitialized(ctx->splt_list)
[parf] alarm (  9): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 10): Uninitialized(*(str + 0))
[parf] alarm ( 11): Memory_access(*(str + 0), read)
[parf] alarm ( 12): Uninitialized(ctx->n_splt)
[parf] alarm ( 13): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 14): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 15): Uninitialized(*(end + -1))
[parf] alarm ( 16): Memory_access(*(end + -1), read)
[parf] alarm ( 17): Uninitialized(out_size_required)
[parf] alarm ( 18): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 19): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 20): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 22): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 23): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 25): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 26): Uninitialized(ctx->ihdr.color_type)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 28): Uninitialized(red)
[parf] alarm ( 29): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 31): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 32): Uninitialized(green)
[parf] alarm ( 33): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 34): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 35): Uninitialized(blue)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized(ctx->text_list)
[parf] alarm ( 38): Uninitialized(alpha)
[parf] alarm ( 39): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 40): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 41): Uninitialized(c)
[parf] alarm ( 42): Uninitialized(ctx->n_text)
[parf] alarm ( 43): Memory_access(*(argv + 1), read)
[parf] alarm ( 44): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 45): Uninitialized(ctx->ihdr.bit_depth)
[parf] alarm ( 46): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 47): Memory_access(*(argv + 1), read)
[parf] alarm ( 48): Memory_access((ctx->text_list + i_0)->text, read)
[parf] alarm ( 49): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 50): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 51): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 52): Uninitialized(phys->unit_specifier)
[parf] alarm ( 53): Uninitialized(ctx->n_splt)
[parf] alarm ( 54): Uninitialized(sbit->red_bits)
[parf] alarm ( 55): Uninitialized(ctx->splt_list)
[parf] alarm ( 56): Uninitialized(*(data + 0))
[parf] alarm ( 57): Memory_access(*(data + 0), read)
[parf] alarm ( 58): Memory_access(*(data + 1), read)
[parf] alarm ( 59): Uninitialized(*(data + 1))
[parf] alarm ( 60): Uninitialized(sbit->green_bits)
[parf] alarm ( 61): Memory_access(*(data + 3), read)
[parf] alarm ( 62): Memory_access(*(data + 2), read)
[parf] alarm ( 63): Uninitialized(*(data + 0))
[parf] alarm ( 64): Memory_access(*(data + 0), read)
[parf] alarm ( 65): Uninitialized(*(data + 2))
[parf] alarm ( 66): Uninitialized(*(data + 1))
[parf] alarm ( 67): Memory_access(*(data + 1), read)
[parf] alarm ( 68): Uninitialized(*(data + 3))
[parf] alarm ( 69): Uninitialized(sbit->blue_bits)
[parf] alarm ( 70): Uninitialized(time->month)
[parf] alarm ( 71): Memory_access(*(data + 0), read)
[parf] alarm ( 72): Memory_access(*(data + 1), read)
[parf] alarm ( 73): Uninitialized(*(data + 1))
[parf] alarm ( 74): Uninitialized(*(data + 3))
[parf] alarm ( 75): Memory_access(*(data + 2), read)
[parf] alarm ( 76): Uninitialized(*(data + 2))
[parf] alarm ( 77): Memory_access(*(data + 3), read)
[parf] alarm ( 78): Uninitialized(*(data + 0))
[parf] alarm ( 79): Uninitialized(time->day)
[parf] alarm ( 80): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 81): Uninitialized(ihdr->color_type)
[parf] alarm ( 82): Uninitialized(chunk->type[0])
[parf] alarm ( 83): Uninitialized(time->hour)
[parf] alarm ( 84): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 85): Uninitialized(time->minute)
[parf] alarm ( 86): Uninitialized(ctx->ihdr.interlace_method)
[parf] alarm ( 87): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 88): Uninitialized(time->second)
[parf] alarm ( 89): Uninitialized(ihdr.color_type)
[parf] alarm ( 90): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 91): Division_by_zero((unsigned long)ctx->ihdr.width)
[parf] alarm ( 92): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 93): Division_by_zero((unsigned long)ctx->ihdr.height)
[parf] alarm ( 94): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 95): Division_by_zero((int)ctx->ihdr.bit_depth)
[parf] alarm ( 96): Invalid_shift((int)ctx->ihdr.bit_depth <= 32)
[parf] alarm ( 97): Signed_overflow(1 << (int)ctx->ihdr.bit_depth <= 2147483647)
[parf] alarm ( 98): Uninitialized(ihdr.bit_depth)
[parf] alarm ( 99): Uninitialized(ihdr.filter_method)
[parf] alarm (100): Uninitialized(ihdr.compression_method)
[parf] alarm (101): Uninitialized(ihdr.interlace_method)
[parf] alarm (102): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (103): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (104): Uninitialized(offs->unit_specifier)
[parf] alarm (105): Uninitialized(sbit->red_bits)
[parf] alarm (106): Uninitialized(ihdr->bit_depth)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (108): Uninitialized(out_size)
[parf] alarm (109): Uninitialized(sbit->green_bits)
[parf] alarm (110): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (111): Uninitialized(sbit->blue_bits)
[parf] alarm (112): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm (113): Index_out_of_bound(k_0 < 256)
[parf] alarm (114): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm (115): Uninitialized(sbit->alpha_bits)
[parf] alarm (116): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (117): Uninitialized(ihdr->compression_method)
[parf] alarm (118): Unspecified(out)
[parf] alarm (119): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (120): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (121): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (122): Uninitialized(ihdr->filter_method)
[parf] alarm (123): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (124): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (125): Uninitialized(ctx->exif.data)
[parf] alarm (126): Unspecified(ctx->exif.data)
[parf] alarm (127): Uninitialized(ihdr->interlace_method)
[parf] alarm (128): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (129): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (130): Pointer_comparison(str, (char const *)0)
[parf] alarm (131): Uninitialized(ctx->iccp.profile)
[parf] alarm (132): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (133): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (134): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (135): Pointer_comparison(end, (char *)0)
[parf] alarm (136): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (137): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (138): Uninitialized(ctx->gamma_lut)
[parf] alarm (139): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (140): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 84 -eva-remove-redundant-alarms -eva-plevel 146 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 33
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 19): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 20): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 22): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 23): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 25): Uninitialized(red)
[parf] alarm ( 26): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 27): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 28): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 29): Uninitialized(green)
[parf] alarm ( 30): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 31): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 32): Uninitialized(blue)
[parf] alarm ( 33): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 34): Uninitialized(alpha)
[parf] alarm ( 35): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized(c)
[parf] alarm ( 38): Memory_access(*(argv + 1), read)
[parf] alarm ( 39): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 40): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 41): Memory_access(*(argv + 1), read)
[parf] alarm ( 42): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 43): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 44): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 45): Uninitialized(phys->unit_specifier)
[parf] alarm ( 46): Uninitialized(sbit->red_bits)
[parf] alarm ( 47): Uninitialized(*(data + 0))
[parf] alarm ( 48): Memory_access(*(data + 0), read)
[parf] alarm ( 49): Memory_access(*(data + 1), read)
[parf] alarm ( 50): Uninitialized(*(data + 1))
[parf] alarm ( 51): Uninitialized(sbit->green_bits)
[parf] alarm ( 52): Memory_access(*(data + 3), read)
[parf] alarm ( 53): Memory_access(*(data + 2), read)
[parf] alarm ( 54): Uninitialized(*(data + 0))
[parf] alarm ( 55): Memory_access(*(data + 0), read)
[parf] alarm ( 56): Uninitialized(*(data + 2))
[parf] alarm ( 57): Uninitialized(*(data + 1))
[parf] alarm ( 58): Memory_access(*(data + 1), read)
[parf] alarm ( 59): Uninitialized(*(data + 3))
[parf] alarm ( 60): Uninitialized(sbit->blue_bits)
[parf] alarm ( 61): Uninitialized(time->month)
[parf] alarm ( 62): Memory_access(*(data + 0), read)
[parf] alarm ( 63): Memory_access(*(data + 1), read)
[parf] alarm ( 64): Uninitialized(*(data + 1))
[parf] alarm ( 65): Uninitialized(*(data + 3))
[parf] alarm ( 66): Memory_access(*(data + 2), read)
[parf] alarm ( 67): Uninitialized(*(data + 2))
[parf] alarm ( 68): Memory_access(*(data + 3), read)
[parf] alarm ( 69): Uninitialized(*(data + 0))
[parf] alarm ( 70): Uninitialized(time->day)
[parf] alarm ( 71): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 72): Uninitialized(ihdr->color_type)
[parf] alarm ( 73): Uninitialized(chunk->type[0])
[parf] alarm ( 74): Uninitialized(time->hour)
[parf] alarm ( 75): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 76): Uninitialized(time->minute)
[parf] alarm ( 77): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 78): Uninitialized(time->second)
[parf] alarm ( 79): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 80): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 81): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 82): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 83): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 84): Uninitialized(offs->unit_specifier)
[parf] alarm ( 85): Uninitialized(sbit->red_bits)
[parf] alarm ( 86): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 87): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 88): Uninitialized(sbit->green_bits)
[parf] alarm ( 89): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 90): Uninitialized(sbit->blue_bits)
[parf] alarm ( 91): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 92): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 93): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 94): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 95): Uninitialized(ihdr->compression_method)
[parf] alarm ( 96): Unspecified(out)
[parf] alarm ( 97): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm ( 99): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (100): Uninitialized(ihdr->filter_method)
[parf] alarm (101): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (102): Unspecified(ctx->exif.data)
[parf] alarm (103): Uninitialized(ihdr->interlace_method)
[parf] alarm (104): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (105): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (106): Pointer_comparison(str, (char const *)0)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (108): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (109): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (110): Pointer_comparison(end, (char *)0)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (112): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (113): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (114): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (115): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 85 -eva-remove-redundant-alarms -eva-plevel 141 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 98 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 30
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Pointer_comparison((ctx->splt_list + i)->entries, (struct spng_splt_entry *)0)
[parf] alarm ( 18): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 19): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 20): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 21): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 22): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 23): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 24): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 25): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 26): Uninitialized(red)
[parf] alarm ( 27): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 28): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 29): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 30): Uninitialized(green)
[parf] alarm ( 31): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 32): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 33): Uninitialized(blue)
[parf] alarm ( 34): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 35): Uninitialized(alpha)
[parf] alarm ( 36): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 37): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 38): Uninitialized(c)
[parf] alarm ( 39): Memory_access(*(argv + 1), read)
[parf] alarm ( 40): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 41): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 42): Memory_access(*(argv + 1), read)
[parf] alarm ( 43): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 44): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 45): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 46): Uninitialized(phys->unit_specifier)
[parf] alarm ( 47): Uninitialized(sbit->red_bits)
[parf] alarm ( 48): Uninitialized(*(data + 0))
[parf] alarm ( 49): Memory_access(*(data + 0), read)
[parf] alarm ( 50): Memory_access(*(data + 1), read)
[parf] alarm ( 51): Uninitialized(*(data + 1))
[parf] alarm ( 52): Uninitialized(sbit->green_bits)
[parf] alarm ( 53): Memory_access(*(data + 3), read)
[parf] alarm ( 54): Memory_access(*(data + 2), read)
[parf] alarm ( 55): Uninitialized(*(data + 0))
[parf] alarm ( 56): Memory_access(*(data + 0), read)
[parf] alarm ( 57): Uninitialized(*(data + 2))
[parf] alarm ( 58): Uninitialized(*(data + 1))
[parf] alarm ( 59): Memory_access(*(data + 1), read)
[parf] alarm ( 60): Uninitialized(*(data + 3))
[parf] alarm ( 61): Uninitialized(sbit->blue_bits)
[parf] alarm ( 62): Uninitialized(time->month)
[parf] alarm ( 63): Memory_access(*(data + 0), read)
[parf] alarm ( 64): Memory_access(*(data + 1), read)
[parf] alarm ( 65): Uninitialized(*(data + 1))
[parf] alarm ( 66): Uninitialized(*(data + 3))
[parf] alarm ( 67): Memory_access(*(data + 2), read)
[parf] alarm ( 68): Uninitialized(*(data + 2))
[parf] alarm ( 69): Memory_access(*(data + 3), read)
[parf] alarm ( 70): Uninitialized(*(data + 0))
[parf] alarm ( 71): Uninitialized(time->day)
[parf] alarm ( 72): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 73): Uninitialized(ihdr->color_type)
[parf] alarm ( 74): Uninitialized(chunk->type[0])
[parf] alarm ( 75): Uninitialized(time->hour)
[parf] alarm ( 76): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 77): Uninitialized(time->minute)
[parf] alarm ( 78): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 79): Uninitialized(time->second)
[parf] alarm ( 80): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 81): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 82): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 83): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 84): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 85): Uninitialized(offs->unit_specifier)
[parf] alarm ( 86): Uninitialized(sbit->red_bits)
[parf] alarm ( 87): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 88): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 89): Uninitialized(sbit->green_bits)
[parf] alarm ( 90): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 91): Uninitialized(sbit->blue_bits)
[parf] alarm ( 92): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 93): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 94): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 95): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 96): Uninitialized(ihdr->compression_method)
[parf] alarm ( 97): Unspecified(out)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 99): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (101): Uninitialized(ihdr->filter_method)
[parf] alarm (102): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (103): Unspecified(ctx->exif.data)
[parf] alarm (104): Uninitialized(ihdr->interlace_method)
[parf] alarm (105): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (106): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (107): Pointer_comparison(str, (char const *)0)
[parf] alarm (108): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (109): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (110): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (111): Pointer_comparison(end, (char *)0)
[parf] alarm (112): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (113): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (114): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (115): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (116): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base02-sample02 2" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 20 -eva-split-return auto -eva-slevel 80 -eva-remove-redundant-alarms -eva-plevel 128 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 99 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 36
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Pointer_comparison((ctx->splt_list + i)->entries, (struct spng_splt_entry *)0)
[parf] alarm ( 18): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 19): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 20): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 21): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 22): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 23): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 24): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 25): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 26): Uninitialized(red)
[parf] alarm ( 27): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 28): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 29): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 30): Uninitialized(green)
[parf] alarm ( 31): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 32): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 33): Uninitialized(blue)
[parf] alarm ( 34): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 35): Uninitialized(alpha)
[parf] alarm ( 36): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 37): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 38): Uninitialized(c)
[parf] alarm ( 39): Memory_access(*(argv + 1), read)
[parf] alarm ( 40): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 41): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 42): Memory_access(*(argv + 1), read)
[parf] alarm ( 43): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 44): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 45): Uninitialized(phys->unit_specifier)
[parf] alarm ( 46): Uninitialized(sbit->red_bits)
[parf] alarm ( 47): Uninitialized(*(data + 0))
[parf] alarm ( 48): Memory_access(*(data + 0), read)
[parf] alarm ( 49): Memory_access(*(data + 1), read)
[parf] alarm ( 50): Uninitialized(*(data + 1))
[parf] alarm ( 51): Uninitialized(sbit->green_bits)
[parf] alarm ( 52): Memory_access(*(data + 3), read)
[parf] alarm ( 53): Memory_access(*(data + 2), read)
[parf] alarm ( 54): Uninitialized(*(data + 0))
[parf] alarm ( 55): Memory_access(*(data + 0), read)
[parf] alarm ( 56): Uninitialized(*(data + 2))
[parf] alarm ( 57): Uninitialized(*(data + 1))
[parf] alarm ( 58): Memory_access(*(data + 1), read)
[parf] alarm ( 59): Uninitialized(*(data + 3))
[parf] alarm ( 60): Uninitialized(sbit->blue_bits)
[parf] alarm ( 61): Uninitialized(time->month)
[parf] alarm ( 62): Memory_access(*(data + 0), read)
[parf] alarm ( 63): Memory_access(*(data + 1), read)
[parf] alarm ( 64): Uninitialized(*(data + 1))
[parf] alarm ( 65): Uninitialized(*(data + 3))
[parf] alarm ( 66): Memory_access(*(data + 2), read)
[parf] alarm ( 67): Uninitialized(*(data + 2))
[parf] alarm ( 68): Memory_access(*(data + 3), read)
[parf] alarm ( 69): Uninitialized(*(data + 0))
[parf] alarm ( 70): Uninitialized(time->day)
[parf] alarm ( 71): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 72): Uninitialized(ihdr->color_type)
[parf] alarm ( 73): Uninitialized(chunk->type[0])
[parf] alarm ( 74): Uninitialized(time->hour)
[parf] alarm ( 75): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 76): Uninitialized(time->minute)
[parf] alarm ( 77): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 78): Uninitialized(time->second)
[parf] alarm ( 79): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 80): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 81): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 82): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 83): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 84): Uninitialized(offs->unit_specifier)
[parf] alarm ( 85): Uninitialized(sbit->red_bits)
[parf] alarm ( 86): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 87): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 88): Uninitialized(sbit->green_bits)
[parf] alarm ( 89): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 90): Uninitialized(sbit->blue_bits)
[parf] alarm ( 91): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 92): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 93): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 94): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 95): Uninitialized(ihdr->compression_method)
[parf] alarm ( 96): Unspecified(out)
[parf] alarm ( 97): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm ( 99): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (100): Uninitialized(ihdr->filter_method)
[parf] alarm (101): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (102): Unspecified(ctx->exif.data)
[parf] alarm (103): Uninitialized(ihdr->interlace_method)
[parf] alarm (104): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (105): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (106): Pointer_comparison(str, (char const *)0)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (108): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (109): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (110): Pointer_comparison(end, (char *)0)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (112): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (113): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (114): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (115): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] ====== project "base02-sample03 2" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 76 -eva-remove-redundant-alarms -eva-plevel 134 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 35
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 19): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 20): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 22): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm ( 23): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 24): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 25): Uninitialized(red)
[parf] alarm ( 26): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 27): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 28): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 29): Uninitialized(green)
[parf] alarm ( 30): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 31): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 32): Uninitialized(blue)
[parf] alarm ( 33): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 34): Uninitialized(alpha)
[parf] alarm ( 35): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 36): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 37): Uninitialized(c)
[parf] alarm ( 38): Memory_access(*(argv + 1), read)
[parf] alarm ( 39): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 40): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 41): Memory_access(*(argv + 1), read)
[parf] alarm ( 42): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 43): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 44): Uninitialized(phys->unit_specifier)
[parf] alarm ( 45): Uninitialized(sbit->red_bits)
[parf] alarm ( 46): Uninitialized(*(data + 0))
[parf] alarm ( 47): Memory_access(*(data + 0), read)
[parf] alarm ( 48): Memory_access(*(data + 1), read)
[parf] alarm ( 49): Uninitialized(*(data + 1))
[parf] alarm ( 50): Uninitialized(sbit->green_bits)
[parf] alarm ( 51): Memory_access(*(data + 3), read)
[parf] alarm ( 52): Memory_access(*(data + 2), read)
[parf] alarm ( 53): Uninitialized(*(data + 0))
[parf] alarm ( 54): Memory_access(*(data + 0), read)
[parf] alarm ( 55): Uninitialized(*(data + 2))
[parf] alarm ( 56): Uninitialized(*(data + 1))
[parf] alarm ( 57): Memory_access(*(data + 1), read)
[parf] alarm ( 58): Uninitialized(*(data + 3))
[parf] alarm ( 59): Uninitialized(sbit->blue_bits)
[parf] alarm ( 60): Uninitialized(time->month)
[parf] alarm ( 61): Memory_access(*(data + 0), read)
[parf] alarm ( 62): Memory_access(*(data + 1), read)
[parf] alarm ( 63): Uninitialized(*(data + 1))
[parf] alarm ( 64): Uninitialized(*(data + 3))
[parf] alarm ( 65): Memory_access(*(data + 2), read)
[parf] alarm ( 66): Uninitialized(*(data + 2))
[parf] alarm ( 67): Memory_access(*(data + 3), read)
[parf] alarm ( 68): Uninitialized(*(data + 0))
[parf] alarm ( 69): Uninitialized(time->day)
[parf] alarm ( 70): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 71): Uninitialized(ihdr->color_type)
[parf] alarm ( 72): Uninitialized(chunk->type[0])
[parf] alarm ( 73): Uninitialized(time->hour)
[parf] alarm ( 74): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 75): Uninitialized(time->minute)
[parf] alarm ( 76): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 77): Uninitialized(time->second)
[parf] alarm ( 78): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 79): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 80): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 81): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 82): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 83): Uninitialized(offs->unit_specifier)
[parf] alarm ( 84): Uninitialized(sbit->red_bits)
[parf] alarm ( 85): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 86): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 87): Uninitialized(sbit->green_bits)
[parf] alarm ( 88): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 89): Uninitialized(sbit->blue_bits)
[parf] alarm ( 90): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 91): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 92): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 93): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 94): Uninitialized(ihdr->compression_method)
[parf] alarm ( 95): Unspecified(out)
[parf] alarm ( 96): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 97): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 99): Uninitialized(ihdr->filter_method)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (101): Unspecified(ctx->exif.data)
[parf] alarm (102): Uninitialized(ihdr->interlace_method)
[parf] alarm (103): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (104): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (105): Pointer_comparison(str, (char const *)0)
[parf] alarm (106): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (107): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (108): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (109): Pointer_comparison(end, (char *)0)
[parf] alarm (110): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (111): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (112): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (113): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (114): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 11 -eva-split-return auto -eva-slevel 39 -eva-remove-redundant-alarms -eva-plevel 69 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 46 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 19
[parf] alarms:
[parf] alarm (  1): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  2): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm (  3): Pointer_comparison((void *)end, (void *)str)
[parf] alarm (  4): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  5): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm (  6): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (  7): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm (  8): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (  9): Uninitialized(*(str + 0))
[parf] alarm ( 10): Memory_access(*(str + 0), read)
[parf] alarm ( 11): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 12): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm ( 13): Uninitialized(*(end + -1))
[parf] alarm ( 14): Memory_access(*(end + -1), read)
[parf] alarm ( 15): Uninitialized((ctx->splt_list + i)->entries)
[parf] alarm ( 16): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 17): Unspecified((ctx->splt_list + i)->entries)
[parf] alarm ( 18): Memory_access((ctx->splt_list + i)->entries, read)
[parf] alarm ( 19): Pointer_comparison(tmp_0, (char *)0)
[parf] alarm ( 20): Pointer_comparison(buf, (unsigned char *)0)
[parf] alarm ( 21): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 22): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->frequency, write)
[parf] alarm ( 23): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 24): Uninitialized(red)
[parf] alarm ( 25): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm ( 26): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)
[parf] alarm ( 27): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 28): Uninitialized(green)
[parf] alarm ( 29): Pointer_comparison((void *)str, (void *)end)
[parf] alarm ( 30): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->blue, write)
[parf] alarm ( 31): Uninitialized(blue)
[parf] alarm ( 32): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 33): Uninitialized(alpha)
[parf] alarm ( 34): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->alpha, write)
[parf] alarm ( 35): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm ( 36): Uninitialized(c)
[parf] alarm ( 37): Memory_access(*(argv + 1), read)
[parf] alarm ( 38): Uninitialized(ctx->plte.entries[i].red)
[parf] alarm ( 39): Uninitialized(ctx->plte.entries[i].green)
[parf] alarm ( 40): Memory_access(*(argv + 1), read)
[parf] alarm ( 41): Uninitialized(ctx->plte.entries[i].blue)
[parf] alarm ( 42): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 43): Invalid_shift(bit_depth - sbits <= 32)
[parf] alarm ( 44): Uninitialized(phys->unit_specifier)
[parf] alarm ( 45): Uninitialized(sbit->red_bits)
[parf] alarm ( 46): Uninitialized(*(data + 0))
[parf] alarm ( 47): Memory_access(*(data + 0), read)
[parf] alarm ( 48): Memory_access(*(data + 1), read)
[parf] alarm ( 49): Uninitialized(*(data + 1))
[parf] alarm ( 50): Uninitialized(sbit->green_bits)
[parf] alarm ( 51): Memory_access(*(data + 3), read)
[parf] alarm ( 52): Memory_access(*(data + 2), read)
[parf] alarm ( 53): Uninitialized(*(data + 0))
[parf] alarm ( 54): Memory_access(*(data + 0), read)
[parf] alarm ( 55): Uninitialized(*(data + 2))
[parf] alarm ( 56): Uninitialized(*(data + 1))
[parf] alarm ( 57): Memory_access(*(data + 1), read)
[parf] alarm ( 58): Uninitialized(*(data + 3))
[parf] alarm ( 59): Uninitialized(sbit->blue_bits)
[parf] alarm ( 60): Uninitialized(time->month)
[parf] alarm ( 61): Memory_access(*(data + 0), read)
[parf] alarm ( 62): Memory_access(*(data + 1), read)
[parf] alarm ( 63): Uninitialized(*(data + 1))
[parf] alarm ( 64): Uninitialized(*(data + 3))
[parf] alarm ( 65): Memory_access(*(data + 2), read)
[parf] alarm ( 66): Uninitialized(*(data + 2))
[parf] alarm ( 67): Memory_access(*(data + 3), read)
[parf] alarm ( 68): Uninitialized(*(data + 0))
[parf] alarm ( 69): Uninitialized(time->day)
[parf] alarm ( 70): Pointer_comparison(keyword_nul, (char *)0)
[parf] alarm ( 71): Uninitialized(ihdr->color_type)
[parf] alarm ( 72): Uninitialized(chunk->type[0])
[parf] alarm ( 73): Uninitialized(time->hour)
[parf] alarm ( 74): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 75): Uninitialized(time->minute)
[parf] alarm ( 76): Uninitialized(sbit->grayscale_bits)
[parf] alarm ( 77): Uninitialized(time->second)
[parf] alarm ( 78): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 79): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 80): Pointer_comparison(ctx->data, (unsigned char const *)0)
[parf] alarm ( 81): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm ( 82): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 83): Uninitialized(offs->unit_specifier)
[parf] alarm ( 84): Uninitialized(sbit->red_bits)
[parf] alarm ( 85): Uninitialized(ihdr->bit_depth)
[parf] alarm ( 86): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 87): Uninitialized(sbit->green_bits)
[parf] alarm ( 88): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm ( 89): Uninitialized(sbit->blue_bits)
[parf] alarm ( 90): Uninitialized(ctx->bkgd.plte_index)
[parf] alarm ( 91): Memory_access((ctx->splt_list + i_0)->n_entries, write)
[parf] alarm ( 92): Uninitialized(sbit->alpha_bits)
[parf] alarm ( 93): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 94): Uninitialized(ihdr->compression_method)
[parf] alarm ( 95): Unspecified(out)
[parf] alarm ( 96): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 97): Memory_access((ctx->splt_list + i_0)->entries, write)
[parf] alarm ( 98): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm ( 99): Uninitialized(ihdr->filter_method)
[parf] alarm (100): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (101): Uninitialized((ctx->splt_list + i_0)->entries)
[parf] alarm (102): Unspecified(ctx->exif.data)
[parf] alarm (103): Uninitialized(ihdr->interlace_method)
[parf] alarm (104): Uninitialized((ctx->splt_list + i_0)->sample_depth)
[parf] alarm (105): Memory_access((ctx->splt_list + i_0)->sample_depth, read)
[parf] alarm (106): Pointer_comparison(str, (char const *)0)
[parf] alarm (107): Memory_access((ctx->splt_list + i_0)->n_entries, read)
[parf] alarm (108): Uninitialized((ctx->splt_list + i_0)->n_entries)
[parf] alarm (109): Uninitialized(ctx->srgb_rendering_intent)
[parf] alarm (110): Pointer_comparison(end, (char *)0)
[parf] alarm (111): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (112): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->red, write)
[parf] alarm (113): Memory_access((ctx->splt_list + i_0)->entries, read)
[parf] alarm (114): Memory_access(((ctx->splt_list + i_0)->entries + k_1)->green, write)

real	30m8.887s
user	46m14.803s
sys	21m20.479s
