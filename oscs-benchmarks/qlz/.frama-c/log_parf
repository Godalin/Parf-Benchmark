Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing compress_file.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:58: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      27 invalid memory accesses
      13 accesses to uninitialized left-values
      12 integer overflows
      16 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 17 -eva-remove-redundant-alarms true -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges -eva-auto-loop-unroll 12
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:349: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  57 alarms generated by the analysis:
      19 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 16 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_1
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_1
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_1
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:349: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  55 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 21 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 7
[parf] @default,cvalue,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_2
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_2
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_2
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  55 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 15 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_3
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_3
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_3
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:161: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 3 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  52 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
       7 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 20 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_4
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_4
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_4
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  55 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample00: subset of base? true
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 16 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_5
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_5
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_5
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:349: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  45 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       7 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 42 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_6
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_6
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_6
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 38 -eva-remove-redundant-alarms true -eva-plevel 34 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 23
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_7
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_7
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_7
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 32 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 31 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_8
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_8
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_8
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:349: Trace partitioning superposing up to 400 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:349: Trace partitioning superposing up to 300 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 32 -eva-remove-redundant-alarms true -eva-plevel 44 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_9
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_9
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_9
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:349: Trace partitioning superposing up to 400 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:349: Trace partitioning superposing up to 300 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_10
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_10
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_10
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_11
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_11
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_11
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 60 -eva-remove-redundant-alarms true -eva-plevel 59 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 55 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_12
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_12
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_12
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 59 -eva-remove-redundant-alarms true -eva-plevel 64 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 61 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_13
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_13
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_13
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 52 -eva-remove-redundant-alarms true -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 32
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_14
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_14
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 59 -eva-remove-redundant-alarms true -eva-plevel 63 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_15
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_15
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_15
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms true -eva-plevel 60 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 32
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_16
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_16
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_16
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample04: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample00: subset of base? true
[parf] base: base03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_17
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_17
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_17
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 96 -eva-remove-redundant-alarms true -eva-plevel 74 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 76 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 41
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_18
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_18
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_18
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms true -eva-plevel 82 -eva-partition-history 6 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 79 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 39
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_19
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_19
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_19
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 79 -eva-remove-redundant-alarms true -eva-plevel 76 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 68 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 47
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_20
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_20
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_20
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 75 -eva-remove-redundant-alarms true -eva-plevel 76 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 71 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 46
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_21
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_21
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_21
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 8 -eva-split-return true -eva-slevel 74 -eva-remove-redundant-alarms true -eva-plevel 74 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 87 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 40
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_22
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_22
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_22
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base03-sample04: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] base: base04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_23
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_23
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_23
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 5 -eva-split-return true -eva-slevel 102 -eva-remove-redundant-alarms true -eva-plevel 84 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 4 -eva-ilevel 79 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 54
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_24
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_24
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_24
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 92 -eva-remove-redundant-alarms true -eva-plevel 87 -eva-partition-history 7 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 77 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 43
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_25
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_25
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_25
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_26
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_26
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_26
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: Trace partitioning superposing up to 400 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  41 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       3 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 9 -eva-split-return true -eva-slevel 91 -eva-remove-redundant-alarms true -eva-plevel 91 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 88 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_27
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_27
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_27
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 6 -eva-split-return true -eva-slevel 103 -eva-remove-redundant-alarms true -eva-plevel 90 -eva-partition-history 7 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 72 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_28
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_28
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_28
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base04-sample04: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_29
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_29
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_29
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(state->hash[hash_0].offset, write)
[parf] alarm (  6): Memory_access(*src, read)
[parf] alarm (  7): Memory_access(*dst, write)
[parf] alarm (  8): Uninitialized(*src)
[parf] alarm (  9): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 10): Differing_blocks(dst, destination)
[parf] alarm ( 11): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(dst, destination)
[parf] alarm ( 14): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 15): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 16): Memory_access(*(src + n), read)
[parf] alarm ( 17): Uninitialized(*(src + n))
[parf] alarm ( 18): Memory_access(*src, read)
[parf] alarm ( 19): Uninitialized(*src)
[parf] alarm ( 20): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 21): Differing_blocks(dst, destination)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Memory_access(state->hash[hash].cache, read)
[parf] alarm ( 25): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 27): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 28): Differing_blocks(src, source)
[parf] alarm ( 29): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 30): Pointer_comparison(o, source)
[parf] alarm ( 31): Differing_blocks(src, o)
[parf] alarm ( 32): Pointer_comparison(src, o + 1)
[parf] alarm ( 33): Pointer_comparison(src, source + 3)
[parf] alarm ( 34): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 35): Uninitialized(*((ui32 *)src))
[parf] alarm ( 36): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 37): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 38): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 39): Memory_access(*src, read)
[parf] alarm ( 40): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 44): Memory_access(*src, read)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 49): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 50): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 51): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 52): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 53): Uninitialized(*src)
[parf] alarm ( 54): Memory_access(*src, read)
[parf] alarm ( 55): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 56): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 57): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 58): Memory_access(state->stream_counter, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Memory_access(*dst, write)
[parf] alarm ( 61): Memory_access(*src, read)
[parf] alarm ( 62): Uninitialized(*src)
[parf] alarm ( 63): Memory_access(*(destination + 1), write)
[parf] alarm ( 64): Memory_access(*(destination + 2), write)
[parf] alarm ( 65): Memory_access(*destination, write)
[parf] alarm ( 66): Memory_access(*destination, write)
[parf] alarm ( 67): Memory_access(*destination, write)
[parf] alarm ( 68): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 17 -eva-remove-redundant-alarms true -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Differing_blocks(src, source)
[parf] alarm (  3): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  4): Memory_access(*src, read)
[parf] alarm (  5): Memory_access(*dst, write)
[parf] alarm (  6): Uninitialized(*src)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Uninitialized(*(src + n))
[parf] alarm ( 13): Memory_access(*(src + n), read)
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(dst, destination)
[parf] alarm ( 18): Differing_blocks(src, source)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 21): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 22): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 23): Differing_blocks(src, source)
[parf] alarm ( 24): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 25): Pointer_comparison(o, source)
[parf] alarm ( 26): Differing_blocks(src, o)
[parf] alarm ( 27): Pointer_comparison(src, o + 1)
[parf] alarm ( 28): Pointer_comparison(src, source + 3)
[parf] alarm ( 29): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 30): Uninitialized(*((ui32 *)src))
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Memory_access(*src, read)
[parf] alarm ( 35): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 41): Uninitialized(*src)
[parf] alarm ( 42): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 43): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 44): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Memory_access(*src, read)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 52): Memory_access(*destination, write)
[parf] alarm ( 53): Memory_access(*dst, write)
[parf] alarm ( 54): Memory_access(*src, read)
[parf] alarm ( 55): Uninitialized(*src)
[parf] alarm ( 56): Memory_access(*destination, write)
[parf] alarm ( 57): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 16 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Differing_blocks(src, source)
[parf] alarm (  3): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  4): Memory_access(*src, read)
[parf] alarm (  5): Memory_access(*dst, write)
[parf] alarm (  6): Uninitialized(*src)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(dst, destination)
[parf] alarm ( 18): Differing_blocks(src, source)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 21): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 22): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 23): Differing_blocks(src, source)
[parf] alarm ( 24): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 25): Pointer_comparison(o, source)
[parf] alarm ( 26): Differing_blocks(src, o)
[parf] alarm ( 27): Pointer_comparison(src, o + 1)
[parf] alarm ( 28): Pointer_comparison(src, source + 3)
[parf] alarm ( 29): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 30): Uninitialized(*((ui32 *)src))
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Memory_access(*src, read)
[parf] alarm ( 35): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 41): Uninitialized(*src)
[parf] alarm ( 42): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 43): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 44): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Memory_access(*src, read)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 21 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Differing_blocks(src, source)
[parf] alarm (  3): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  4): Memory_access(*src, read)
[parf] alarm (  5): Memory_access(*dst, write)
[parf] alarm (  6): Uninitialized(*src)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(dst, destination)
[parf] alarm ( 18): Differing_blocks(src, source)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 21): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 22): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 23): Differing_blocks(src, source)
[parf] alarm ( 24): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 25): Pointer_comparison(o, source)
[parf] alarm ( 26): Differing_blocks(src, o)
[parf] alarm ( 27): Pointer_comparison(src, o + 1)
[parf] alarm ( 28): Pointer_comparison(src, source + 3)
[parf] alarm ( 29): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 30): Uninitialized(*((ui32 *)src))
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Memory_access(*src, read)
[parf] alarm ( 35): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 41): Uninitialized(*src)
[parf] alarm ( 42): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 43): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 44): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Memory_access(*src, read)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 15 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Memory_access(*src, read)
[parf] alarm (  4): Memory_access(*dst, write)
[parf] alarm (  5): Uninitialized(*src)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 10): Uninitialized(*(src + n))
[parf] alarm ( 11): Memory_access(*(src + n), read)
[parf] alarm ( 12): Memory_access(*src, read)
[parf] alarm ( 13): Uninitialized(*src)
[parf] alarm ( 14): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 16): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 17): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 18): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Pointer_comparison(o, source)
[parf] alarm ( 21): Pointer_comparison(src, o + 1)
[parf] alarm ( 22): Pointer_comparison(src, source + 3)
[parf] alarm ( 23): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 24): Uninitialized(*((ui32 *)src))
[parf] alarm ( 25): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 26): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 27): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 28): Memory_access(*src, read)
[parf] alarm ( 29): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 30): Uninitialized(*src)
[parf] alarm ( 31): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 32): Memory_access(*src, read)
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*src)
[parf] alarm ( 35): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 36): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 37): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 38): Uninitialized(*src)
[parf] alarm ( 39): Memory_access(*src, read)
[parf] alarm ( 40): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 43): Memory_access(*destination, write)
[parf] alarm ( 44): Memory_access(*dst, write)
[parf] alarm ( 45): Memory_access(*src, read)
[parf] alarm ( 46): Uninitialized(*src)
[parf] alarm ( 47): Memory_access(*(destination + 1), write)
[parf] alarm ( 48): Memory_access(*(destination + 2), write)
[parf] alarm ( 49): Memory_access(*destination, write)
[parf] alarm ( 50): Memory_access(*destination, write)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 20 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Differing_blocks(src, source)
[parf] alarm (  3): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  4): Memory_access(*src, read)
[parf] alarm (  5): Memory_access(*dst, write)
[parf] alarm (  6): Uninitialized(*src)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(dst, destination)
[parf] alarm ( 18): Differing_blocks(src, source)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 21): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 22): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 23): Differing_blocks(src, source)
[parf] alarm ( 24): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 25): Pointer_comparison(o, source)
[parf] alarm ( 26): Differing_blocks(src, o)
[parf] alarm ( 27): Pointer_comparison(src, o + 1)
[parf] alarm ( 28): Pointer_comparison(src, source + 3)
[parf] alarm ( 29): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 30): Uninitialized(*((ui32 *)src))
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Memory_access(*src, read)
[parf] alarm ( 35): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 41): Uninitialized(*src)
[parf] alarm ( 42): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 43): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 44): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Memory_access(*src, read)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 16 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 15): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Pointer_comparison(o, source)
[parf] alarm ( 20): Pointer_comparison(src, o + 1)
[parf] alarm ( 21): Pointer_comparison(src, source + 3)
[parf] alarm ( 22): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 23): Uninitialized(*((ui32 *)src))
[parf] alarm ( 24): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 25): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 26): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 27): Memory_access(*src, read)
[parf] alarm ( 28): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 29): Uninitialized(*src)
[parf] alarm ( 30): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Uninitialized(*src)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 36): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Memory_access(*dst, write)
[parf] alarm ( 43): Memory_access(*src, read)
[parf] alarm ( 44): Uninitialized(*src)
[parf] alarm ( 45): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 42 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 38 -eva-remove-redundant-alarms true -eva-plevel 34 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 23
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 32 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 31 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 32 -eva-remove-redundant-alarms true -eva-plevel 44 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 60 -eva-remove-redundant-alarms true -eva-plevel 59 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 55 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 59 -eva-remove-redundant-alarms true -eva-plevel 64 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 61 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 52 -eva-remove-redundant-alarms true -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 32
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample03" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 59 -eva-remove-redundant-alarms true -eva-plevel 63 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample04" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 57 -eva-remove-redundant-alarms true -eva-plevel 60 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 32
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 96 -eva-remove-redundant-alarms true -eva-plevel 74 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 76 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 41
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample01" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms true -eva-plevel 82 -eva-partition-history 6 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 79 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample02" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 79 -eva-remove-redundant-alarms true -eva-plevel 76 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 68 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 47
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample03" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 75 -eva-remove-redundant-alarms true -eva-plevel 76 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 71 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 46
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample04" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 8 -eva-split-return true -eva-slevel 74 -eva-remove-redundant-alarms true -eva-plevel 74 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 87 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 40
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 29 -eva-remove-redundant-alarms true -eva-plevel 32 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 5 -eva-split-return true -eva-slevel 102 -eva-remove-redundant-alarms true -eva-plevel 84 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 4 -eva-ilevel 79 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 54
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample01" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 92 -eva-remove-redundant-alarms true -eva-plevel 87 -eva-partition-history 7 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 77 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 43
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample02" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Memory_access(*src, read)
[parf] alarm ( 40): Uninitialized(*src)
[parf] alarm ( 41): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample03" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 9 -eva-split-return true -eva-slevel 91 -eva-remove-redundant-alarms true -eva-plevel 91 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 88 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample04" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 6 -eva-split-return true -eva-slevel 103 -eva-remove-redundant-alarms true -eva-plevel 90 -eva-partition-history 7 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 72 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] 43,"-eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 119 -eva-remove-redundant-alarms true -eva-plevel 83 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 78 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 50 ",
[parf] 43

real	2m13.071s
user	2m12.199s
sys	0m0.644s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing decompress_file.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 15 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 13
[parf] @default,cvalue,equality,gauges,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_1
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_1
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 26 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_2
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_2
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_2
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 20 -eva-remove-redundant-alarms true -eva-plevel 22 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 8
[parf] @default,cvalue,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_3
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_3
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_3
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 16 -eva-remove-redundant-alarms false -eva-plevel 24 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 13
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_4
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_4
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_4
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample00: subset of base? true
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_5
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_5
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_5
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 48 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_6
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_6
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_6
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 49 -eva-remove-redundant-alarms false -eva-plevel 28 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 19 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_7
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_7
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_7
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 43 -eva-remove-redundant-alarms false -eva-plevel 32 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 13
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_8
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_8
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_8
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 30 -eva-remove-redundant-alarms true -eva-plevel 26 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 13
[parf] @default,cvalue
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_9
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_9
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_9
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 33 -eva-remove-redundant-alarms false -eva-plevel 25 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 19
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_10
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_10
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_10
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_11
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_11
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_11
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 53 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 26 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 47
[parf] @default,cvalue,equality,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_12
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_12
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_12
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 70 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 19 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 29
[parf] @default,cvalue,equality
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_13
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_13
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_13
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 63 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 22 -eva-equality-through-calls false -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] @default,cvalue,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_14
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_14
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 52 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 39
[parf] @default,cvalue,equality,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_15
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_15
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_15
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 6 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 47 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 28 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_16
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_16
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_16
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample04: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample00: subset of base? true
[parf] base: base03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_17
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_17
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_17
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 84 -eva-remove-redundant-alarms false -eva-plevel 39 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 40 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 36
[parf] @default,cvalue,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_18
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_18
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_18
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 45 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 45 -eva-equality-through-calls true -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 44
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_19
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_19
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_19
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 56 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 31 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 42
[parf] @default,cvalue,equality,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_20
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_20
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_20
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 77 -eva-remove-redundant-alarms false -eva-plevel 59 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 4 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 42
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_21
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_21
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_21
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 89 -eva-remove-redundant-alarms true -eva-plevel 50 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 33 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_22
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_22
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_22
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base03-sample04: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] base: base04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_23
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_23
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_23
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 5 -eva-split-return true -eva-slevel 100 -eva-remove-redundant-alarms false -eva-plevel 70 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 39 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 39
[parf] @default,cvalue,equality,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_24
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_24
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_24
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return false -eva-slevel 98 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 7 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 51 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 52
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_25
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_25
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_25
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 95 -eva-remove-redundant-alarms false -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 40 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 50
[parf] @default,cvalue,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_26
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_26
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_26
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 10 -eva-split-return false -eva-slevel 92 -eva-remove-redundant-alarms false -eva-plevel 63 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 34 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 51
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_27
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_27
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_27
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 9 -eva-split-return false -eva-slevel 101 -eva-remove-redundant-alarms true -eva-plevel 68 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 42 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 64
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_28
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_28
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_28
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base04-sample04: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_29
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_29
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_29
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 15 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 26 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 20 -eva-remove-redundant-alarms true -eva-plevel 22 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 8
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 16 -eva-remove-redundant-alarms false -eva-plevel 24 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 48 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 49 -eva-remove-redundant-alarms false -eva-plevel 28 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 19 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 43 -eva-remove-redundant-alarms false -eva-plevel 32 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 30 -eva-remove-redundant-alarms true -eva-plevel 26 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 33 -eva-remove-redundant-alarms false -eva-plevel 25 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 19
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 53 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 26 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 47
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 70 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 4 -eva-ilevel 19 -eva-equality-through-calls true -eva-domains cvalue,equality -eva-auto-loop-unroll 29
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 63 -eva-remove-redundant-alarms true -eva-plevel 28 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 22 -eva-equality-through-calls false -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample03" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 52 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 27 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 6 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 47 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 28 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 84 -eva-remove-redundant-alarms false -eva-plevel 39 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 40 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 36
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample01" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 64 -eva-remove-redundant-alarms true -eva-plevel 45 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 45 -eva-equality-through-calls true -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 44
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample02" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 56 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 31 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 42
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample03" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 77 -eva-remove-redundant-alarms false -eva-plevel 59 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 4 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 42
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample04" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 89 -eva-remove-redundant-alarms true -eva-plevel 50 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 33 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 5 -eva-split-return true -eva-slevel 100 -eva-remove-redundant-alarms false -eva-plevel 70 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 39 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample01" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return false -eva-slevel 98 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 7 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 51 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 52
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample02" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 95 -eva-remove-redundant-alarms false -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 40 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 10 -eva-split-return false -eva-slevel 92 -eva-remove-redundant-alarms false -eva-plevel 63 -eva-partition-history 4 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 34 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 51
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample04" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 9 -eva-split-return false -eva-slevel 101 -eva-remove-redundant-alarms true -eva-plevel 68 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 5 -eva-ilevel 42 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 64
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] 8,"-eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0 ",
[parf] 8

real	0m5.010s
user	0m4.718s
sys	0m0.237s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing stream_compress.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24
[eva] stream_compress.c:28: allocating variable __malloc_main_l28
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  94 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    10 valid    13 unknown     0 invalid     23 total
  43% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges -eva-auto-loop-unroll 10
[parf] @default,cvalue,gauges
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 21 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  93 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      14 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms false -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,octagon -eva-auto-loop-unroll 12
[parf] @default,cvalue,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_1
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_1
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_1
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:271: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  93 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      14 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 13
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_2
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_2
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] using specification for function fclose
[scope:rm_asserts] removing 21 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  93 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      14 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    11 unknown     0 invalid     23 total
  52% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 8
[parf] @default,cvalue,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_3
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_3
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_3
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  93 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      14 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    11 unknown     0 invalid     23 total
  52% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 20 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_4
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_4
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_4
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  85 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample00: subset of base? true
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 20 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_5
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_5
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_5
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  85 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 39 -eva-remove-redundant-alarms false -eva-plevel 47 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 8
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_6
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_6
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_6
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_7
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_7
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_7
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 36 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_8
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_8
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_8
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 9
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_9
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_9
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_9
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 42 -eva-remove-redundant-alarms false -eva-plevel 41 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_10
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_10
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_10
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_11
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_11
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_11
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 76 -eva-remove-redundant-alarms true -eva-plevel 63 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 69 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_12
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_12
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_12
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:412: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:404: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms true -eva-plevel 87 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 57 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 9
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_13
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_13
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_13
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:412: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:407: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 67 -eva-remove-redundant-alarms false -eva-plevel 81 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 71 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_14
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_14
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_14
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:412: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:404: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:407: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 50 -eva-remove-redundant-alarms true -eva-plevel 79 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_15
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_15
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_15
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 77 -eva-remove-redundant-alarms true -eva-plevel 69 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 70 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 14
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_16
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_16
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_16
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:412: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample04: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample00: subset of base? true
[parf] base: base03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_17
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_17
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_17
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 93 -eva-remove-redundant-alarms true -eva-plevel 81 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 77 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_18
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_18
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_18
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: Trace partitioning superposing up to 100 states
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] stream_compress.c:35: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 86 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 66 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_19
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_19
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_19
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:388: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:412: Trace partitioning superposing up to 100 states
[eva] quicklz.c:404: Trace partitioning superposing up to 400 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:404: Trace partitioning superposing up to 500 states
[eva] quicklz.c:404: Trace partitioning superposing up to 600 states
[eva] quicklz.c:404: Trace partitioning superposing up to 700 states
[eva] quicklz.c:404: Trace partitioning superposing up to 800 states
[eva] quicklz.c:404: Trace partitioning superposing up to 900 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:404: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:404: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:404: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_20
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_20
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_20
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  82 alarms generated by the analysis:
      20 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      13 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Differing_blocks(dst, destination)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 55): Index_out_of_bound(hash >= 0)
[parf] alarm ( 56): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 57): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 58): Pointer_comparison(o, src - 2)
[parf] alarm ( 59): Memory_access(*(src + m), read)
[parf] alarm ( 60): Uninitialized(*(src + m))
[parf] alarm ( 61): Memory_access(*(o + m), read)
[parf] alarm ( 62): Uninitialized(*(o + m))
[parf] alarm ( 63): Pointer_comparison(o, offset2)
[parf] alarm ( 64): Index_out_of_bound(hash < 4096)
[parf] alarm ( 65): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 67): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 68): Index_out_of_bound(hash >= 0)
[parf] alarm ( 69): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 70): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 71): Index_out_of_bound(hash < 4096)
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 74): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 75): Differing_blocks(src, o)
[parf] alarm ( 76): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 77): Differing_blocks(src, o)
[parf] alarm ( 78): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 79): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 80): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 81): Index_out_of_bound(hash < 4096)
[parf] alarm ( 82): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 83): Index_out_of_bound(hash >= 0)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 85): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 86): Index_out_of_bound(hash < 4096)
[parf] alarm ( 87): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 88): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 89): Index_out_of_bound(hash >= 0)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 91): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 92): Index_out_of_bound(hash < 4096)
[parf] alarm ( 93): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 94): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Index_out_of_bound(hash < 4096)
[parf] alarm ( 53): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 56): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 57): Pointer_comparison(o, src - 2)
[parf] alarm ( 58): Memory_access(*(src + m), read)
[parf] alarm ( 59): Uninitialized(*(src + m))
[parf] alarm ( 60): Memory_access(*(o + m), read)
[parf] alarm ( 61): Uninitialized(*(o + m))
[parf] alarm ( 62): Pointer_comparison(o, offset2)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 65): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 67): Index_out_of_bound(hash >= 0)
[parf] alarm ( 68): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 69): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Index_out_of_bound(hash >= 0)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Differing_blocks(src, o)
[parf] alarm ( 75): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 76): Differing_blocks(src, o)
[parf] alarm ( 77): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 78): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 87): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 88): Index_out_of_bound(hash >= 0)
[parf] alarm ( 89): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 91): Index_out_of_bound(hash < 4096)
[parf] alarm ( 92): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 93): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms false -eva-plevel 24 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,octagon -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Index_out_of_bound(hash < 4096)
[parf] alarm ( 53): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 56): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 57): Pointer_comparison(o, src - 2)
[parf] alarm ( 58): Memory_access(*(src + m), read)
[parf] alarm ( 59): Uninitialized(*(src + m))
[parf] alarm ( 60): Memory_access(*(o + m), read)
[parf] alarm ( 61): Uninitialized(*(o + m))
[parf] alarm ( 62): Pointer_comparison(o, offset2)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 65): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 67): Index_out_of_bound(hash >= 0)
[parf] alarm ( 68): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 69): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Index_out_of_bound(hash >= 0)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Differing_blocks(src, o)
[parf] alarm ( 75): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 76): Differing_blocks(src, o)
[parf] alarm ( 77): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 78): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 87): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 88): Index_out_of_bound(hash >= 0)
[parf] alarm ( 89): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 91): Index_out_of_bound(hash < 4096)
[parf] alarm ( 92): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 93): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 17 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Index_out_of_bound(hash < 4096)
[parf] alarm ( 53): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 56): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 57): Pointer_comparison(o, src - 2)
[parf] alarm ( 58): Memory_access(*(src + m), read)
[parf] alarm ( 59): Uninitialized(*(src + m))
[parf] alarm ( 60): Memory_access(*(o + m), read)
[parf] alarm ( 61): Uninitialized(*(o + m))
[parf] alarm ( 62): Pointer_comparison(o, offset2)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 65): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 67): Index_out_of_bound(hash >= 0)
[parf] alarm ( 68): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 69): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Index_out_of_bound(hash >= 0)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Differing_blocks(src, o)
[parf] alarm ( 75): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 76): Differing_blocks(src, o)
[parf] alarm ( 77): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 78): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 87): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 88): Index_out_of_bound(hash >= 0)
[parf] alarm ( 89): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 91): Index_out_of_bound(hash < 4096)
[parf] alarm ( 92): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 93): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 8
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Index_out_of_bound(hash < 4096)
[parf] alarm ( 53): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 56): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 57): Pointer_comparison(o, src - 2)
[parf] alarm ( 58): Memory_access(*(src + m), read)
[parf] alarm ( 59): Uninitialized(*(src + m))
[parf] alarm ( 60): Memory_access(*(o + m), read)
[parf] alarm ( 61): Uninitialized(*(o + m))
[parf] alarm ( 62): Pointer_comparison(o, offset2)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 65): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 67): Index_out_of_bound(hash >= 0)
[parf] alarm ( 68): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 69): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Index_out_of_bound(hash >= 0)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Differing_blocks(src, o)
[parf] alarm ( 75): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 76): Differing_blocks(src, o)
[parf] alarm ( 77): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 78): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 87): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 88): Index_out_of_bound(hash >= 0)
[parf] alarm ( 89): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 91): Index_out_of_bound(hash < 4096)
[parf] alarm ( 92): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 93): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 20 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Memory_access(state->stream_counter, read)
[parf] alarm ( 11): Uninitialized(state->stream_counter)
[parf] alarm ( 12): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 15): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 16): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 17): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 19): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 20): Uninitialized(*src)
[parf] alarm ( 21): Memory_access(*dst, write)
[parf] alarm ( 22): Index_out_of_bound(hash >= 0)
[parf] alarm ( 23): Index_out_of_bound(hash < 4096)
[parf] alarm ( 24): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 25): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 27): Index_out_of_bound(hash < 4096)
[parf] alarm ( 28): Index_out_of_bound(hash >= 0)
[parf] alarm ( 29): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 30): Pointer_comparison(src, last_byte)
[parf] alarm ( 31): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 32): Memory_access(*src, read)
[parf] alarm ( 33): Uninitialized(*src)
[parf] alarm ( 34): Memory_access(*dst, write)
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Uninitialized(*(src + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 39): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 40): Memory_access(*(src + matchlen), read)
[parf] alarm ( 41): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 42): Uninitialized(*((ui32 *)src))
[parf] alarm ( 43): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 44): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 45): Index_out_of_bound(hash < 4096)
[parf] alarm ( 46): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 47): Index_out_of_bound(hash >= 0)
[parf] alarm ( 48): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 49): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 50): Pointer_comparison(o, src - 2)
[parf] alarm ( 51): Memory_access(*(src + m), read)
[parf] alarm ( 52): Uninitialized(*(src + m))
[parf] alarm ( 53): Memory_access(*(o + m), read)
[parf] alarm ( 54): Uninitialized(*(o + m))
[parf] alarm ( 55): Pointer_comparison(o, offset2)
[parf] alarm ( 56): Index_out_of_bound(hash < 4096)
[parf] alarm ( 57): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 58): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 59): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 60): Index_out_of_bound(hash >= 0)
[parf] alarm ( 61): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 62): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Index_out_of_bound(hash >= 0)
[parf] alarm ( 65): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 66): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 67): Differing_blocks(src, o)
[parf] alarm ( 68): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)
[parf] alarm ( 76): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 77): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 78): Index_out_of_bound(hash < 4096)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 80): Index_out_of_bound(hash >= 0)
[parf] alarm ( 81): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 82): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 83): Index_out_of_bound(hash < 4096)
[parf] alarm ( 84): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 85): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 20 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 5
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Memory_access(state->stream_counter, read)
[parf] alarm ( 11): Uninitialized(state->stream_counter)
[parf] alarm ( 12): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 15): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 16): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 17): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 19): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 20): Uninitialized(*src)
[parf] alarm ( 21): Memory_access(*dst, write)
[parf] alarm ( 22): Index_out_of_bound(hash >= 0)
[parf] alarm ( 23): Index_out_of_bound(hash < 4096)
[parf] alarm ( 24): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 25): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 27): Index_out_of_bound(hash < 4096)
[parf] alarm ( 28): Index_out_of_bound(hash >= 0)
[parf] alarm ( 29): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 30): Pointer_comparison(src, last_byte)
[parf] alarm ( 31): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 32): Memory_access(*src, read)
[parf] alarm ( 33): Uninitialized(*src)
[parf] alarm ( 34): Memory_access(*dst, write)
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Uninitialized(*(src + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 39): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 40): Memory_access(*(src + matchlen), read)
[parf] alarm ( 41): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 42): Uninitialized(*((ui32 *)src))
[parf] alarm ( 43): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 44): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 45): Index_out_of_bound(hash < 4096)
[parf] alarm ( 46): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 47): Index_out_of_bound(hash >= 0)
[parf] alarm ( 48): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 49): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 50): Pointer_comparison(o, src - 2)
[parf] alarm ( 51): Memory_access(*(src + m), read)
[parf] alarm ( 52): Uninitialized(*(src + m))
[parf] alarm ( 53): Memory_access(*(o + m), read)
[parf] alarm ( 54): Uninitialized(*(o + m))
[parf] alarm ( 55): Pointer_comparison(o, offset2)
[parf] alarm ( 56): Index_out_of_bound(hash < 4096)
[parf] alarm ( 57): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 58): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 59): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 60): Index_out_of_bound(hash >= 0)
[parf] alarm ( 61): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 62): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Index_out_of_bound(hash >= 0)
[parf] alarm ( 65): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 66): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 67): Differing_blocks(src, o)
[parf] alarm ( 68): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)
[parf] alarm ( 76): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 77): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 78): Index_out_of_bound(hash < 4096)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 80): Index_out_of_bound(hash >= 0)
[parf] alarm ( 81): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 82): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 83): Index_out_of_bound(hash < 4096)
[parf] alarm ( 84): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 85): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 39 -eva-remove-redundant-alarms false -eva-plevel 47 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 8
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 36 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 40 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 42 -eva-remove-redundant-alarms false -eva-plevel 41 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 76 -eva-remove-redundant-alarms true -eva-plevel 63 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 69 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms true -eva-plevel 87 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 57 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 67 -eva-remove-redundant-alarms false -eva-plevel 81 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 71 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02-sample03" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 50 -eva-remove-redundant-alarms true -eva-plevel 79 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base02-sample04" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 77 -eva-remove-redundant-alarms true -eva-plevel 69 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 70 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample00" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 93 -eva-remove-redundant-alarms true -eva-plevel 81 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 77 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 26
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample01" ======
[parf] Parameter: -eva-widening-delay 9 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 86 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 66 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 11): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 15): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 16): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 17): Uninitialized(*src)
[parf] alarm ( 18): Memory_access(*dst, write)
[parf] alarm ( 19): Index_out_of_bound(hash >= 0)
[parf] alarm ( 20): Index_out_of_bound(hash < 4096)
[parf] alarm ( 21): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 22): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 23): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 27): Pointer_comparison(src, last_byte)
[parf] alarm ( 28): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 29): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 30): Uninitialized(*(src + matchlen))
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*dst, write)
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 37): Memory_access(*(src + matchlen), read)
[parf] alarm ( 38): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 39): Uninitialized(*((ui32 *)src))
[parf] alarm ( 40): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 41): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 42): Index_out_of_bound(hash < 4096)
[parf] alarm ( 43): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 44): Index_out_of_bound(hash >= 0)
[parf] alarm ( 45): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 46): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 47): Pointer_comparison(o, src - 2)
[parf] alarm ( 48): Memory_access(*(src + m), read)
[parf] alarm ( 49): Uninitialized(*(src + m))
[parf] alarm ( 50): Memory_access(*(o + m), read)
[parf] alarm ( 51): Uninitialized(*(o + m))
[parf] alarm ( 52): Pointer_comparison(o, offset2)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 55): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 56): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 57): Index_out_of_bound(hash >= 0)
[parf] alarm ( 58): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 59): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 63): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Differing_blocks(src, o)
[parf] alarm ( 67): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 70): Index_out_of_bound(hash < 4096)
[parf] alarm ( 71): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 74): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 79): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] 82,"-eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 35 -eva-remove-redundant-alarms false -eva-plevel 37 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 33 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 7 ",
[parf] 82

real	8m19.411s
user	8m15.421s
sys	0m3.231s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing stream_decompress.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] use metrics (not implemented)
[parf] base: base00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 10
[parf] @default,cvalue,equality,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 24 -eva-remove-redundant-alarms true -eva-plevel 25 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 14
[parf] @default,cvalue,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_1
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_1
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_1
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 14 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 9
[parf] @default,cvalue,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_2
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_2
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_2
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 6
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_3
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_3
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_3
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base00-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 21 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_4
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_4
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_4
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base00-sample04: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample00: subset of base? true
[parf] base: base01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_5
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_5
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_5
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 52 -eva-remove-redundant-alarms false -eva-plevel 31 -eva-partition-history 5 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_6
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_6
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_6
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:676: Trace partitioning superposing up to 100 states
[eva] quicklz.c:676: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:676: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 41 -eva-remove-redundant-alarms true -eva-plevel 30 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 22
[parf] @default,cvalue,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_7
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_7
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_7
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:676: Trace partitioning superposing up to 100 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 28 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 17 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 16
[parf] @default,cvalue,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_8
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_8
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_8
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_9
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_9
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_9
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base01-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 33 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 19
[parf] @default,cvalue,equality,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_10
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_10
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_10
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base01-sample04: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] base: base02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_11
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_11
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_11
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] @default,cvalue,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_12
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_12
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_12
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 65 -eva-remove-redundant-alarms true -eva-plevel 43 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_13
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_13
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_13
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 68 -eva-remove-redundant-alarms false -eva-plevel 39 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 28 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 31
[parf] @default,cvalue,equality,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_14
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_14
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_14
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 65 -eva-remove-redundant-alarms false -eva-plevel 57 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 33
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_15
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_15
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_15
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base02-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 74 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_16
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_16
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_16
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base02-sample04: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample00: subset of base? true
[parf] base: base03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_17
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_17
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_17
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 86 -eva-remove-redundant-alarms false -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 50
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_18
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_18
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_18
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 87 -eva-remove-redundant-alarms false -eva-plevel 57 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 44 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 44
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_19
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_19
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_19
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 77 -eva-remove-redundant-alarms false -eva-plevel 53 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 47
[parf] @default,cvalue,equality,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_20
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_20
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_20
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 95 -eva-remove-redundant-alarms false -eva-plevel 65 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 42 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 41
[parf] @default,cvalue,equality,gauges
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_21
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_21
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_21
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base03-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 50 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 38 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_22
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_22
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_22
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base03-sample04: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] base: base04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_23
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_23
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_23
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample00
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 93 -eva-remove-redundant-alarms false -eva-plevel 56 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 50
[parf] @default,cvalue,equality,gauges
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_24
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_24
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_24
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 800 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:676: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample01
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 109 -eva-remove-redundant-alarms true -eva-plevel 58 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 52 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 51
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_25
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_25
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_25
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample02
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 112 -eva-remove-redundant-alarms false -eva-plevel 67 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 66
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_26
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_26
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_26
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample03
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 102 -eva-remove-redundant-alarms false -eva-plevel 65 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 43 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 45
[parf] @default,cvalue,equality,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_27
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_27
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_27
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample: base04-sample04
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 112 -eva-remove-redundant-alarms true -eva-plevel 56 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 51 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 44
[parf] @default,cvalue,equality,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_28
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_28
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_28
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] sample base04-sample04: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] === !!! start run eva ======================
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_29
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_29
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_29
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] finish run eva =============================
[parf] best parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] ================================= Summary ==================================
[parf] ============================================================================
[parf] ============================================================================
[parf] ====== project "base00" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 22 -eva-remove-redundant-alarms false -eva-plevel 22 -eva-partition-history 0 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample01" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 24 -eva-remove-redundant-alarms true -eva-plevel 25 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return true -eva-slevel 14 -eva-remove-redundant-alarms false -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 19 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 6
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 21 -eva-remove-redundant-alarms true -eva-plevel 20 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 0 -eva-remove-redundant-alarms false -eva-plevel 10 -eva-partition-history 0 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample00" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 52 -eva-remove-redundant-alarms false -eva-plevel 31 -eva-partition-history 5 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 17
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample01" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return true -eva-slevel 41 -eva-remove-redundant-alarms true -eva-plevel 30 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls true -eva-domains cvalue,octagon -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 3 -eva-split-return false -eva-slevel 36 -eva-remove-redundant-alarms false -eva-plevel 28 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 2 -eva-ilevel 17 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 16
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample03" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 45 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 33 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon -eva-auto-loop-unroll 19
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample00" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 71 -eva-remove-redundant-alarms false -eva-plevel 45 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 27
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample01" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 65 -eva-remove-redundant-alarms true -eva-plevel 43 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls false -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample02" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 68 -eva-remove-redundant-alarms false -eva-plevel 39 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 28 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 31
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample03" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 65 -eva-remove-redundant-alarms false -eva-plevel 57 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 30 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 33
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample04" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 0 -eva-split-return true -eva-slevel 74 -eva-remove-redundant-alarms true -eva-plevel 54 -eva-partition-history 1 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample00" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 4 -eva-split-return false -eva-slevel 86 -eva-remove-redundant-alarms false -eva-plevel 60 -eva-partition-history 3 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 32 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample01" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 87 -eva-remove-redundant-alarms false -eva-plevel 57 -eva-partition-history 3 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 44 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 44
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample02" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 77 -eva-remove-redundant-alarms false -eva-plevel 53 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 1 -eva-ilevel 35 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 47
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample03" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 95 -eva-remove-redundant-alarms false -eva-plevel 65 -eva-partition-history 4 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 42 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 41
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample04" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return true -eva-slevel 85 -eva-remove-redundant-alarms false -eva-plevel 50 -eva-partition-history 2 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 38 -eva-equality-through-calls false -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample00" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 93 -eva-remove-redundant-alarms false -eva-plevel 56 -eva-partition-history 6 -eva-octagon-through-calls true -eva-min-loop-unroll 0 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 50
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample01" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 109 -eva-remove-redundant-alarms true -eva-plevel 58 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 3 -eva-ilevel 52 -eva-equality-through-calls true -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 51
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample02" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 1 -eva-split-return false -eva-slevel 112 -eva-remove-redundant-alarms false -eva-plevel 67 -eva-partition-history 2 -eva-octagon-through-calls true -eva-min-loop-unroll 1 -eva-ilevel 60 -eva-equality-through-calls true -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 66
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample03" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 3 -eva-split-return true -eva-slevel 102 -eva-remove-redundant-alarms false -eva-plevel 65 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 5 -eva-ilevel 43 -eva-equality-through-calls false -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 45
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample04" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 2 -eva-split-return false -eva-slevel 112 -eva-remove-redundant-alarms true -eva-plevel 56 -eva-partition-history 5 -eva-octagon-through-calls false -eva-min-loop-unroll 3 -eva-ilevel 51 -eva-equality-through-calls false -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 44
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "final" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] 13,"-eva-widening-delay 2 -eva-subdivide-non-linear 0 -eva-split-return false -eva-slevel 34 -eva-remove-redundant-alarms false -eva-plevel 23 -eva-partition-history 1 -eva-octagon-through-calls false -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls false -eva-domains cvalue -eva-auto-loop-unroll 16 ",
[parf] 13

real	1m31.096s
user	1m30.179s
sys	0m0.608s
