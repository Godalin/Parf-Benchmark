Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing compress_file.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:58: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  68 alarms generated by the analysis:
      27 invalid memory accesses
      13 accesses to uninitialized left-values
      12 integer overflows
      16 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 180
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return auto -eva-slevel 14 -eva-remove-redundant-alarms -eva-plevel 37 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 14
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 8 -eva-plevel 29 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 25 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 6
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 14 -eva-plevel 38 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 8
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-slevel 7 -eva-remove-redundant-alarms -eva-plevel 38 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 12
[parf] @default,cvalue,octagon
[parf] @default,cvalue,equality
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fseek
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function ftell
[eva] using specification for function fread
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:161: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  55 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
       9 integer overflows
       9 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:543: starting to merge loop iterations
[kernel] quicklz.c:161: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      13 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:349: Trace partitioning superposing up to 100 states
[eva] quicklz.c:349: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 3 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      13 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 360
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 70 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 32 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 19
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 4 -eva-slevel 17 -eva-remove-redundant-alarms -eva-plevel 76 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 28 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 15 -eva-remove-redundant-alarms -eva-plevel 76 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls formals -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 21
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 67 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] @default,cvalue,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,octagon
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:543: starting to merge loop iterations
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 3 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      13 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 3 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  60 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
      10 integer overflows
      13 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 3 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  53 alarms generated by the analysis:
      24 invalid memory accesses
      13 accesses to uninitialized left-values
       8 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  45 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       7 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 720
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 13 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 30 -eva-remove-redundant-alarms -eva-plevel 145 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 51 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 8 -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 136 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 62 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 40
[parf] parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 30 -eva-remove-redundant-alarms -eva-plevel 151 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 49 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] parameters: -eva-widening-delay 11 -eva-subdivide-non-linear 10 -eva-slevel 34 -eva-remove-redundant-alarms -eva-plevel 138 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 53 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 48
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 100 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 100 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] base: base03
[parf] Analysis time for this epoch: 1440
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 57 -eva-remove-redundant-alarms -eva-plevel 285 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 93 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 89
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 13 -eva-slevel 60 -eva-remove-redundant-alarms -eva-plevel 281 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 94 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 75
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 12 -eva-split-return auto -eva-slevel 59 -eva-remove-redundant-alarms -eva-plevel 272 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 101 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 75
[parf] parameters: -eva-widening-delay 15 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 55 -eva-remove-redundant-alarms -eva-plevel 265 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 91 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 77
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:354: Trace partitioning superposing up to 200 states
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] base: base04
[parf] Analysis time for this epoch: 1789
[parf] sample: base04-sample00
[parf] sample: base04-sample01
[parf] sample: base04-sample02
[parf] sample: base04-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 119 -eva-remove-redundant-alarms -eva-plevel 537 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 171 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 148
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 22 -eva-split-return auto -eva-slevel 115 -eva-remove-redundant-alarms -eva-plevel 524 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 177 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 167
[parf] set eva options
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 23 -eva-slevel 115 -eva-remove-redundant-alarms -eva-plevel 529 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 189 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 144
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 108 -eva-remove-redundant-alarms -eva-plevel 526 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 164 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 151
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 400 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:354: Trace partitioning superposing up to 300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 500 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:354: Trace partitioning superposing up to 500 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 500 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] base: base05
[parf] Analysis time for this epoch: 1763
[parf] sample: base05-sample00
[parf] sample: base05-sample01
[parf] sample: base05-sample02
[parf] sample: base05-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 25 -eva-slevel 217 -eva-remove-redundant-alarms -eva-plevel 1059 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 337 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 293
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 216 -eva-remove-redundant-alarms -eva-plevel 1089 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 309 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 310
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 36 -eva-slevel 211 -eva-remove-redundant-alarms -eva-plevel 1018 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 319 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 298
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 29 -eva-slevel 209 -eva-remove-redundant-alarms -eva-plevel 1058 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 327 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 296
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 400 states
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 500 states
[eva] quicklz.c:354: Trace partitioning superposing up to 500 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:337: Trace partitioning superposing up to 500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 600 states
[eva] quicklz.c:354: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:543: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base05-sample00: subset of base? true
[parf] sample base05-sample01: subset of base? true
[parf] sample base05-sample03: subset of base? true
[parf] sample base05-sample02: subset of base? true
[parf] base: base06
[parf] Analysis time for this epoch: 1536
[parf] sample: base06-sample00
[parf] sample: base06-sample01
[parf] sample: base06-sample02
[parf] sample: base06-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 54 -eva-slevel 417 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 581
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 52 -eva-slevel 415 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 558
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 41 -eva-slevel 411 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 630
[parf] set eva options
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 43 -eva-split-return auto -eva-slevel 428 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 512 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 586
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 100 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 200 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 300 states
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:332: Trace partitioning superposing up to 400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:337: Trace partitioning superposing up to 800 states
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:332: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 900 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:337: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 500 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:332: Trace partitioning superposing up to 500 states
[eva] quicklz.c:332: Trace partitioning superposing up to 500 states
[eva] quicklz.c:332: Trace partitioning superposing up to 500 states
[eva] quicklz.c:332: Trace partitioning superposing up to 700 states
[eva] quicklz.c:332: Trace partitioning superposing up to 800 states
[eva] quicklz.c:332: Trace partitioning superposing up to 700 states
[eva] quicklz.c:332: Trace partitioning superposing up to 700 states
[eva] quicklz.c:354: Trace partitioning superposing up to 900 states
[eva] quicklz.c:332: Trace partitioning superposing up to 800 states
[eva] quicklz.c:332: Trace partitioning superposing up to 800 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:332: Trace partitioning superposing up to 800 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 900 states
[eva] quicklz.c:354: Trace partitioning superposing up to 900 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:332: Trace partitioning superposing up to 900 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1600 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:354: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1600 states
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:354: Trace partitioning superposing up to 1800 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:354: Trace partitioning superposing up to 1900 states
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:355: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fclose
[scope:rm_asserts] removing 1 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 20): 45% coverage.
  In these functions, 219 statements reached (out of 229): 95% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    3 warnings
  ----------------------------------------------------------------------------
  43 alarms generated by the analysis:
      17 invalid memory accesses
      13 accesses to uninitialized left-values
       5 integer overflows
       8 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     6 unknown     0 invalid     20 total
  70% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base06-sample01: subset of base? true
[parf] sample base06-sample00: subset of base? true
[parf] sample base06-sample02: subset of base? true
[parf] sample base06-sample03: subset of base? true
[parf] base: base07
[parf] Analysis time for this epoch: 448
[parf] sample: base07-sample00
[parf] sample: base07-sample01
[parf] sample: base07-sample02
[parf] sample: base07-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 76 -eva-split-return auto -eva-slevel 806 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 474 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1069
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 18 -eva-subdivide-non-linear 78 -eva-slevel 829 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1095
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 79 -eva-split-return auto -eva-slevel 833 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 502 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1083
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 90 -eva-slevel 820 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1139
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] compress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] compress_file.c:23: allocating variable __malloc_main_l23_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] compress_file.c:27: allocating variable __malloc_main_l27_0
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 300 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 400 states
[eva] quicklz.c:67: Trace partitioning superposing up to 500 states
[eva] quicklz.c:67: Trace partitioning superposing up to 500 states
[eva] quicklz.c:67: Trace partitioning superposing up to 500 states
[eva] quicklz.c:67: Trace partitioning superposing up to 500 states
[eva] quicklz.c:67: Trace partitioning superposing up to 600 states
[eva] quicklz.c:67: Trace partitioning superposing up to 600 states
[eva] quicklz.c:67: Trace partitioning superposing up to 600 states
[eva] quicklz.c:67: Trace partitioning superposing up to 600 states
[eva] quicklz.c:67: Trace partitioning superposing up to 700 states
[eva] quicklz.c:67: Trace partitioning superposing up to 700 states
[eva] quicklz.c:67: Trace partitioning superposing up to 700 states
[eva] quicklz.c:67: Trace partitioning superposing up to 700 states
[eva] quicklz.c:67: Trace partitioning superposing up to 800 states
[eva] quicklz.c:67: Trace partitioning superposing up to 800 states
[eva] quicklz.c:67: Trace partitioning superposing up to 800 states
[eva] quicklz.c:67: Trace partitioning superposing up to 800 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] quicklz.c:543: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: Trace partitioning superposing up to 200 states
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] using specification for function fclose
[eva] quicklz.c:292: assertion 'Eva,initialization' got final status invalid.
[eva] quicklz.c:292: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 20): 40% coverage.
  In these functions, 125 statements reached (out of 219): 57% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  11 alarms generated by the analysis:
       4 invalid memory accesses
       3 accesses to uninitialized left-values
       4 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     3 unknown     0 invalid     17 total
  82% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 20): 40% coverage.
  In these functions, 125 statements reached (out of 219): 57% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  11 alarms generated by the analysis:
       4 invalid memory accesses
       3 accesses to uninitialized left-values
       4 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     3 unknown     0 invalid     17 total
  82% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] quicklz.c:543: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: Trace partitioning superposing up to 100 states
[eva] quicklz.c:543: Trace partitioning superposing up to 200 states
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fwrite
[kernel] quicklz.c:70: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] using specification for function fclose
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:292: assertion 'Eva,initialization' got final status invalid.
[eva] quicklz.c:292: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 20): 40% coverage.
  In these functions, 125 statements reached (out of 219): 57% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  11 alarms generated by the analysis:
       4 invalid memory accesses
       3 accesses to uninitialized left-values
       4 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     3 unknown     0 invalid     17 total
  82% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  8 functions analyzed (out of 20): 40% coverage.
  In these functions, 125 statements reached (out of 219): 57% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  11 alarms generated by the analysis:
       4 invalid memory accesses
       3 accesses to uninitialized left-values
       4 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     3 unknown     0 invalid     17 total
  82% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base07-sample00: subset of base? true
[parf] sample base07-sample01: subset of base? true
[parf] sample base07-sample03: subset of base? true
[parf] sample base07-sample02: subset of base? true
[parf] Final parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 76 -eva-slevel 806 -eva-remove-redundant-alarms -eva-plevel 2000 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 256 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1024
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(state->hash[hash_0].offset, write)
[parf] alarm (  6): Memory_access(*src, read)
[parf] alarm (  7): Memory_access(*dst, write)
[parf] alarm (  8): Uninitialized(*src)
[parf] alarm (  9): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 10): Differing_blocks(dst, destination)
[parf] alarm ( 11): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 12): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 13): Differing_blocks(dst, destination)
[parf] alarm ( 14): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 15): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 16): Memory_access(*(src + n), read)
[parf] alarm ( 17): Uninitialized(*(src + n))
[parf] alarm ( 18): Memory_access(*src, read)
[parf] alarm ( 19): Uninitialized(*src)
[parf] alarm ( 20): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 21): Differing_blocks(dst, destination)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Memory_access(state->hash[hash].cache, read)
[parf] alarm ( 25): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 27): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 28): Differing_blocks(src, source)
[parf] alarm ( 29): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 30): Pointer_comparison(o, source)
[parf] alarm ( 31): Differing_blocks(src, o)
[parf] alarm ( 32): Pointer_comparison(src, o + 1)
[parf] alarm ( 33): Pointer_comparison(src, source + 3)
[parf] alarm ( 34): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 35): Uninitialized(*((ui32 *)src))
[parf] alarm ( 36): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 37): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 38): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 39): Memory_access(*src, read)
[parf] alarm ( 40): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 44): Memory_access(*src, read)
[parf] alarm ( 45): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 46): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 49): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 50): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 51): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 52): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 53): Uninitialized(*src)
[parf] alarm ( 54): Memory_access(*src, read)
[parf] alarm ( 55): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 56): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 57): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 58): Memory_access(state->stream_counter, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Memory_access(*dst, write)
[parf] alarm ( 61): Memory_access(*src, read)
[parf] alarm ( 62): Uninitialized(*src)
[parf] alarm ( 63): Memory_access(*(destination + 1), write)
[parf] alarm ( 64): Memory_access(*(destination + 2), write)
[parf] alarm ( 65): Memory_access(*destination, write)
[parf] alarm ( 66): Memory_access(*destination, write)
[parf] alarm ( 67): Memory_access(*destination, write)
[parf] alarm ( 68): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 8 -eva-plevel 29 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 25 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 6
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(*src, read)
[parf] alarm (  6): Memory_access(*dst, write)
[parf] alarm (  7): Uninitialized(*src)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 18): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 19): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 20): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 21): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 22): Pointer_comparison(o, source)
[parf] alarm ( 23): Pointer_comparison(src, o + 1)
[parf] alarm ( 24): Pointer_comparison(src, source + 3)
[parf] alarm ( 25): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 26): Uninitialized(*((ui32 *)src))
[parf] alarm ( 27): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 28): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 29): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 30): Memory_access(*src, read)
[parf] alarm ( 31): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 32): Uninitialized(*src)
[parf] alarm ( 33): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 34): Memory_access(*src, read)
[parf] alarm ( 35): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 36): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 39): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 40): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 41): Uninitialized(*src)
[parf] alarm ( 42): Memory_access(*src, read)
[parf] alarm ( 43): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 44): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 45): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*dst, write)
[parf] alarm ( 48): Memory_access(*src, read)
[parf] alarm ( 49): Uninitialized(*src)
[parf] alarm ( 50): Memory_access(*(destination + 1), write)
[parf] alarm ( 51): Memory_access(*(destination + 2), write)
[parf] alarm ( 52): Memory_access(*destination, write)
[parf] alarm ( 53): Memory_access(*destination, write)
[parf] alarm ( 54): Memory_access(*destination, write)
[parf] alarm ( 55): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-slevel 7 -eva-remove-redundant-alarms -eva-plevel 38 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Memory_access(*(src + n), read)
[parf] alarm ( 10): Uninitialized(*(src + n))
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 16): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 14 -eva-plevel 38 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls none -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 8
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(*src, read)
[parf] alarm (  6): Memory_access(*dst, write)
[parf] alarm (  7): Uninitialized(*src)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Uninitialized(*(src + n))
[parf] alarm ( 13): Memory_access(*(src + n), read)
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(src, source)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 20): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 21): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Pointer_comparison(o, source)
[parf] alarm ( 25): Differing_blocks(src, o)
[parf] alarm ( 26): Pointer_comparison(src, o + 1)
[parf] alarm ( 27): Pointer_comparison(src, source + 3)
[parf] alarm ( 28): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 29): Uninitialized(*((ui32 *)src))
[parf] alarm ( 30): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 37): Memory_access(*src, read)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 40): Uninitialized(*src)
[parf] alarm ( 41): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 42): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 43): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 44): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 45): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 46): Uninitialized(*src)
[parf] alarm ( 47): Memory_access(*src, read)
[parf] alarm ( 48): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Memory_access(*(destination + 1), write)
[parf] alarm ( 56): Memory_access(*(destination + 2), write)
[parf] alarm ( 57): Memory_access(*destination, write)
[parf] alarm ( 58): Memory_access(*destination, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-split-return auto -eva-slevel 14 -eva-remove-redundant-alarms -eva-plevel 37 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 21 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 14
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(*src, read)
[parf] alarm (  6): Memory_access(*dst, write)
[parf] alarm (  7): Uninitialized(*src)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(src, source)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 20): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 21): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Pointer_comparison(o, source)
[parf] alarm ( 25): Differing_blocks(src, o)
[parf] alarm ( 26): Pointer_comparison(src, o + 1)
[parf] alarm ( 27): Pointer_comparison(src, source + 3)
[parf] alarm ( 28): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 29): Uninitialized(*((ui32 *)src))
[parf] alarm ( 30): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 37): Memory_access(*src, read)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 40): Uninitialized(*src)
[parf] alarm ( 41): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 42): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 43): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 44): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 45): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 46): Uninitialized(*src)
[parf] alarm ( 47): Memory_access(*src, read)
[parf] alarm ( 48): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Memory_access(*(destination + 1), write)
[parf] alarm ( 56): Memory_access(*(destination + 2), write)
[parf] alarm ( 57): Memory_access(*destination, write)
[parf] alarm ( 58): Memory_access(*destination, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 4 -eva-slevel 17 -eva-remove-redundant-alarms -eva-plevel 76 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 28 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 15): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Pointer_comparison(o, source)
[parf] alarm ( 20): Pointer_comparison(src, o + 1)
[parf] alarm ( 21): Pointer_comparison(src, source + 3)
[parf] alarm ( 22): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 23): Uninitialized(*((ui32 *)src))
[parf] alarm ( 24): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 25): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 26): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 27): Memory_access(*src, read)
[parf] alarm ( 28): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 29): Uninitialized(*src)
[parf] alarm ( 30): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 31): Memory_access(*src, read)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Uninitialized(*src)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 36): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*src, read)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Memory_access(*dst, write)
[parf] alarm ( 43): Memory_access(*src, read)
[parf] alarm ( 44): Uninitialized(*src)
[parf] alarm ( 45): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 67 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(*src, read)
[parf] alarm (  6): Memory_access(*dst, write)
[parf] alarm (  7): Uninitialized(*src)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(src, source)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 20): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 21): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Pointer_comparison(o, source)
[parf] alarm ( 25): Differing_blocks(src, o)
[parf] alarm ( 26): Pointer_comparison(src, o + 1)
[parf] alarm ( 27): Pointer_comparison(src, source + 3)
[parf] alarm ( 28): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 29): Uninitialized(*((ui32 *)src))
[parf] alarm ( 30): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 37): Memory_access(*src, read)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 40): Uninitialized(*src)
[parf] alarm ( 41): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 42): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 43): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 44): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 45): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 46): Uninitialized(*src)
[parf] alarm ( 47): Memory_access(*src, read)
[parf] alarm ( 48): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Memory_access(*(destination + 1), write)
[parf] alarm ( 56): Memory_access(*(destination + 2), write)
[parf] alarm ( 57): Memory_access(*destination, write)
[parf] alarm ( 58): Memory_access(*destination, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample02 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 15 -eva-remove-redundant-alarms -eva-plevel 76 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 35 -eva-equality-through-calls formals -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 21
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Differing_blocks(src, source)
[parf] alarm (  4): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm (  5): Memory_access(*src, read)
[parf] alarm (  6): Memory_access(*dst, write)
[parf] alarm (  7): Uninitialized(*src)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 10): Pointer_comparison(src, last_matchstart)
[parf] alarm ( 11): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 12): Memory_access(*(src + n), read)
[parf] alarm ( 13): Uninitialized(*(src + n))
[parf] alarm ( 14): Memory_access(*src, read)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 17): Differing_blocks(src, source)
[parf] alarm ( 18): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 19): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 20): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 21): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 22): Differing_blocks(src, source)
[parf] alarm ( 23): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 24): Pointer_comparison(o, source)
[parf] alarm ( 25): Differing_blocks(src, o)
[parf] alarm ( 26): Pointer_comparison(src, o + 1)
[parf] alarm ( 27): Pointer_comparison(src, source + 3)
[parf] alarm ( 28): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 29): Uninitialized(*((ui32 *)src))
[parf] alarm ( 30): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 31): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 32): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 37): Memory_access(*src, read)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 40): Uninitialized(*src)
[parf] alarm ( 41): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 42): Differing_blocks(last_byte - 4, src - 5)
[parf] alarm ( 43): Signed_overflow((last_byte - 4) - (src - 5) >= -9223372036854775808)
[parf] alarm ( 44): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 45): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 46): Uninitialized(*src)
[parf] alarm ( 47): Memory_access(*src, read)
[parf] alarm ( 48): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 49): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 50): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Memory_access(*dst, write)
[parf] alarm ( 53): Memory_access(*src, read)
[parf] alarm ( 54): Uninitialized(*src)
[parf] alarm ( 55): Memory_access(*(destination + 1), write)
[parf] alarm ( 56): Memory_access(*(destination + 2), write)
[parf] alarm ( 57): Memory_access(*destination, write)
[parf] alarm ( 58): Memory_access(*destination, write)
[parf] alarm ( 59): Memory_access(*destination, write)
[parf] alarm ( 60): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample03 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 70 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 32 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 19
[parf] alarms:
[parf] alarm (  1): Memory_access(*destination, write)
[parf] alarm (  2): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  3): Memory_access(*src, read)
[parf] alarm (  4): Memory_access(*dst, write)
[parf] alarm (  5): Uninitialized(*src)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  8): Pointer_comparison(src, last_matchstart)
[parf] alarm (  9): Pointer_comparison(src, source + (size >> 1))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Uninitialized(*(src + n))
[parf] alarm ( 12): Memory_access(*src, read)
[parf] alarm ( 13): Uninitialized(*src)
[parf] alarm ( 14): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 16): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 17): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 18): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 19): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 20): Pointer_comparison(o, source)
[parf] alarm ( 21): Pointer_comparison(src, o + 1)
[parf] alarm ( 22): Pointer_comparison(src, source + 3)
[parf] alarm ( 23): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 24): Uninitialized(*((ui32 *)src))
[parf] alarm ( 25): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 26): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 27): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 28): Memory_access(*src, read)
[parf] alarm ( 29): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 30): Uninitialized(*src)
[parf] alarm ( 31): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 32): Memory_access(*src, read)
[parf] alarm ( 33): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 34): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 37): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 38): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 39): Uninitialized(*src)
[parf] alarm ( 40): Memory_access(*src, read)
[parf] alarm ( 41): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 42): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 43): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 44): Memory_access(*destination, write)
[parf] alarm ( 45): Memory_access(*dst, write)
[parf] alarm ( 46): Memory_access(*src, read)
[parf] alarm ( 47): Uninitialized(*src)
[parf] alarm ( 48): Memory_access(*(destination + 1), write)
[parf] alarm ( 49): Memory_access(*(destination + 2), write)
[parf] alarm ( 50): Memory_access(*destination, write)
[parf] alarm ( 51): Memory_access(*destination, write)
[parf] alarm ( 52): Memory_access(*destination, write)
[parf] alarm ( 53): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 8 -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 136 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 62 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 40
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 13 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 30 -eva-remove-redundant-alarms -eva-plevel 145 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 51 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample02 2" ======
[parf] Parameter: -eva-widening-delay 10 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 30 -eva-remove-redundant-alarms -eva-plevel 151 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 49 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 49
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample03 2" ======
[parf] Parameter: -eva-widening-delay 11 -eva-subdivide-non-linear 10 -eva-slevel 34 -eva-remove-redundant-alarms -eva-plevel 138 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 53 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 48
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 57 -eva-remove-redundant-alarms -eva-plevel 285 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 93 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 89
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 12 -eva-split-return auto -eva-slevel 59 -eva-remove-redundant-alarms -eva-plevel 272 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 101 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 75
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 15 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 55 -eva-remove-redundant-alarms -eva-plevel 265 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 91 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 77
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample03 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 13 -eva-slevel 60 -eva-remove-redundant-alarms -eva-plevel 281 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 94 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 75
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample00 2" ======
[parf] Parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 23 -eva-slevel 115 -eva-remove-redundant-alarms -eva-plevel 529 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 189 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 144
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 22 -eva-split-return auto -eva-slevel 115 -eva-remove-redundant-alarms -eva-plevel 524 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 177 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 167
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample02 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 108 -eva-remove-redundant-alarms -eva-plevel 526 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 164 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 151
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample03 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 119 -eva-remove-redundant-alarms -eva-plevel 537 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 171 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 148
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 25 -eva-slevel 217 -eva-remove-redundant-alarms -eva-plevel 1059 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 337 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 293
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 36 -eva-slevel 211 -eva-remove-redundant-alarms -eva-plevel 1018 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 319 -eva-equality-through-calls formals -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 298
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 29 -eva-slevel 209 -eva-remove-redundant-alarms -eva-plevel 1058 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 327 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 296
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample03 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 216 -eva-remove-redundant-alarms -eva-plevel 1089 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 309 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 310
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample00 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 54 -eva-slevel 417 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 581
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 52 -eva-slevel 415 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 558
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 41 -eva-slevel 411 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 630
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample03 2" ======
[parf] Parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 43 -eva-split-return auto -eva-slevel 428 -eva-remove-redundant-alarms -eva-plevel 3019 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 512 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 586
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Pointer_comparison(src, last_matchstart)
[parf] alarm (  8): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  9): Uninitialized(*(src + n))
[parf] alarm ( 10): Memory_access(*(src + n), read)
[parf] alarm ( 11): Memory_access(*src, read)
[parf] alarm ( 12): Uninitialized(*src)
[parf] alarm ( 13): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 14): Uninitialized(state->hash[hash].cache)
[parf] alarm ( 15): Memory_access(state->hash[i].offset, write)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset)
[parf] alarm ( 17): Pointer_comparison(o, source)
[parf] alarm ( 18): Pointer_comparison(src, o + 1)
[parf] alarm ( 19): Pointer_comparison(src, source + 3)
[parf] alarm ( 20): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 21): Uninitialized(*((ui32 *)src))
[parf] alarm ( 22): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 23): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 24): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 25): Memory_access(*src, read)
[parf] alarm ( 26): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 27): Uninitialized(*src)
[parf] alarm ( 28): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 31): Uninitialized(*src)
[parf] alarm ( 32): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 33): Memory_access(*(o + (src - old_src)), read)
[parf] alarm ( 34): Uninitialized(*(o + (src - old_src)))
[parf] alarm ( 35): Uninitialized(*src)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 38): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 39): Signed_overflow(src - old_src <= 9223372036854775807)
[parf] alarm ( 40): Memory_access(*dst, write)
[parf] alarm ( 41): Memory_access(*src, read)
[parf] alarm ( 42): Uninitialized(*src)
[parf] alarm ( 43): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample00 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 76 -eva-split-return auto -eva-slevel 806 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 474 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1069
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Uninitialized(state->hash[hash].cache)
[parf] alarm (  8): Memory_access(state->hash[i].offset, write)
[parf] alarm (  9): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 10): Uninitialized(*((ui32 *)src))
[parf] alarm ( 11): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample01 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 79 -eva-split-return auto -eva-slevel 833 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 502 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1083
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Uninitialized(state->hash[hash].cache)
[parf] alarm (  8): Memory_access(state->hash[i].offset, write)
[parf] alarm (  9): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 10): Uninitialized(*((ui32 *)src))
[parf] alarm ( 11): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample02 2" ======
[parf] Parameter: -eva-widening-delay 18 -eva-subdivide-non-linear 78 -eva-slevel 829 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1095
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Uninitialized(state->hash[hash].cache)
[parf] alarm (  8): Memory_access(state->hash[i].offset, write)
[parf] alarm (  9): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 10): Uninitialized(*((ui32 *)src))
[parf] alarm ( 11): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample03 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 90 -eva-slevel 820 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1139
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Uninitialized(state->hash[hash].cache)
[parf] alarm (  8): Memory_access(state->hash[i].offset, write)
[parf] alarm (  9): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 10): Uninitialized(*((ui32 *)src))
[parf] alarm ( 11): Pointer_comparison(src, last_byte)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 76 -eva-split-return auto -eva-slevel 806 -eva-remove-redundant-alarms -eva-plevel 4001 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 474 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1069
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_byte - 3)
[parf] alarm (  2): Memory_access(*src, read)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(*src)
[parf] alarm (  5): Pointer_comparison(src, last_matchstart)
[parf] alarm (  6): Pointer_comparison(src, last_matchstart)
[parf] alarm (  7): Uninitialized(state->hash[hash].cache)
[parf] alarm (  8): Memory_access(state->hash[i].offset, write)
[parf] alarm (  9): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 10): Uninitialized(*((ui32 *)src))
[parf] alarm ( 11): Pointer_comparison(src, last_byte)

real	22m41.664s
user	84m39.858s
sys	0m32.703s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing decompress_file.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 180
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 36 -eva-partition-history 2 -eva-min-loop-unroll 0 -eva-ilevel 20 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 3
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 26 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 12
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 5 -eva-remove-redundant-alarms -eva-plevel 31 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 24 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 5
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 29 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 6
[parf] @default,cvalue
[parf] @default,cvalue,equality,gauges
[parf] @default,cvalue,equality
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function fseek
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 270
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 11 -eva-split-return auto -eva-slevel 48 -eva-remove-redundant-alarms -eva-plevel 83 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 38
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 34 -eva-remove-redundant-alarms -eva-plevel 92 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 48 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 24
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 46 -eva-remove-redundant-alarms -eva-plevel 102 -eva-partition-history 3 -eva-min-loop-unroll 1 -eva-ilevel 42 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 22
[parf] @default,cvalue
[parf] @default,cvalue,equality
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[parf] @default,cvalue,equality,gauges
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 16 -eva-split-return auto -eva-slevel 44 -eva-remove-redundant-alarms -eva-plevel 88 -eva-partition-history 0 -eva-min-loop-unroll 3 -eva-ilevel 40 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 27
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] using specification for function Frama_C_make_unknown
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function Frama_C_interval
[eva] using specification for function fopen
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function fseek
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function fopen
[eva] using specification for function ftell
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fread
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] using specification for function fread
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 405
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 139 -eva-plevel 248 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 77 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 75
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 134 -eva-plevel 230 -eva-partition-history 1 -eva-min-loop-unroll 5 -eva-ilevel 93 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 79
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 43 -eva-slevel 124 -eva-remove-redundant-alarms -eva-plevel 261 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 66 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 95
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 25 -eva-split-return auto -eva-slevel 145 -eva-remove-redundant-alarms -eva-plevel 233 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 91 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 102
[parf] @default,cvalue,gauges
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fseek
[eva] using specification for function fopen
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] base: base03
[parf] Analysis time for this epoch: 607
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 64 -eva-split-return auto -eva-slevel 353 -eva-plevel 600 -eva-partition-history 5 -eva-min-loop-unroll 5 -eva-ilevel 222 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 224
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 68 -eva-split-return auto -eva-slevel 362 -eva-plevel 629 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 195 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 216
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 70 -eva-split-return auto -eva-slevel 372 -eva-remove-redundant-alarms -eva-plevel 604 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 217 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 262
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 100 -eva-slevel 338 -eva-remove-redundant-alarms -eva-plevel 649 -eva-partition-history 10 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 177 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 249
[parf] @default,cvalue,gauges
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function Frama_C_interval
[eva] using specification for function fopen
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] base: base04
[parf] Analysis time for this epoch: 911
[parf] sample: base04-sample00
[parf] sample: base04-sample01
[parf] sample: base04-sample02
[parf] sample: base04-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 183 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 584
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 638
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 187 -eva-split-return auto -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 657
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 177 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 597
[parf] @default,cvalue,gauges
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] base: base05
[parf] Analysis time for this epoch: 1366
[parf] sample: base05-sample00
[parf] sample: base05-sample01
[parf] sample: base05-sample02
[parf] sample: base05-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base05-sample00: subset of base? true
[parf] sample base05-sample01: subset of base? true
[parf] sample base05-sample03: subset of base? true
[parf] sample base05-sample02: subset of base? true
[parf] base: base06
[parf] Analysis time for this epoch: 1797
[parf] sample: base06-sample00
[parf] sample: base06-sample01
[parf] sample: base06-sample02
[parf] sample: base06-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges -eva-auto-loop-unroll 1025
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base06-sample01: subset of base? true
[parf] sample base06-sample00: subset of base? true
[parf] sample base06-sample02: subset of base? true
[parf] sample base06-sample03: subset of base? true
[parf] base: base07
[parf] Analysis time for this epoch: 1797
[parf] sample: base07-sample00
[parf] sample: base07-sample01
[parf] sample: base07-sample02
[parf] sample: base07-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges -eva-auto-loop-unroll 1025
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges
[parf] @default,cvalue,equality,octagon,symbolic-locations
[parf] @default,cvalue
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(same) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] decompress_file.c:14: allocating variable __malloc_main_l14_0
[eva] using specification for function fopen
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function fseek
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function ftell
[eva] using specification for function ftell
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] decompress_file.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] decompress_file.c:29: allocating variable __malloc_main_l29_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:826: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  7 functions analyzed (out of 20): 35% coverage.
  In these functions, 59 statements reached (out of 75): 78% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    1 warning
  ----------------------------------------------------------------------------
  8 alarms generated by the analysis:
       5 invalid memory accesses
       3 accesses to uninitialized left-values
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid     4 unknown     0 invalid     16 total
  75% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base07-sample00: subset of base? true
[parf] sample base07-sample01: subset of base? true
[parf] sample base07-sample03: subset of base? true
[parf] sample base07-sample02: subset of base? true
[parf] Final parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 5 -eva-remove-redundant-alarms -eva-plevel 31 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 24 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 5
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 26 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 12
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 36 -eva-partition-history 2 -eva-min-loop-unroll 0 -eva-ilevel 20 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 3
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 10 -eva-remove-redundant-alarms -eva-plevel 29 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 19 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 6
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 34 -eva-remove-redundant-alarms -eva-plevel 92 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 3 -eva-ilevel 48 -eva-equality-through-calls formals -eva-domains cvalue,equality -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 11 -eva-split-return auto -eva-slevel 48 -eva-remove-redundant-alarms -eva-plevel 83 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 37 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 38
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample02 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 46 -eva-remove-redundant-alarms -eva-plevel 102 -eva-partition-history 3 -eva-min-loop-unroll 1 -eva-ilevel 42 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base01-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 16 -eva-split-return auto -eva-slevel 44 -eva-remove-redundant-alarms -eva-plevel 88 -eva-partition-history 0 -eva-min-loop-unroll 3 -eva-ilevel 40 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 27
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 134 -eva-plevel 230 -eva-partition-history 1 -eva-min-loop-unroll 5 -eva-ilevel 93 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 79
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 139 -eva-plevel 248 -eva-partition-history 1 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 77 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 75
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample02 2" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 43 -eva-slevel 124 -eva-remove-redundant-alarms -eva-plevel 261 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 66 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 95
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base02-sample03 2" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 25 -eva-split-return auto -eva-slevel 145 -eva-remove-redundant-alarms -eva-plevel 233 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 91 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 102
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 64 -eva-split-return auto -eva-slevel 353 -eva-plevel 600 -eva-partition-history 5 -eva-min-loop-unroll 5 -eva-ilevel 222 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 224
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 68 -eva-split-return auto -eva-slevel 362 -eva-plevel 629 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 195 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 216
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 100 -eva-slevel 338 -eva-remove-redundant-alarms -eva-plevel 649 -eva-partition-history 10 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 177 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 249
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base03-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 70 -eva-split-return auto -eva-slevel 372 -eva-remove-redundant-alarms -eva-plevel 604 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 217 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 262
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 177 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 597
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 183 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 584
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample02 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 638
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base04-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 187 -eva-split-return auto -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 657
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base05-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base05-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base05-sample02 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base05-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base06-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base06-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base06-sample02 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base06-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base07-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,gauges -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base07-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-split-return auto -eva-slevel 5001 -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base07-sample02 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] ====== project "base07-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 221 -eva-slevel 5001 -eva-remove-redundant-alarms -eva-plevel 2011 -eva-partition-history 11 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 265 -eva-equality-through-calls none -eva-domains cvalue,equality,octagon,symbolic-locations -eva-auto-loop-unroll 1025
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*source, read)
[parf] alarm (  2): Memory_access(state->stream_counter, write)
[parf] alarm (  3): Uninitialized(i)
[parf] alarm (  4): Uninitialized(*((ui32 *)src))
[parf] alarm (  5): Memory_access(*((ui32 *)src), read)
[parf] alarm (  6): Uninitialized(*source)
[parf] alarm (  7): Memory_access(*source, read)
[parf] alarm (  8): Memory_access(*source, read)

real	0m8.075s
user	0m11.295s
sys	0m1.079s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing stream_compress.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24
[eva] stream_compress.c:28: allocating variable __malloc_main_l28
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  94 alarms generated by the analysis:
      23 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      16 accesses to uninitialized left-values
      15 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    10 valid    13 unknown     0 invalid     23 total
  43% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 179
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 7
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-slevel 11 -eva-plevel 29 -eva-partition-history 2 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 4 -eva-plevel 28 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 18 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 10
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 31 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 20 -eva-equality-through-calls formals -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 13
[parf] @default,cvalue,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function fopen
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] using specification for function rand
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function fread
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] using specification for function rand
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function rand
[eva] using specification for function fread
[eva] using specification for function rand
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:271: Trace partitioning superposing up to 100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  86 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      15 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  75 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      14 accesses to uninitialized left-values
       8 integer overflows
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    15 valid     8 unknown     0 invalid     23 total
  65% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 17 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  80 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      14 integer overflows
      14 accesses to uninitialized left-values
      11 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     9 unknown     0 invalid     23 total
  60% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  89 alarms generated by the analysis:
      22 integer overflows
      21 invalid memory accesses
      20 accesses out of bounds index
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? false
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 359
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 59 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 18 -eva-remove-redundant-alarms -eva-plevel 68 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 42 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 7 -eva-split-return auto -eva-slevel 17 -eva-remove-redundant-alarms -eva-plevel 68 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 42 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 9 -eva-split-return auto -eva-slevel 19 -eva-remove-redundant-alarms -eva-plevel 73 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 39 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 17
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21100 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21500 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17800 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:394: Trace partitioning superposing up to 21600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23600 states
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? false
[parf] sample base01-sample00: subset of base? false
[parf] base: base02
[parf] Analysis time for this epoch: 719
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 13 -eva-split-return auto -eva-slevel 23 -eva-remove-redundant-alarms -eva-plevel 114 -eva-partition-history 7 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 74 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 38
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 24 -eva-remove-redundant-alarms -eva-plevel 120 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 69 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 48
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 7 -eva-split-return auto -eva-slevel 26 -eva-remove-redundant-alarms -eva-plevel 113 -eva-partition-history 6 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 59 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 40
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 20 -eva-remove-redundant-alarms -eva-plevel 110 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 63 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 42
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 24200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18100 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 25300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 18900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 19900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 20900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 21900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 22800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 23800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 24800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34400 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 24900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 25900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 26900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 27900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 28900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 29900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 30800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 31900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 32900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 33900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 34900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 35800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36600 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 36700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 36900 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 37900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 38900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 39900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 40800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 41000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 41100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 41200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 41300 states
[parf] base: base03
[parf] Analysis time for this epoch: 703
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 15 -eva-remove-redundant-alarms -eva-plevel 92 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 45 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 18 -eva-remove-redundant-alarms -eva-plevel 87 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 46 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 35
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 17 -eva-remove-redundant-alarms -eva-plevel 93 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 51 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 19 -eva-remove-redundant-alarms -eva-plevel 88 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 44 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function fread
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] using specification for function rand
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 16000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  85 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      18 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    14 valid     9 unknown     0 invalid     23 total
  60% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  Some errors and warnings have been raised during the analysis:
    by the Eva analyzer:      0 errors    0 warnings
    by the Frama-C kernel:    0 errors    2 warnings
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    13 valid    10 unknown     0 invalid     23 total
  56% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 16900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 17500 states
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    11 unknown     0 invalid     23 total
  52% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_compress.c:35: starting to merge loop iterations
[eva] using specification for function fclose
[scope:rm_asserts] removing 18 assertion(s)
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  9 functions analyzed (out of 18): 50% coverage.
  In these functions, 276 statements reached (out of 294): 93% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  87 alarms generated by the analysis:
      21 invalid memory accesses
      20 accesses out of bounds index
      20 integer overflows
      14 accesses to uninitialized left-values
      12 others
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    11 unknown     0 invalid     23 total
  52% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? false
[parf] sample base03-sample02: subset of base? false
[parf] sample base03-sample03: subset of base? false
[parf] base: base04
[parf] Analysis time for this epoch: 48
[parf] sample: base04-sample00
[parf] sample: base04-sample01
[parf] sample: base04-sample02
[parf] sample: base04-sample03
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 9 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 28 -eva-remove-redundant-alarms -eva-plevel 169 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 90 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 55
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 27 -eva-remove-redundant-alarms -eva-plevel 166 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 95 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 65
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 7 -eva-split-return auto -eva-slevel 33 -eva-remove-redundant-alarms -eva-plevel 182 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 81 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 54
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 10 -eva-split-return auto -eva-slevel 31 -eva-remove-redundant-alarms -eva-plevel 180 -eva-partition-history 5 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 89 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 64
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] using specification for function Frama_C_make_unknown
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] stream_compress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_compress.c:24: allocating variable __malloc_main_l24_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function rand
[eva] using specification for function fread
[eva] using specification for function fread
[eva] stream_compress.c:28: allocating variable __malloc_main_l28_0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function rand
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] using specification for function rand
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[kernel] quicklz.c:472: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[kernel] quicklz.c:537: Warning: 
  all target addresses were invalid. This path is assumed to be dead.
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:388: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:404: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:429: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 600 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:271: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 3900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 4900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 5900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 6200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 7900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 8900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 9900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 10900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 11900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:67: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 12900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:404: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13000 states
[eva] quicklz.c:404: Trace partitioning superposing up to 200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 13900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14600 states
[eva] quicklz.c:508: starting to merge loop iterations
[eva] quicklz.c:543: starting to merge loop iterations
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14700 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14800 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 14900 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15000 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15100 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15200 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15300 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15400 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15500 states
[eva] quicklz.c:394: Trace partitioning superposing up to 15600 states
[parf] Final parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 15 -eva-remove-redundant-alarms -eva-plevel 87 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 44 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 28
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(dst, destination)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(state->stream_counter)
[parf] alarm ( 36): Memory_access(*src, read)
[parf] alarm ( 37): Uninitialized(*src)
[parf] alarm ( 38): Memory_access(*dst, write)
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Memory_access(*destination, write)
[parf] alarm ( 42): Uninitialized(*(src + matchlen))
[parf] alarm ( 43): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 44): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 45): Memory_access(*(src + matchlen), read)
[parf] alarm ( 46): Memory_access(*destination, write)
[parf] alarm ( 47): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 48): Uninitialized(*((ui32 *)src))
[parf] alarm ( 49): Differing_blocks(dst, destination)
[parf] alarm ( 50): Differing_blocks(dst, destination)
[parf] alarm ( 51): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 52): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 55): Index_out_of_bound(hash >= 0)
[parf] alarm ( 56): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 57): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 58): Pointer_comparison(o, src - 2)
[parf] alarm ( 59): Memory_access(*(src + m), read)
[parf] alarm ( 60): Uninitialized(*(src + m))
[parf] alarm ( 61): Memory_access(*(o + m), read)
[parf] alarm ( 62): Uninitialized(*(o + m))
[parf] alarm ( 63): Pointer_comparison(o, offset2)
[parf] alarm ( 64): Index_out_of_bound(hash < 4096)
[parf] alarm ( 65): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 66): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 67): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 68): Index_out_of_bound(hash >= 0)
[parf] alarm ( 69): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 70): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 71): Index_out_of_bound(hash < 4096)
[parf] alarm ( 72): Index_out_of_bound(hash >= 0)
[parf] alarm ( 73): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 74): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 75): Differing_blocks(src, o)
[parf] alarm ( 76): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 77): Differing_blocks(src, o)
[parf] alarm ( 78): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 79): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 80): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 81): Index_out_of_bound(hash < 4096)
[parf] alarm ( 82): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 83): Index_out_of_bound(hash >= 0)
[parf] alarm ( 84): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 85): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 86): Index_out_of_bound(hash < 4096)
[parf] alarm ( 87): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 88): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 89): Index_out_of_bound(hash >= 0)
[parf] alarm ( 90): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 91): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 92): Index_out_of_bound(hash < 4096)
[parf] alarm ( 93): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 94): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-slevel 11 -eva-plevel 29 -eva-partition-history 2 -eva-min-loop-unroll 0 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 20): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 21): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 22): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 23): Uninitialized(*src)
[parf] alarm ( 24): Memory_access(*dst, write)
[parf] alarm ( 25): Index_out_of_bound(hash >= 0)
[parf] alarm ( 26): Index_out_of_bound(hash < 4096)
[parf] alarm ( 27): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 28): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 29): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 30): Index_out_of_bound(hash < 4096)
[parf] alarm ( 31): Index_out_of_bound(hash >= 0)
[parf] alarm ( 32): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 33): Pointer_comparison(src, last_byte)
[parf] alarm ( 34): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Uninitialized(*(src + matchlen))
[parf] alarm ( 37): Memory_access(*src, read)
[parf] alarm ( 38): Uninitialized(*src)
[parf] alarm ( 39): Memory_access(*dst, write)
[parf] alarm ( 40): Uninitialized(*(src + matchlen))
[parf] alarm ( 41): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 42): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 43): Memory_access(*(src + matchlen), read)
[parf] alarm ( 44): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 45): Uninitialized(*((ui32 *)src))
[parf] alarm ( 46): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 47): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 48): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 49): Index_out_of_bound(hash < 4096)
[parf] alarm ( 50): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 51): Index_out_of_bound(hash >= 0)
[parf] alarm ( 52): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 53): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 54): Pointer_comparison(o, src - 2)
[parf] alarm ( 55): Memory_access(*(src + m), read)
[parf] alarm ( 56): Uninitialized(*(src + m))
[parf] alarm ( 57): Memory_access(*(o + m), read)
[parf] alarm ( 58): Uninitialized(*(o + m))
[parf] alarm ( 59): Pointer_comparison(o, offset2)
[parf] alarm ( 60): Index_out_of_bound(hash < 4096)
[parf] alarm ( 61): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 62): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 63): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 64): Index_out_of_bound(hash >= 0)
[parf] alarm ( 65): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 66): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 67): Index_out_of_bound(hash < 4096)
[parf] alarm ( 68): Index_out_of_bound(hash >= 0)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 70): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Differing_blocks(src, o)
[parf] alarm ( 74): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 75): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 76): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 77): Index_out_of_bound(hash < 4096)
[parf] alarm ( 78): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 79): Index_out_of_bound(hash >= 0)
[parf] alarm ( 80): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 81): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 82): Index_out_of_bound(hash < 4096)
[parf] alarm ( 83): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 84): Index_out_of_bound(hash >= 0)
[parf] alarm ( 85): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 86): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 87): Index_out_of_bound(hash < 4096)
[parf] alarm ( 88): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 89): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 4 -eva-plevel 28 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 18 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Differing_blocks(src, source)
[parf] alarm (  6): Memory_access(state->stream_counter, read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Differing_blocks(last_byte - 4, src)
[parf] alarm (  9): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 10): Uninitialized(*src)
[parf] alarm ( 11): Memory_access(*dst, write)
[parf] alarm ( 12): Index_out_of_bound(hash >= 0)
[parf] alarm ( 13): Index_out_of_bound(hash < 4096)
[parf] alarm ( 14): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 15): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 17): Index_out_of_bound(hash < 4096)
[parf] alarm ( 18): Index_out_of_bound(hash >= 0)
[parf] alarm ( 19): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 20): Pointer_comparison(src, last_byte)
[parf] alarm ( 21): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 22): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 23): Uninitialized(*(src + matchlen))
[parf] alarm ( 24): Memory_access(*src, read)
[parf] alarm ( 25): Uninitialized(*src)
[parf] alarm ( 26): Memory_access(*dst, write)
[parf] alarm ( 27): Uninitialized(*(src + matchlen))
[parf] alarm ( 28): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 29): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 30): Memory_access(*(src + matchlen), read)
[parf] alarm ( 31): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 32): Uninitialized(*((ui32 *)src))
[parf] alarm ( 33): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 34): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 35): Index_out_of_bound(hash < 4096)
[parf] alarm ( 36): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 37): Index_out_of_bound(hash >= 0)
[parf] alarm ( 38): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 39): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 40): Pointer_comparison(o, src - 2)
[parf] alarm ( 41): Memory_access(*(src + m), read)
[parf] alarm ( 42): Uninitialized(*(src + m))
[parf] alarm ( 43): Memory_access(*(o + m), read)
[parf] alarm ( 44): Uninitialized(*(o + m))
[parf] alarm ( 45): Pointer_comparison(o, offset2)
[parf] alarm ( 46): Index_out_of_bound(hash < 4096)
[parf] alarm ( 47): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 48): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 49): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 50): Index_out_of_bound(hash >= 0)
[parf] alarm ( 51): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 52): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 56): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 57): Differing_blocks(src, o)
[parf] alarm ( 58): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 59): Differing_blocks(src, o)
[parf] alarm ( 60): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 61): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 65): Index_out_of_bound(hash >= 0)
[parf] alarm ( 66): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 67): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 68): Index_out_of_bound(hash < 4096)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 70): Index_out_of_bound(hash >= 0)
[parf] alarm ( 71): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 72): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 33 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 17 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 7
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Differing_blocks(src, source)
[parf] alarm (  6): Memory_access(state->stream_counter, read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm (  9): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 10): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 11): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 12): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 15): Uninitialized(*src)
[parf] alarm ( 16): Memory_access(*dst, write)
[parf] alarm ( 17): Index_out_of_bound(hash >= 0)
[parf] alarm ( 18): Index_out_of_bound(hash < 4096)
[parf] alarm ( 19): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 20): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 21): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 22): Index_out_of_bound(hash < 4096)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 25): Pointer_comparison(src, last_byte)
[parf] alarm ( 26): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 27): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 28): Uninitialized(*(src + matchlen))
[parf] alarm ( 29): Memory_access(*src, read)
[parf] alarm ( 30): Uninitialized(*src)
[parf] alarm ( 31): Memory_access(*dst, write)
[parf] alarm ( 32): Uninitialized(*(src + matchlen))
[parf] alarm ( 33): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 34): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 35): Memory_access(*(src + matchlen), read)
[parf] alarm ( 36): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 37): Uninitialized(*((ui32 *)src))
[parf] alarm ( 38): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 39): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 40): Index_out_of_bound(hash < 4096)
[parf] alarm ( 41): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 42): Index_out_of_bound(hash >= 0)
[parf] alarm ( 43): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 44): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 45): Pointer_comparison(o, src - 2)
[parf] alarm ( 46): Memory_access(*(src + m), read)
[parf] alarm ( 47): Uninitialized(*(src + m))
[parf] alarm ( 48): Memory_access(*(o + m), read)
[parf] alarm ( 49): Uninitialized(*(o + m))
[parf] alarm ( 50): Pointer_comparison(o, offset2)
[parf] alarm ( 51): Index_out_of_bound(hash < 4096)
[parf] alarm ( 52): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 53): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 54): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 55): Index_out_of_bound(hash >= 0)
[parf] alarm ( 56): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 57): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Index_out_of_bound(hash >= 0)
[parf] alarm ( 60): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 61): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 62): Differing_blocks(src, o)
[parf] alarm ( 63): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 64): Differing_blocks(src, o)
[parf] alarm ( 65): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 66): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 68): Index_out_of_bound(hash < 4096)
[parf] alarm ( 69): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 70): Index_out_of_bound(hash >= 0)
[parf] alarm ( 71): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 72): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)
[parf] alarm ( 76): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 77): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 78): Index_out_of_bound(hash < 4096)
[parf] alarm ( 79): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 80): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 4 -eva-slevel 8 -eva-remove-redundant-alarms -eva-plevel 31 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 20 -eva-equality-through-calls formals -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 13
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Memory_access(state->stream_counter, read)
[parf] alarm ( 11): Uninitialized(state->stream_counter)
[parf] alarm ( 12): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 15): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 16): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 17): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 19): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 20): Uninitialized(*src)
[parf] alarm ( 21): Memory_access(*dst, write)
[parf] alarm ( 22): Index_out_of_bound(hash >= 0)
[parf] alarm ( 23): Index_out_of_bound(hash < 4096)
[parf] alarm ( 24): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 25): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 27): Index_out_of_bound(hash < 4096)
[parf] alarm ( 28): Index_out_of_bound(hash >= 0)
[parf] alarm ( 29): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 30): Pointer_comparison(src, last_byte)
[parf] alarm ( 31): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 32): Uninitialized(state->stream_counter)
[parf] alarm ( 33): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Memory_access(*src, read)
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*dst, write)
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Index_out_of_bound(hash < 4096)
[parf] alarm ( 47): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 48): Index_out_of_bound(hash >= 0)
[parf] alarm ( 49): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 50): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 51): Pointer_comparison(o, src - 2)
[parf] alarm ( 52): Memory_access(*(src + m), read)
[parf] alarm ( 53): Uninitialized(*(src + m))
[parf] alarm ( 54): Memory_access(*(o + m), read)
[parf] alarm ( 55): Uninitialized(*(o + m))
[parf] alarm ( 56): Pointer_comparison(o, offset2)
[parf] alarm ( 57): Index_out_of_bound(hash < 4096)
[parf] alarm ( 58): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 59): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 61): Index_out_of_bound(hash >= 0)
[parf] alarm ( 62): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 63): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 64): Index_out_of_bound(hash < 4096)
[parf] alarm ( 65): Index_out_of_bound(hash >= 0)
[parf] alarm ( 66): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 67): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 68): Differing_blocks(src, o)
[parf] alarm ( 69): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 70): Differing_blocks(src, o)
[parf] alarm ( 71): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 72): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 73): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 74): Index_out_of_bound(hash < 4096)
[parf] alarm ( 75): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 76): Index_out_of_bound(hash >= 0)
[parf] alarm ( 77): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 79): Index_out_of_bound(hash < 4096)
[parf] alarm ( 80): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 81): Index_out_of_bound(hash >= 0)
[parf] alarm ( 82): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 84): Index_out_of_bound(hash < 4096)
[parf] alarm ( 85): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 86): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 59 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 34 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 20): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 21): Uninitialized(*src)
[parf] alarm ( 22): Memory_access(*dst, write)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 26): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 27): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 28): Index_out_of_bound(hash < 4096)
[parf] alarm ( 29): Index_out_of_bound(hash >= 0)
[parf] alarm ( 30): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 31): Pointer_comparison(src, last_byte)
[parf] alarm ( 32): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 33): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Memory_access(*src, read)
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*dst, write)
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 47): Index_out_of_bound(hash < 4096)
[parf] alarm ( 48): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 49): Index_out_of_bound(hash >= 0)
[parf] alarm ( 50): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 51): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 52): Pointer_comparison(o, src - 2)
[parf] alarm ( 53): Memory_access(*(src + m), read)
[parf] alarm ( 54): Uninitialized(*(src + m))
[parf] alarm ( 55): Memory_access(*(o + m), read)
[parf] alarm ( 56): Uninitialized(*(o + m))
[parf] alarm ( 57): Pointer_comparison(o, offset2)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 61): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 62): Index_out_of_bound(hash >= 0)
[parf] alarm ( 63): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 64): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 65): Index_out_of_bound(hash < 4096)
[parf] alarm ( 66): Index_out_of_bound(hash >= 0)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 79): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 84): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 87): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 18 -eva-remove-redundant-alarms -eva-plevel 68 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 42 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 22
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 20): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 21): Uninitialized(*src)
[parf] alarm ( 22): Memory_access(*dst, write)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 26): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 27): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 28): Index_out_of_bound(hash < 4096)
[parf] alarm ( 29): Index_out_of_bound(hash >= 0)
[parf] alarm ( 30): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 31): Pointer_comparison(src, last_byte)
[parf] alarm ( 32): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*src)
[parf] alarm ( 35): Memory_access(*dst, write)
[parf] alarm ( 36): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 47): Index_out_of_bound(hash < 4096)
[parf] alarm ( 48): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 49): Index_out_of_bound(hash >= 0)
[parf] alarm ( 50): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 51): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 52): Pointer_comparison(o, src - 2)
[parf] alarm ( 53): Memory_access(*(src + m), read)
[parf] alarm ( 54): Uninitialized(*(src + m))
[parf] alarm ( 55): Memory_access(*(o + m), read)
[parf] alarm ( 56): Uninitialized(*(o + m))
[parf] alarm ( 57): Pointer_comparison(o, offset2)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 61): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 62): Index_out_of_bound(hash >= 0)
[parf] alarm ( 63): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 64): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 65): Index_out_of_bound(hash < 4096)
[parf] alarm ( 66): Index_out_of_bound(hash >= 0)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 79): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 84): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 87): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 15 -eva-remove-redundant-alarms -eva-plevel 92 -eva-partition-history 3 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 45 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 20): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 21): Uninitialized(*src)
[parf] alarm ( 22): Memory_access(*dst, write)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 26): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 27): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 28): Index_out_of_bound(hash < 4096)
[parf] alarm ( 29): Index_out_of_bound(hash >= 0)
[parf] alarm ( 30): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 31): Pointer_comparison(src, last_byte)
[parf] alarm ( 32): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 33): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 34): Uninitialized(*(src + matchlen))
[parf] alarm ( 35): Memory_access(*src, read)
[parf] alarm ( 36): Uninitialized(*src)
[parf] alarm ( 37): Memory_access(*dst, write)
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 47): Index_out_of_bound(hash < 4096)
[parf] alarm ( 48): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 49): Index_out_of_bound(hash >= 0)
[parf] alarm ( 50): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 51): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 52): Pointer_comparison(o, src - 2)
[parf] alarm ( 53): Memory_access(*(src + m), read)
[parf] alarm ( 54): Uninitialized(*(src + m))
[parf] alarm ( 55): Memory_access(*(o + m), read)
[parf] alarm ( 56): Uninitialized(*(o + m))
[parf] alarm ( 57): Pointer_comparison(o, offset2)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 61): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 62): Index_out_of_bound(hash >= 0)
[parf] alarm ( 63): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 64): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 65): Index_out_of_bound(hash < 4096)
[parf] alarm ( 66): Index_out_of_bound(hash >= 0)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 79): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 84): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 87): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 18 -eva-remove-redundant-alarms -eva-plevel 87 -eva-partition-history 2 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 46 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 35
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  7): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  8): Differing_blocks(src, source)
[parf] alarm (  9): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 10): Memory_access(state->stream_counter, read)
[parf] alarm ( 11): Uninitialized(state->stream_counter)
[parf] alarm ( 12): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 14): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 15): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 16): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 17): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 19): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 20): Uninitialized(*src)
[parf] alarm ( 21): Memory_access(*dst, write)
[parf] alarm ( 22): Index_out_of_bound(hash >= 0)
[parf] alarm ( 23): Index_out_of_bound(hash < 4096)
[parf] alarm ( 24): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 25): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 26): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 27): Index_out_of_bound(hash < 4096)
[parf] alarm ( 28): Index_out_of_bound(hash >= 0)
[parf] alarm ( 29): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 30): Pointer_comparison(src, last_byte)
[parf] alarm ( 31): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 32): Memory_access(*src, read)
[parf] alarm ( 33): Uninitialized(*src)
[parf] alarm ( 34): Memory_access(*dst, write)
[parf] alarm ( 35): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 36): Uninitialized(*(src + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 39): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 40): Memory_access(*(src + matchlen), read)
[parf] alarm ( 41): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 42): Uninitialized(*((ui32 *)src))
[parf] alarm ( 43): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 44): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 45): Index_out_of_bound(hash < 4096)
[parf] alarm ( 46): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 47): Index_out_of_bound(hash >= 0)
[parf] alarm ( 48): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 49): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 50): Pointer_comparison(o, src - 2)
[parf] alarm ( 51): Memory_access(*(src + m), read)
[parf] alarm ( 52): Uninitialized(*(src + m))
[parf] alarm ( 53): Memory_access(*(o + m), read)
[parf] alarm ( 54): Uninitialized(*(o + m))
[parf] alarm ( 55): Pointer_comparison(o, offset2)
[parf] alarm ( 56): Index_out_of_bound(hash < 4096)
[parf] alarm ( 57): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 58): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 59): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 60): Index_out_of_bound(hash >= 0)
[parf] alarm ( 61): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 62): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Index_out_of_bound(hash >= 0)
[parf] alarm ( 65): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 66): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 67): Differing_blocks(src, o)
[parf] alarm ( 68): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 72): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)
[parf] alarm ( 76): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 77): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 78): Index_out_of_bound(hash < 4096)
[parf] alarm ( 79): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 80): Index_out_of_bound(hash >= 0)
[parf] alarm ( 81): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 82): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 83): Index_out_of_bound(hash < 4096)
[parf] alarm ( 84): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 85): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 6 -eva-split-return auto -eva-slevel 19 -eva-remove-redundant-alarms -eva-plevel 88 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 44 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 34
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 20): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 21): Uninitialized(*src)
[parf] alarm ( 22): Memory_access(*dst, write)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 26): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 27): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 28): Index_out_of_bound(hash < 4096)
[parf] alarm ( 29): Index_out_of_bound(hash >= 0)
[parf] alarm ( 30): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 31): Pointer_comparison(src, last_byte)
[parf] alarm ( 32): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*src)
[parf] alarm ( 35): Memory_access(*dst, write)
[parf] alarm ( 36): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 47): Index_out_of_bound(hash < 4096)
[parf] alarm ( 48): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 49): Index_out_of_bound(hash >= 0)
[parf] alarm ( 50): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 51): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 52): Pointer_comparison(o, src - 2)
[parf] alarm ( 53): Memory_access(*(src + m), read)
[parf] alarm ( 54): Uninitialized(*(src + m))
[parf] alarm ( 55): Memory_access(*(o + m), read)
[parf] alarm ( 56): Uninitialized(*(o + m))
[parf] alarm ( 57): Pointer_comparison(o, offset2)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 61): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 62): Index_out_of_bound(hash >= 0)
[parf] alarm ( 63): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 64): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 65): Index_out_of_bound(hash < 4096)
[parf] alarm ( 66): Index_out_of_bound(hash >= 0)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 79): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 84): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 87): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] ====== project "base03-sample03 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 5 -eva-split-return auto -eva-slevel 17 -eva-remove-redundant-alarms -eva-plevel 93 -eva-partition-history 4 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 51 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 28
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Signed_overflow((src - source) - ((src - source) >> 5) <= 9223372036854775807)
[parf] alarm (  6): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm (  7): Signed_overflow(src - source >= -9223372036854775808)
[parf] alarm (  8): Signed_overflow((src - source) - ((src - source) >> 5) >= -9223372036854775808)
[parf] alarm (  9): Differing_blocks(src, source)
[parf] alarm ( 10): Signed_overflow(src - source <= 9223372036854775807)
[parf] alarm ( 11): Memory_access(state->stream_counter, read)
[parf] alarm ( 12): Uninitialized(state->stream_counter)
[parf] alarm ( 13): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 14): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 15): Signed_overflow((last_byte - 4) - src <= 9223372036854775807)
[parf] alarm ( 16): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 17): Signed_overflow((last_byte - 4) - src >= -9223372036854775808)
[parf] alarm ( 18): Signed_overflow(((last_byte - 4) - src) + (long)1 <= 9223372036854775807)
[parf] alarm ( 19): Signed_overflow(((last_byte - 4) - src) + (long)1 >= -9223372036854775808)
[parf] alarm ( 20): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 21): Uninitialized(*src)
[parf] alarm ( 22): Memory_access(*dst, write)
[parf] alarm ( 23): Index_out_of_bound(hash >= 0)
[parf] alarm ( 24): Index_out_of_bound(hash < 4096)
[parf] alarm ( 25): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 26): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 27): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 28): Index_out_of_bound(hash < 4096)
[parf] alarm ( 29): Index_out_of_bound(hash >= 0)
[parf] alarm ( 30): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 31): Pointer_comparison(src, last_byte)
[parf] alarm ( 32): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 33): Memory_access(*src, read)
[parf] alarm ( 34): Uninitialized(*src)
[parf] alarm ( 35): Memory_access(*dst, write)
[parf] alarm ( 36): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 37): Uninitialized(*(src + matchlen))
[parf] alarm ( 38): Uninitialized(*(src + matchlen))
[parf] alarm ( 39): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 40): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 41): Memory_access(*(src + matchlen), read)
[parf] alarm ( 42): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 43): Uninitialized(*((ui32 *)src))
[parf] alarm ( 44): Signed_overflow(dst - destination <= 9223372036854775807)
[parf] alarm ( 45): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 46): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 47): Index_out_of_bound(hash < 4096)
[parf] alarm ( 48): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 49): Index_out_of_bound(hash >= 0)
[parf] alarm ( 50): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 51): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 52): Pointer_comparison(o, src - 2)
[parf] alarm ( 53): Memory_access(*(src + m), read)
[parf] alarm ( 54): Uninitialized(*(src + m))
[parf] alarm ( 55): Memory_access(*(o + m), read)
[parf] alarm ( 56): Uninitialized(*(o + m))
[parf] alarm ( 57): Pointer_comparison(o, offset2)
[parf] alarm ( 58): Index_out_of_bound(hash < 4096)
[parf] alarm ( 59): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 60): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 61): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 62): Index_out_of_bound(hash >= 0)
[parf] alarm ( 63): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 64): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 65): Index_out_of_bound(hash < 4096)
[parf] alarm ( 66): Index_out_of_bound(hash >= 0)
[parf] alarm ( 67): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 68): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 69): Differing_blocks(src, o)
[parf] alarm ( 70): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 71): Differing_blocks(src, o)
[parf] alarm ( 72): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 73): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 74): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 75): Index_out_of_bound(hash < 4096)
[parf] alarm ( 76): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 77): Index_out_of_bound(hash >= 0)
[parf] alarm ( 78): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 79): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 80): Index_out_of_bound(hash < 4096)
[parf] alarm ( 81): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 82): Index_out_of_bound(hash >= 0)
[parf] alarm ( 83): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 84): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 85): Index_out_of_bound(hash < 4096)
[parf] alarm ( 86): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 87): Index_out_of_bound(hash >= 0)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 4 -eva-plevel 28 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 0 -eva-ilevel 18 -eva-equality-through-calls none -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 10
[parf] alarms:
[parf] alarm (  1): Pointer_comparison(src, last_matchstart)
[parf] alarm (  2): Memory_access(*dst, write)
[parf] alarm (  3): Pointer_comparison(src, last_matchstart)
[parf] alarm (  4): Pointer_comparison(src, source + (size >> 1))
[parf] alarm (  5): Differing_blocks(src, source)
[parf] alarm (  6): Memory_access(state->stream_counter, read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Differing_blocks(last_byte - 4, src)
[parf] alarm (  9): Differing_blocks(last_byte - 4, src)
[parf] alarm ( 10): Uninitialized(*src)
[parf] alarm ( 11): Memory_access(*dst, write)
[parf] alarm ( 12): Index_out_of_bound(hash >= 0)
[parf] alarm ( 13): Index_out_of_bound(hash < 4096)
[parf] alarm ( 14): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 15): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 16): Uninitialized(state->hash[hash].offset[0])
[parf] alarm ( 17): Index_out_of_bound(hash < 4096)
[parf] alarm ( 18): Index_out_of_bound(hash >= 0)
[parf] alarm ( 19): Memory_access(state->hash[hash].offset[0], read)
[parf] alarm ( 20): Pointer_comparison(src, last_byte)
[parf] alarm ( 21): Pointer_comparison(offset2, src - 2)
[parf] alarm ( 22): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 23): Uninitialized(*(src + matchlen))
[parf] alarm ( 24): Memory_access(*src, read)
[parf] alarm ( 25): Uninitialized(*src)
[parf] alarm ( 26): Memory_access(*dst, write)
[parf] alarm ( 27): Uninitialized(*(src + matchlen))
[parf] alarm ( 28): Uninitialized(*(offset2 + matchlen))
[parf] alarm ( 29): Memory_access(*(offset2 + matchlen), read)
[parf] alarm ( 30): Memory_access(*(src + matchlen), read)
[parf] alarm ( 31): Memory_access(*((ui32 *)src), read)
[parf] alarm ( 32): Uninitialized(*((ui32 *)src))
[parf] alarm ( 33): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 34): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 35): Index_out_of_bound(hash < 4096)
[parf] alarm ( 36): Memory_access(state->hash[hash].offset[k], read)
[parf] alarm ( 37): Index_out_of_bound(hash >= 0)
[parf] alarm ( 38): Uninitialized(state->hash[hash].offset[k])
[parf] alarm ( 39): Memory_access(*((ui16 *)dst), write)
[parf] alarm ( 40): Pointer_comparison(o, src - 2)
[parf] alarm ( 41): Memory_access(*(src + m), read)
[parf] alarm ( 42): Uninitialized(*(src + m))
[parf] alarm ( 43): Memory_access(*(o + m), read)
[parf] alarm ( 44): Uninitialized(*(o + m))
[parf] alarm ( 45): Pointer_comparison(o, offset2)
[parf] alarm ( 46): Index_out_of_bound(hash < 4096)
[parf] alarm ( 47): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 48): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 49): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 50): Index_out_of_bound(hash >= 0)
[parf] alarm ( 51): Signed_overflow((int)c + 1 >= -2147483648)
[parf] alarm ( 52): Signed_overflow((int)c + 1 <= 2147483647)
[parf] alarm ( 53): Index_out_of_bound(hash < 4096)
[parf] alarm ( 54): Index_out_of_bound(hash >= 0)
[parf] alarm ( 55): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 56): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 57): Differing_blocks(src, o)
[parf] alarm ( 58): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 59): Differing_blocks(src, o)
[parf] alarm ( 60): Signed_overflow(src - o <= 9223372036854775807)
[parf] alarm ( 61): Signed_overflow(src - o >= -9223372036854775808)
[parf] alarm ( 62): Memory_access(state->hash_counter[hash], read)
[parf] alarm ( 63): Index_out_of_bound(hash < 4096)
[parf] alarm ( 64): Uninitialized(state->hash_counter[hash])
[parf] alarm ( 65): Index_out_of_bound(hash >= 0)
[parf] alarm ( 66): Signed_overflow((int)state->hash_counter[hash] + 1 <= 2147483647)
[parf] alarm ( 67): Signed_overflow((int)state->hash_counter[hash] + 1 >= -2147483648)
[parf] alarm ( 68): Index_out_of_bound(hash < 4096)
[parf] alarm ( 69): Memory_access(state->hash_counter[hash], write)
[parf] alarm ( 70): Index_out_of_bound(hash >= 0)
[parf] alarm ( 71): Index_out_of_bound((int)c & (16 - 1) < 16)
[parf] alarm ( 72): Index_out_of_bound((int)c & (16 - 1) >= 0)
[parf] alarm ( 73): Index_out_of_bound(hash < 4096)
[parf] alarm ( 74): Memory_access(state->hash[hash].offset[(int)c & (16 - 1)], write)
[parf] alarm ( 75): Index_out_of_bound(hash >= 0)

real	30m3.088s
user	90m21.803s
sys	9m42.427s
Entering directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
Leaving directory '/Users/carolt/Abstract_Interpretation/Tools_Development/Frama-c-Plugin/src/demo_1'
[kernel] Parsing stream_decompress.c (with preprocessing)
[kernel] Parsing quicklz.c (with preprocessing)
[kernel] Parsing fc_stubs.c (with preprocessing)
mkdir: .parf_temp_files: File exists
rm: .parf_temp_files/*.sav: No such file or directory
[parf] checkout project: project "default"
[parf] init parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] @default,cvalue
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[parf] base: base00
[parf] Analysis time for this epoch: 180
[parf] sample: base00-sample00
[parf] sample: base00-sample01
[parf] sample: base00-sample02
[parf] sample: base00-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 9
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 26 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 17 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 1 -eva-remove-redundant-alarms -eva-plevel 20 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 9
[parf] parameters: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 6 -eva-plevel 28 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 11
[parf] @default,cvalue,equality,symbolic-locations
[parf] @default,cvalue,gauges
[parf] @default,cvalue
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function Frama_C_interval
[eva] using specification for function fopen
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fread
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] using specification for function fopen
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] using specification for function fread
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:215: starting to merge loop iterations
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fwrite
[eva] quicklz.c:568: starting to merge loop iterations
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  16 alarms generated by the analysis:
       7 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] quicklz.c:568: starting to merge loop iterations
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base00-sample00: subset of base? true
[parf] sample base00-sample01: subset of base? true
[parf] sample base00-sample03: subset of base? true
[parf] sample base00-sample02: subset of base? true
[parf] base: base01
[parf] Analysis time for this epoch: 360
[parf] sample: base01-sample00
[parf] sample: base01-sample01
[parf] sample: base01-sample02
[parf] sample: base01-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 8 -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 52 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 41 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 7 -eva-split-return auto -eva-slevel 16 -eva-plevel 56 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 36 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 13 -eva-remove-redundant-alarms -eva-plevel 57 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 26 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] set eva options
[parf] parameters: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 14 -eva-plevel 56 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 33 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] @default,cvalue,octagon
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] using specification for function fread
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] quicklz.c:568: starting to merge loop iterations
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva] using specification for function fclose
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  17 alarms generated by the analysis:
       8 invalid memory accesses
       7 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base01-sample01: subset of base? true
[parf] sample base01-sample00: subset of base? true
[parf] sample base01-sample02: subset of base? true
[parf] sample base01-sample03: subset of base? true
[parf] base: base02
[parf] Analysis time for this epoch: 540
[parf] sample: base02-sample00
[parf] sample: base02-sample01
[parf] sample: base02-sample02
[parf] sample: base02-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 18 -eva-slevel 49 -eva-plevel 122 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 75 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 39
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 42 -eva-remove-redundant-alarms -eva-plevel 108 -eva-partition-history 1 -eva-min-loop-unroll 4 -eva-ilevel 70 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 43
[parf] parameters: -eva-widening-delay 6 -eva-subdivide-non-linear 16 -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 134 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 63 -eva-equality-through-calls formals -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 56
[parf] parameters: -eva-widening-delay 5 -eva-subdivide-non-linear 10 -eva-slevel 53 -eva-plevel 135 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 66 -eva-equality-through-calls formals -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 40
[parf] @default,cvalue,symbolic-locations
[parf] @default,cvalue,symbolic-locations
[parf] @default,cvalue,equality,gauges
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 200 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base02-sample00: subset of base? true
[parf] sample base02-sample01: subset of base? true
[parf] sample base02-sample03: subset of base? true
[parf] sample base02-sample02: subset of base? true
[parf] base: base03
[parf] Analysis time for this epoch: 1080
[parf] sample: base03-sample00
[parf] sample: base03-sample01
[parf] sample: base03-sample02
[parf] sample: base03-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 7 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 71 -eva-plevel 198 -eva-partition-history 0 -eva-min-loop-unroll 4 -eva-ilevel 117 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 81
[parf] set eva options
[parf] parameters: -eva-widening-delay 8 -eva-subdivide-non-linear 17 -eva-split-return auto -eva-slevel 62 -eva-plevel 226 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 143 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 71
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 67 -eva-remove-redundant-alarms -eva-plevel 208 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 117 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 90
[parf] parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 76 -eva-remove-redundant-alarms -eva-plevel 220 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 119 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 86
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:215: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] quicklz.c:568: starting to merge loop iterations
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] quicklz.c:587: Trace partitioning superposing up to 100 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base03-sample01: subset of base? true
[parf] sample base03-sample00: subset of base? true
[parf] sample base03-sample02: subset of base? true
[parf] sample base03-sample03: subset of base? true
[parf] base: base04
[parf] Analysis time for this epoch: 1792
[parf] sample: base04-sample00
[parf] sample: base04-sample01
[parf] sample: base04-sample02
[parf] sample: base04-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 31 -eva-split-return auto -eva-slevel 115 -eva-plevel 403 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 8 -eva-ilevel 245 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 129
[parf] parameters: -eva-widening-delay 12 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 122 -eva-plevel 395 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 227 -eva-equality-through-calls formals -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 140
[parf] set eva options
[parf] parameters: -eva-widening-delay 14 -eva-subdivide-non-linear 31 -eva-split-return auto -eva-slevel 123 -eva-remove-redundant-alarms -eva-plevel 412 -eva-partition-history 0 -eva-min-loop-unroll 5 -eva-ilevel 233 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 145
[parf] parameters: -eva-widening-delay 14 -eva-subdivide-non-linear 30 -eva-split-return auto -eva-slevel 124 -eva-plevel 361 -eva-partition-history 0 -eva-min-loop-unroll 5 -eva-ilevel 232 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 141
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,gauges,symbolic-locations
[parf] @default,cvalue,equality,gauges,octagon
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base04-sample01: subset of base? true
[parf] sample base04-sample00: subset of base? true
[parf] sample base04-sample02: subset of base? true
[parf] sample base04-sample03: subset of base? true
[parf] base: base05
[parf] Analysis time for this epoch: 1787
[parf] sample: base05-sample00
[parf] sample: base05-sample01
[parf] sample: base05-sample02
[parf] sample: base05-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 49 -eva-split-return auto -eva-slevel 232 -eva-remove-redundant-alarms -eva-plevel 714 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 466 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 262
[parf] set eva options
[parf] parameters: -eva-widening-delay 16 -eva-subdivide-non-linear 48 -eva-split-return auto -eva-slevel 248 -eva-remove-redundant-alarms -eva-plevel 698 -eva-partition-history 0 -eva-min-loop-unroll 6 -eva-ilevel 469 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 260
[parf] run eva: start
[parf] set eva options
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 46 -eva-split-return auto -eva-slevel 226 -eva-remove-redundant-alarms -eva-plevel 730 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 447 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 247
[parf] set eva options
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 225 -eva-plevel 742 -eva-partition-history 0 -eva-min-loop-unroll 8 -eva-ilevel 419 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 254
[parf] @default,cvalue,equality,gauges,symbolic-locations
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,gauges
[parf] @default,cvalue,gauges
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 900 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:664: Trace partitioning superposing up to 1100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base05-sample00: subset of base? true
[parf] sample base05-sample01: subset of base? true
[parf] sample base05-sample03: subset of base? true
[parf] sample base05-sample02: subset of base? true
[parf] base: base06
[parf] Analysis time for this epoch: 1764
[parf] sample: base06-sample00
[parf] sample: base06-sample01
[parf] sample: base06-sample02
[parf] sample: base06-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 19 -eva-subdivide-non-linear 71 -eva-split-return auto -eva-slevel 459 -eva-remove-redundant-alarms -eva-plevel 1427 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 487 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 482
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 75 -eva-split-return auto -eva-slevel 470 -eva-remove-redundant-alarms -eva-plevel 1386 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 512 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 467
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 79 -eva-split-return auto -eva-slevel 441 -eva-remove-redundant-alarms -eva-plevel 1397 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 493
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 81 -eva-split-return auto -eva-slevel 458 -eva-plevel 1389 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 503 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 464
[parf] @default,cvalue,equality,gauges
[parf] @default,cvalue,gauges,octagon,symbolic-locations
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,equality,gauges,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: Trace partitioning superposing up to 500 states
[eva] quicklz.c:568: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 700 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 1600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:664: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:664: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2000 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:664: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1600 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base06-sample01: subset of base? true
[parf] sample base06-sample00: subset of base? true
[parf] sample base06-sample02: subset of base? true
[parf] sample base06-sample03: subset of base? true
[parf] base: base07
[parf] Analysis time for this epoch: 1719
[parf] sample: base07-sample00
[parf] sample: base07-sample01
[parf] sample: base07-sample02
[parf] sample: base07-sample03
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] run eva: start
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] set eva options
[parf] parameters: -eva-widening-delay 20 -eva-subdivide-non-linear 138 -eva-split-return auto -eva-slevel 853 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-min-loop-unroll 8 -eva-ilevel 502 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 928
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 147 -eva-split-return auto -eva-slevel 866 -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 481 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 936
[parf] parameters: -eva-widening-delay 21 -eva-subdivide-non-linear 144 -eva-split-return auto -eva-slevel 897 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 507 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 875
[parf] parameters: -eva-widening-delay 17 -eva-subdivide-non-linear 143 -eva-split-return auto -eva-slevel 877 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 508 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 923
[parf] @default,cvalue,gauges,octagon
[parf] @default,cvalue,gauges
[parf] @default,cvalue,equality,gauges,octagon
[parf] @default,cvalue,equality,gauges,octagon,symbolic-locations
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Splitting return states on:
  \return(tmpfile) == 0 (auto)
  \return(tmpnam) == 0 (auto)
  \return(fopen) == 0 (auto)
  \return(fdopen) == 0 (auto)
  \return(freopen) == 0 (auto)
  \return(fgets) == 0 (auto)
  \return(gets) == 0 (auto)
  \return(fread) == 0 (auto)
  \return(popen) == 0 (auto)
  \return(fmemopen) == 0 (auto)
  \return(seed48) == 0 (auto)
  \return(calloc) == 0 (auto)
  \return(malloc) == 0 (auto)
  \return(realloc) == 0 (auto)
  \return(reallocarray) == 0 (auto)
  \return(getenv) == 0 (auto)
  \return(bsearch) == 0 (auto)
  \return(memchr) == 0 (auto)
  \return(memcpy) == 0 (auto)
  \return(mempcpy) == 0 (auto)
  \return(memmove) == 0 (auto)
  \return(memset) == 0 (auto)
  \return(strchr) == 0 (auto)
  \return(strchrnul) == 0 (auto)
  \return(strrchr) == 0 (auto)
  \return(strpbrk) == 0 (auto)
  \return(strstr) == 0 (auto)
  \return(strcasestr) == 0 (auto)
  \return(strtok) == 0 (auto)
  \return(strtok_r) == 0 (auto)
  \return(strsep) == 0 (auto)
  \return(strerror) == 0 (auto)
  \return(strcpy) == 0 (auto)
  \return(strncpy) == 0 (auto)
  \return(stpcpy) == 0 (auto)
  \return(strcat) == 0 (auto)
  \return(strncat) == 0 (auto)
  \return(strdup) == 0 (auto)
  \return(strndup) == 0 (auto)
  \return(strsignal) == 0 (auto)
  \return(qlz_size_compressed) == 0 (auto)
  \return(Frama_C_nondet_ptr) == 0 (auto)
  \return(Frama_C_malloc_fresh) == 0 (auto)
  \return(fast_read) == 1 (auto)
[eva] Analyzing a complete application starting at eva_main
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_interval
[eva] Analyzing a complete application starting at eva_main
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_interval
[eva] using specification for function Frama_C_make_unknown
[eva] using specification for function Frama_C_make_unknown
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:19: allocating variable __malloc_main_l19_0
[eva] using specification for function fopen
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:27: allocating variable __malloc_main_l27_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] stream_decompress.c:30: allocating variable __malloc_main_l30_0
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] FRAMAC_SHARE/libc/string.h:134: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memset
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] using specification for function fread
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] quicklz.c:116: cannot properly split on \result == 1
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] quicklz.c:192: cannot properly split on \result == 0
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] FRAMAC_SHARE/libc/string.h:101: 
  cannot evaluate ACSL term, unsupported ACSL construct: logic function memcmp
[eva] quicklz.c:664: Trace partitioning superposing up to 300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 400 states
[eva] quicklz.c:568: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2900 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3100 states
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:568: starting to merge loop iterations
[eva] quicklz.c:664: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3300 states
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:702: starting to merge loop iterations
[eva] using specification for function printf_va_1
[eva] using specification for function fwrite
[eva] quicklz.c:664: Trace partitioning superposing up to 1000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1100 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3800 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3900 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 600 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 4000 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 800 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 600 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 700 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 800 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] stream_decompress.c:39: Trace partitioning superposing up to 900 states
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 1800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2500 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 2800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3000 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3400 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3600 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3700 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3800 states
[eva] quicklz.c:664: Trace partitioning superposing up to 3800 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 600 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 700 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 800 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[eva] stream_decompress.c:39: Trace partitioning superposing up to 100 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 200 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 300 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 400 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 500 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 600 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 700 states
[eva] stream_decompress.c:39: Trace partitioning superposing up to 800 states
[eva] stream_decompress.c:39: starting to merge loop iterations
[eva] using specification for function fclose
[eva] quicklz.c:81: assertion 'Eva,initialization' got final status invalid.
[eva:summary] ====== ANALYSIS SUMMARY ======
  ----------------------------------------------------------------------------
  10 functions analyzed (out of 18): 55% coverage.
  In these functions, 156 statements reached (out of 164): 95% coverage.
  ----------------------------------------------------------------------------
  No errors or warnings raised during the analysis.
  ----------------------------------------------------------------------------
  13 alarms generated by the analysis:
       6 invalid memory accesses
       5 accesses to uninitialized left-values
       2 others
  1 of them is a sure alarm (invalid status).
  ----------------------------------------------------------------------------
  Evaluation of the logical properties reached by the analysis:
    Assertions        0 valid     0 unknown     0 invalid      0 total
    Preconditions    12 valid    13 unknown     0 invalid     25 total
  48% of the logical properties reached have been proven.
  ----------------------------------------------------------------------------
[parf] run eva: finished
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] sample base07-sample00: subset of base? true
[parf] sample base07-sample01: subset of base? true
[parf] sample base07-sample03: subset of base? true
[parf] sample base07-sample02: subset of base? true
[parf] Final parameters: -eva-widening-delay 10 -eva-subdivide-non-linear 138 -eva-split-return auto -eva-slevel 853 -eva-plevel 2000 -eva-partition-history 0 -eva-min-loop-unroll 4 -eva-ilevel 256 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 875
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[kernel] Warning: 1 state in saved file ignored. It is invalid in this Frama-C configuration.
[parf] ================================= Summary ==================================
[parf] ====== project "Initial Base 2" ======
[parf] Parameter: -eva-widening-delay 1 -eva-subdivide-non-linear 0 -eva-slevel 0 -eva-plevel 10 -eva-partition-history 0 -eva-min-loop-unroll 0 -eva-ilevel 8 -eva-equality-through-calls none -eva-domains cvalue -eva-auto-loop-unroll 0
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample00 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 26 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 17 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample01 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 2 -eva-slevel 12 -eva-remove-redundant-alarms -eva-plevel 23 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue,equality,symbolic-locations -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample02 2" ======
[parf] Parameter: -eva-widening-delay 2 -eva-subdivide-non-linear 3 -eva-slevel 6 -eva-plevel 28 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 18 -eva-equality-through-calls formals -eva-domains cvalue -eva-auto-loop-unroll 11
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 11): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 12): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 14): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 15): Uninitialized(*((ui32 *)src))
[parf] alarm ( 16): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base00-sample03 2" ======
[parf] Parameter: -eva-widening-delay 4 -eva-subdivide-non-linear 1 -eva-split-return auto -eva-slevel 1 -eva-remove-redundant-alarms -eva-plevel 20 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 16 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 9
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample00 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 7 -eva-split-return auto -eva-slevel 16 -eva-plevel 56 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 36 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample01 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 8 -eva-slevel 11 -eva-remove-redundant-alarms -eva-plevel 52 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 41 -eva-equality-through-calls formals -eva-domains cvalue,octagon -eva-auto-loop-unroll 24
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample02 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 4 -eva-split-return auto -eva-slevel 14 -eva-plevel 56 -eva-partition-history 0 -eva-min-loop-unroll 1 -eva-ilevel 33 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base01-sample03 2" ======
[parf] Parameter: -eva-widening-delay 3 -eva-subdivide-non-linear 8 -eva-split-return auto -eva-slevel 13 -eva-remove-redundant-alarms -eva-plevel 57 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 26 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 20
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(state->stream_counter)
[parf] alarm (  8): Memory_access(state->stream_counter, read)
[parf] alarm (  9): Uninitialized(*source)
[parf] alarm ( 10): Memory_access(*source, read)
[parf] alarm ( 11): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm ( 12): Uninitialized(*((ui32 *)(src + f)))
[parf] alarm ( 13): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 14): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 15): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 16): Uninitialized(*((ui32 *)src))
[parf] alarm ( 17): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample00 2" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 18 -eva-slevel 49 -eva-plevel 122 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 75 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample01 2" ======
[parf] Parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 16 -eva-slevel 35 -eva-remove-redundant-alarms -eva-plevel 134 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 2 -eva-ilevel 63 -eva-equality-through-calls formals -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 56
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample02 2" ======
[parf] Parameter: -eva-widening-delay 5 -eva-subdivide-non-linear 10 -eva-slevel 53 -eva-plevel 135 -eva-partition-history 0 -eva-min-loop-unroll 2 -eva-ilevel 66 -eva-equality-through-calls formals -eva-domains cvalue,symbolic-locations -eva-auto-loop-unroll 40
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base02-sample03 2" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 14 -eva-split-return auto -eva-slevel 42 -eva-remove-redundant-alarms -eva-plevel 108 -eva-partition-history 1 -eva-min-loop-unroll 4 -eva-ilevel 70 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 43
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample00 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 23 -eva-split-return auto -eva-slevel 67 -eva-remove-redundant-alarms -eva-plevel 208 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 117 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 90
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample01 2" ======
[parf] Parameter: -eva-widening-delay 10 -eva-subdivide-non-linear 15 -eva-split-return auto -eva-slevel 76 -eva-remove-redundant-alarms -eva-plevel 220 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 4 -eva-ilevel 119 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 86
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample02 2" ======
[parf] Parameter: -eva-widening-delay 8 -eva-subdivide-non-linear 17 -eva-split-return auto -eva-slevel 62 -eva-plevel 226 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 5 -eva-ilevel 143 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 71
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base03-sample03 2" ======
[parf] Parameter: -eva-widening-delay 7 -eva-subdivide-non-linear 19 -eva-split-return auto -eva-slevel 71 -eva-plevel 198 -eva-partition-history 0 -eva-min-loop-unroll 4 -eva-ilevel 117 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 81
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample00 2" ======
[parf] Parameter: -eva-widening-delay 14 -eva-subdivide-non-linear 30 -eva-split-return auto -eva-slevel 124 -eva-plevel 361 -eva-partition-history 0 -eva-min-loop-unroll 5 -eva-ilevel 232 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 141
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample01 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 21 -eva-split-return auto -eva-slevel 122 -eva-plevel 395 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 227 -eva-equality-through-calls formals -eva-domains cvalue,gauges,symbolic-locations -eva-auto-loop-unroll 140
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample02 2" ======
[parf] Parameter: -eva-widening-delay 14 -eva-subdivide-non-linear 31 -eva-split-return auto -eva-slevel 123 -eva-remove-redundant-alarms -eva-plevel 412 -eva-partition-history 0 -eva-min-loop-unroll 5 -eva-ilevel 233 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 145
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base04-sample03 2" ======
[parf] Parameter: -eva-widening-delay 12 -eva-subdivide-non-linear 31 -eva-split-return auto -eva-slevel 115 -eva-plevel 403 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 8 -eva-ilevel 245 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 129
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample00 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 40 -eva-split-return auto -eva-slevel 225 -eva-plevel 742 -eva-partition-history 0 -eva-min-loop-unroll 8 -eva-ilevel 419 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 254
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample01 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 46 -eva-split-return auto -eva-slevel 226 -eva-remove-redundant-alarms -eva-plevel 730 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 447 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 247
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample02 2" ======
[parf] Parameter: -eva-widening-delay 16 -eva-subdivide-non-linear 48 -eva-split-return auto -eva-slevel 248 -eva-remove-redundant-alarms -eva-plevel 698 -eva-partition-history 0 -eva-min-loop-unroll 6 -eva-ilevel 469 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 260
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base05-sample03 2" ======
[parf] Parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 49 -eva-split-return auto -eva-slevel 232 -eva-remove-redundant-alarms -eva-plevel 714 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 466 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 262
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 75 -eva-split-return auto -eva-slevel 470 -eva-remove-redundant-alarms -eva-plevel 1386 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 512 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 467
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample01 2" ======
[parf] Parameter: -eva-widening-delay 19 -eva-subdivide-non-linear 71 -eva-split-return auto -eva-slevel 459 -eva-remove-redundant-alarms -eva-plevel 1427 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 487 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 482
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample02 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 81 -eva-split-return auto -eva-slevel 458 -eva-plevel 1389 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 503 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,symbolic-locations -eva-auto-loop-unroll 464
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base06-sample03 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 79 -eva-split-return auto -eva-slevel 441 -eva-remove-redundant-alarms -eva-plevel 1397 -eva-partition-history 0 -eva-min-loop-unroll 9 -eva-ilevel 513 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 493
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample00 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 147 -eva-split-return auto -eva-slevel 866 -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 481 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon,symbolic-locations -eva-auto-loop-unroll 936
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample01 2" ======
[parf] Parameter: -eva-widening-delay 21 -eva-subdivide-non-linear 144 -eva-split-return auto -eva-slevel 897 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 507 -eva-equality-through-calls formals -eva-domains cvalue,gauges -eva-auto-loop-unroll 875
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample02 2" ======
[parf] Parameter: -eva-widening-delay 17 -eva-subdivide-non-linear 143 -eva-split-return auto -eva-slevel 877 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 9 -eva-ilevel 508 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges,octagon -eva-auto-loop-unroll 923
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] ====== project "base07-sample03 2" ======
[parf] Parameter: -eva-widening-delay 20 -eva-subdivide-non-linear 138 -eva-split-return auto -eva-slevel 853 -eva-remove-redundant-alarms -eva-plevel 3387 -eva-partition-history 0 -eva-min-loop-unroll 8 -eva-ilevel 502 -eva-equality-through-calls formals -eva-domains cvalue,gauges,octagon -eva-auto-loop-unroll 928
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)
[parf] ============================================================================
[parf] Final parameter: -eva-widening-delay 6 -eva-subdivide-non-linear 18 -eva-slevel 49 -eva-plevel 122 -eva-partition-history 0 -eva-octagon-through-calls -eva-min-loop-unroll 6 -eva-ilevel 75 -eva-equality-through-calls formals -eva-domains cvalue,equality,gauges -eva-auto-loop-unroll 39
[parf] alarms:
[parf] alarm (  1): Memory_access(*src, read)
[parf] alarm (  2): Uninitialized(*src)
[parf] alarm (  3): Memory_access(*dst, write)
[parf] alarm (  4): Uninitialized(i)
[parf] alarm (  5): Uninitialized(*((ui32 *)src))
[parf] alarm (  6): Memory_access(*((ui32 *)src), read)
[parf] alarm (  7): Uninitialized(*source)
[parf] alarm (  8): Memory_access(*((ui32 *)(src + f)), read)
[parf] alarm (  9): Memory_access(*((ui32 *)(dst + f)), write)
[parf] alarm ( 10): Pointer_comparison((void *)dst, (void *)last_matchstart)
[parf] alarm ( 11): Memory_access(*((ui32 *)dst), write)
[parf] alarm ( 12): Uninitialized(*((ui32 *)src))
[parf] alarm ( 13): Pointer_comparison((void *)dst, (void *)last_destination_byte)

real	2m31.339s
user	7m21.936s
sys	0m3.456s
